{"version":3,"file":"av.esm.js","sources":["../lib/aurora.js/src/core/base.coffee","../lib/aurora.js/src/core/buffer.coffee","../lib/aurora.js/src/core/bufferlist.coffee","../lib/aurora.js/src/core/stream.coffee","../lib/aurora.js/src/core/underflow.coffee","../lib/aurora.js/src/core/bitstream.coffee","../lib/aurora.js/src/core/events.coffee","../node_modules/rollup-plugin-node-polyfills/polyfills/global.js","../node_modules/rollup-plugin-node-polyfills/polyfills/buffer-es6.js","../node_modules/rollup-plugin-node-polyfills/polyfills/process-es6.js","../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/capability.js","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","../node_modules/rollup-plugin-node-polyfills/polyfills/util.js","../node_modules/rollup-plugin-node-polyfills/polyfills/events.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js","../node_modules/rollup-plugin-node-polyfills/polyfills/string-decoder.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js","../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js","../node_modules/rollup-plugin-node-polyfills/polyfills/stream.js","../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/response.js","../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/request.js","../node_modules/rollup-plugin-node-polyfills/polyfills/http-lib/to-arraybuffer.js","../node_modules/rollup-plugin-node-polyfills/polyfills/punycode.js","../node_modules/rollup-plugin-node-polyfills/polyfills/qs.js","../node_modules/rollup-plugin-node-polyfills/polyfills/url.js","../node_modules/rollup-plugin-node-polyfills/polyfills/http.js","../lib/aurora.js/src/sources/node/http.coffee","../lib/aurora.js/src/sources/node/file.coffee","../node_modules/rollup-plugin-node-polyfills/polyfills/empty.js","../lib/aurora.js/src/sources/buffer.coffee","../lib/aurora.js/src/demuxer.coffee","../lib/aurora.js/src/decoder.coffee","../lib/aurora.js/src/device.coffee","../lib/aurora.js/src/asset.coffee","../lib/aurora.js/src/filters/volume.coffee","../lib/aurora.js/src/filter.coffee","../lib/aurora.js/src/filters/balance.coffee","../lib/aurora.js/src/queue.coffee","../lib/aurora.js/src/player.coffee","../lib/aurora.js/src/aurora_base.coffee","../lib/aurora.js/src/demuxers/m4a.coffee","../lib/aurora.js/src/demuxers/caf.coffee","../lib/aurora.js/src/demuxers/aiff.coffee","../lib/aurora.js/src/demuxers/wave.coffee","../lib/aurora.js/src/demuxers/au.coffee","../lib/aurora.js/src/decoders/lpcm.coffee","../lib/aurora.js/src/decoders/xlaw.coffee","../lib/aurora.js/src/devices/resampler.js","../lib/aurora.js/src/aurora.coffee","../lib/aurora.js/src/devices/webaudio.coffee","../lib/aurora.js/src/devices/mozilla.coffee","../lib/aurora.js/browser.coffee","../lib/mp3.js/src/header.js","../lib/mp3.js/src/stream.js","../lib/mp3.js/src/utils.js","../lib/mp3.js/src/frame.js","../lib/mp3.js/src/synth.js","../lib/mp3.js/src/tables.js","../lib/mp3.js/src/layer1.js","../lib/mp3.js/src/layer2.js","../lib/mp3.js/src/huffman.js","../lib/mp3.js/src/imdct.js","../lib/mp3.js/src/layer3.js","../lib/mp3.js/src/decoder.js","../lib/aac.js/src/tables.js","../lib/aac.js/src/adts_demuxer.js","../lib/aac.js/src/huffman.js","../lib/aac.js/src/tns.js","../lib/aac.js/src/ics.js","../lib/aac.js/src/cpe.js","../lib/aac.js/src/cce.js","../lib/aac.js/src/fft.js","../lib/aac.js/src/mdct_tables.js","../lib/aac.js/src/mdct.js","../lib/aac.js/src/filter_bank.js","../lib/aac.js/src/decoder.js","../lib/flac.js/src/decoder.js","../src/av/xpra.js"],"sourcesContent":["#\n# The Base class defines an extend method so that\n# CoffeeScript classes can be extended easily by \n# plain JavaScript. Based on http://ejohn.org/blog/simple-javascript-inheritance/.\n#\n\nclass Base\n    fnTest = /\\b_super\\b/\n    \n    @extend: (prop) ->\n        class Class extends this\n            \n        if typeof prop is 'function'\n            keys = Object.keys Class.prototype\n            prop.call(Class, Class)\n            \n            prop = {}\n            for key, fn of Class.prototype when key not in keys\n                prop[key] = fn\n        \n        _super = Class.__super__\n        \n        for key, fn of prop\n            # test whether the method actually uses _super() and wrap it if so\n            if typeof fn is 'function' and fnTest.test(fn)\n                do (key, fn) ->\n                    Class::[key] = ->\n                        tmp = this._super\n                        this._super = _super[key]\n                        \n                        ret = fn.apply(this, arguments)\n                        this._super = tmp\n                        \n                        return ret\n                        \n            else\n                Class::[key] = fn\n                \n        return Class\n        \nmodule.exports = Base\n","class AVBuffer\n    constructor: (input) ->\n        if input instanceof Uint8Array                  # Uint8Array\n            @data = input\n            \n        else if input instanceof ArrayBuffer or         # ArrayBuffer\n          Array.isArray(input) or                       # normal JS Array\n          typeof input is 'number' or                   # number (i.e. length)\n          global.Buffer?.isBuffer(input)                # Node Buffer\n            @data = new Uint8Array(input)\n            \n        else if input.buffer instanceof ArrayBuffer     # typed arrays other than Uint8Array\n            @data = new Uint8Array(input.buffer, input.byteOffset, input.length * input.BYTES_PER_ELEMENT)\n            \n        else if input instanceof AVBuffer               # AVBuffer, make a shallow copy\n            @data = input.data\n                        \n        else\n            throw new Error \"Constructing buffer with unknown type.\"\n        \n        @length = @data.length\n        \n        # used when the buffer is part of a bufferlist\n        @next = null\n        @prev = null\n    \n    @allocate: (size) ->\n        return new AVBuffer(size)\n    \n    copy: ->\n        return new AVBuffer(new Uint8Array(@data))\n    \n    slice: (position, length = @length) ->\n        if position is 0 and length >= @length\n            return new AVBuffer(@data)\n        else\n            return new AVBuffer(@data.subarray(position, position + length))\n    \n    # prefix-free\n    BlobBuilder = global.BlobBuilder or global.MozBlobBuilder or global.WebKitBlobBuilder\n    URL = global.URL or global.webkitURL or global.mozURL\n    \n    @makeBlob: (data, type = 'application/octet-stream') ->\n        # try the Blob constructor\n        try \n            return new Blob [data], type: type\n        \n        # use the old BlobBuilder\n        if BlobBuilder?\n            bb = new BlobBuilder\n            bb.append data\n            return bb.getBlob(type)\n            \n        # oops, no blobs supported :(\n        return null\n        \n    @makeBlobURL: (data, type) ->\n        return URL?.createObjectURL @makeBlob(data, type)\n        \n    @revokeBlobURL: (url) ->\n        URL?.revokeObjectURL url\n    \n    toBlob: ->\n        return AVBuffer.makeBlob @data.buffer\n        \n    toBlobURL: ->\n        return AVBuffer.makeBlobURL @data.buffer\n        \nmodule.exports = AVBuffer\n","class BufferList\n    constructor: ->\n        @first = null\n        @last = null\n        @numBuffers = 0\n        @availableBytes = 0\n        @availableBuffers = 0        \n    \n    copy: ->\n        result = new BufferList\n\n        result.first = @first\n        result.last = @last\n        result.numBuffers = @numBuffers\n        result.availableBytes = @availableBytes\n        result.availableBuffers = @availableBuffers\n        \n        return result\n        \n    append: (buffer) ->\n        buffer.prev = @last\n        @last?.next = buffer\n        @last = buffer\n        @first ?= buffer\n        \n        @availableBytes += buffer.length\n        @availableBuffers++\n        @numBuffers++\n        \n    advance: ->\n        if @first\n            @availableBytes -= @first.length\n            @availableBuffers--\n            @first = @first.next\n            return @first?\n            \n        return false\n        \n    rewind: ->\n        if @first and not @first.prev\n            return false\n        \n        @first = @first?.prev or @last\n        if @first\n            @availableBytes += @first.length\n            @availableBuffers++\n            \n        return @first?\n        \n    reset: ->\n        continue while @rewind()\n        \nmodule.exports = BufferList\n","BufferList = require './bufferlist'\nAVBuffer = require './buffer'\nUnderflowError = require './underflow'\n\nclass Stream\n    buf = new ArrayBuffer(16)\n    uint8 = new Uint8Array(buf)\n    int8 = new Int8Array(buf)\n    uint16 = new Uint16Array(buf)\n    int16 = new Int16Array(buf)\n    uint32 = new Uint32Array(buf)\n    int32 = new Int32Array(buf)\n    float32 = new Float32Array(buf)\n    float64 = new Float64Array(buf) if Float64Array?\n    \n    # detect the native endianness of the machine\n    # 0x3412 is little endian, 0x1234 is big endian\n    nativeEndian = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] is 0x3412\n        \n    constructor: (@list) ->\n        @localOffset = 0\n        @offset = 0\n        \n    @fromBuffer: (buffer) ->\n        list = new BufferList\n        list.append(buffer)\n        return new Stream(list)\n    \n    copy: ->\n        result = new Stream(@list.copy())\n        result.localOffset = @localOffset\n        result.offset = @offset\n        return result\n    \n    available: (bytes) ->\n        return bytes <= @list.availableBytes - @localOffset\n        \n    remainingBytes: ->\n        return @list.availableBytes - @localOffset\n    \n    advance: (bytes) ->\n        if not @available bytes\n            throw new UnderflowError()\n        \n        @localOffset += bytes\n        @offset += bytes\n        \n        while @list.first and @localOffset >= @list.first.length\n            @localOffset -= @list.first.length\n            @list.advance()\n        \n        return this\n        \n    rewind: (bytes) ->\n        if bytes > @offset\n            throw new UnderflowError()\n        \n        # if we're at the end of the bufferlist, seek from the end\n        if not @list.first\n            @list.rewind()\n            @localOffset = @list.first.length\n            \n        @localOffset -= bytes\n        @offset -= bytes\n        \n        while @list.first.prev and @localOffset < 0\n            @list.rewind()\n            @localOffset += @list.first.length\n            \n        return this\n        \n    seek: (position) ->\n        if position > @offset\n            @advance position - @offset\n            \n        else if position < @offset\n            @rewind @offset - position\n        \n    readUInt8: ->\n        if not @available(1)\n            throw new UnderflowError()\n        \n        a = @list.first.data[@localOffset]\n        @localOffset += 1\n        @offset += 1\n\n        if @localOffset == @list.first.length\n            @localOffset = 0\n            @list.advance()\n\n        return a\n\n    peekUInt8: (offset = 0) ->\n        if not @available(offset + 1)\n            throw new UnderflowError()\n        \n        offset = @localOffset + offset\n        buffer = @list.first\n\n        while buffer\n            if buffer.length > offset\n                return buffer.data[offset]\n\n            offset -= buffer.length\n            buffer = buffer.next\n\n        return 0\n        \n    read: (bytes, littleEndian = false) ->\n        if littleEndian is nativeEndian\n            for i in [0...bytes] by 1\n                uint8[i] = @readUInt8()\n        else\n            for i in [bytes - 1..0] by -1\n                uint8[i] = @readUInt8()\n        \n        return\n        \n    peek: (bytes, offset, littleEndian = false) ->\n        if littleEndian is nativeEndian\n            for i in [0...bytes] by 1\n                uint8[i] = @peekUInt8(offset + i)\n        else\n            for i in [0...bytes] by 1\n                uint8[bytes - i - 1] = @peekUInt8(offset + i)\n                \n        return\n        \n    readInt8: ->\n        @read(1)\n        return int8[0]\n\n    peekInt8: (offset = 0) ->\n        @peek(1, offset)\n        return int8[0]\n        \n    readUInt16: (littleEndian) ->\n        @read(2, littleEndian)\n        return uint16[0]\n\n    peekUInt16: (offset = 0, littleEndian) ->\n        @peek(2, offset, littleEndian)\n        return uint16[0]\n\n    readInt16: (littleEndian) ->\n        @read(2, littleEndian)\n        return int16[0]\n\n    peekInt16: (offset = 0, littleEndian) ->\n        @peek(2, offset, littleEndian)\n        return int16[0]\n        \n    readUInt24: (littleEndian) ->\n        if littleEndian\n            return @readUInt16(true) + (@readUInt8() << 16)\n        else\n            return (@readUInt16() << 8) + @readUInt8()\n\n    peekUInt24: (offset = 0, littleEndian) ->\n        if littleEndian\n            return @peekUInt16(offset, true) + (@peekUInt8(offset + 2) << 16)\n        else\n            return (@peekUInt16(offset) << 8) + @peekUInt8(offset + 2)\n\n    readInt24: (littleEndian) ->\n        if littleEndian\n            return @readUInt16(true) + (@readInt8() << 16)\n        else\n            return (@readInt16() << 8) + @readUInt8()\n\n    peekInt24: (offset = 0, littleEndian) ->\n        if littleEndian\n            return @peekUInt16(offset, true) + (@peekInt8(offset + 2) << 16)\n        else\n            return (@peekInt16(offset) << 8) + @peekUInt8(offset + 2)\n    \n    readUInt32: (littleEndian) ->\n        @read(4, littleEndian)\n        return uint32[0]\n    \n    peekUInt32: (offset = 0, littleEndian) ->\n        @peek(4, offset, littleEndian)\n        return uint32[0]\n    \n    readInt32: (littleEndian) ->\n        @read(4, littleEndian)\n        return int32[0]\n    \n    peekInt32: (offset = 0, littleEndian) ->\n        @peek(4, offset, littleEndian)\n        return int32[0]\n        \n    readFloat32: (littleEndian) ->\n        @read(4, littleEndian)\n        return float32[0]\n        \n    peekFloat32: (offset = 0, littleEndian) ->\n        @peek(4, offset, littleEndian)\n        return float32[0]\n    \n    readFloat64: (littleEndian) ->\n        @read(8, littleEndian)\n        \n        # use Float64Array if available\n        if float64\n            return float64[0]\n        else\n            return float64Fallback()\n            \n    float64Fallback = ->\n        [low, high] = uint32\n        return 0.0 if not high or high is 0x80000000\n\n        sign = 1 - (high >>> 31) * 2 # +1 or -1\n        exp = (high >>> 20) & 0x7ff\n        frac = high & 0xfffff\n\n        # NaN or Infinity\n        if exp is 0x7ff\n            return NaN if frac\n            return sign * Infinity\n\n        exp -= 1023\n        out = (frac | 0x100000) * Math.pow(2, exp - 20)\n        out += low * Math.pow(2, exp - 52)\n\n        return sign * out\n            \n    peekFloat64: (offset = 0, littleEndian) ->\n        @peek(8, offset, littleEndian)\n        \n        # use Float64Array if available\n        if float64\n            return float64[0]\n        else\n            return float64Fallback()\n        \n    # IEEE 80 bit extended float\n    readFloat80: (littleEndian) ->\n        @read(10, littleEndian)\n        return float80()\n        \n    float80 = ->\n        [high, low] = uint32\n        a0 = uint8[9]\n        a1 = uint8[8]\n        \n        sign = 1 - (a0 >>> 7) * 2 # -1 or +1\n        exp = ((a0 & 0x7F) << 8) | a1\n        \n        if exp is 0 and low is 0 and high is 0\n            return 0\n            \n        if exp is 0x7fff\n            if low is 0 and high is 0\n                return sign * Infinity\n                \n            return NaN\n        \n        exp -= 16383\n        out = low * Math.pow(2, exp - 31)\n        out += high * Math.pow(2, exp - 63)\n        \n        return sign * out\n        \n    peekFloat80: (offset = 0, littleEndian) ->\n        @peek(10, offset, littleEndian)\n        return float80()\n        \n    readBuffer: (length) ->\n        result = AVBuffer.allocate(length)\n        to = result.data\n\n        for i in [0...length] by 1\n            to[i] = @readUInt8()\n\n        return result\n\n    peekBuffer: (offset = 0, length) ->\n        result = AVBuffer.allocate(length)\n        to = result.data\n\n        for i in [0...length] by 1\n            to[i] = @peekUInt8(offset + i)\n\n        return result\n\n    readSingleBuffer: (length) ->\n        result = @list.first.slice(@localOffset, length)\n        @advance(result.length)\n        return result\n\n    peekSingleBuffer: (offset, length) ->\n        result = @list.first.slice(@localOffset + offset, length)\n        return result\n    \n    readString: (length, encoding = 'ascii') ->\n        return decodeString.call this, 0, length, encoding, true\n\n    peekString: (offset = 0, length, encoding = 'ascii') ->\n        return decodeString.call this, offset, length, encoding, false\n\n    decodeString = (offset, length, encoding, advance) ->\n        encoding = encoding.toLowerCase()\n        nullEnd = if length is null then 0 else -1\n\n        length = Infinity if not length?\n        end = offset + length\n        result = ''\n\n        switch encoding\n            when 'ascii', 'latin1'\n                while offset < end and (c = @peekUInt8(offset++)) isnt nullEnd\n                    result += String.fromCharCode(c)\n\n            when 'utf8', 'utf-8'\n                while offset < end and (b1 = @peekUInt8(offset++)) isnt nullEnd\n                    if (b1 & 0x80) is 0\n                        result += String.fromCharCode b1\n\n                    # one continuation (128 to 2047)\n                    else if (b1 & 0xe0) is 0xc0\n                        b2 = @peekUInt8(offset++) & 0x3f\n                        result += String.fromCharCode ((b1 & 0x1f) << 6) | b2\n\n                    # two continuation (2048 to 55295 and 57344 to 65535)\n                    else if (b1 & 0xf0) is 0xe0\n                        b2 = @peekUInt8(offset++) & 0x3f\n                        b3 = @peekUInt8(offset++) & 0x3f\n                        result += String.fromCharCode ((b1 & 0x0f) << 12) | (b2 << 6) | b3\n\n                    # three continuation (65536 to 1114111)\n                    else if (b1 & 0xf8) is 0xf0\n                        b2 = @peekUInt8(offset++) & 0x3f\n                        b3 = @peekUInt8(offset++) & 0x3f\n                        b4 = @peekUInt8(offset++) & 0x3f\n\n                        # split into a surrogate pair\n                        pt = (((b1 & 0x0f) << 18) | (b2 << 12) | (b3 << 6) | b4) - 0x10000\n                        result += String.fromCharCode 0xd800 + (pt >> 10), 0xdc00 + (pt & 0x3ff)\n\n            when 'utf16-be', 'utf16be', 'utf16le', 'utf16-le', 'utf16bom', 'utf16-bom'\n                # find endianness\n                switch encoding\n                    when 'utf16be', 'utf16-be'\n                        littleEndian = false\n\n                    when 'utf16le', 'utf16-le'\n                        littleEndian = true\n\n                    when 'utf16bom', 'utf16-bom'\n                        if length < 2 or (bom = @peekUInt16(offset)) is nullEnd\n                            @advance offset += 2 if advance\n                            return result\n\n                        littleEndian = (bom is 0xfffe)\n                        offset += 2\n\n                while offset < end and (w1 = @peekUInt16(offset, littleEndian)) isnt nullEnd\n                    offset += 2\n\n                    if w1 < 0xd800 or w1 > 0xdfff\n                        result += String.fromCharCode(w1)\n\n                    else\n                        if w1 > 0xdbff\n                            throw new Error \"Invalid utf16 sequence.\"\n\n                        w2 = @peekUInt16(offset, littleEndian)\n                        if w2 < 0xdc00 or w2 > 0xdfff\n                            throw new Error \"Invalid utf16 sequence.\"\n\n                        result += String.fromCharCode(w1, w2)\n                        offset += 2\n\n                if w1 is nullEnd\n                    offset += 2\n\n            else\n                throw new Error \"Unknown encoding: #{encoding}\"\n\n        @advance offset if advance\n        return result\n        \nmodule.exports = Stream\n","# define an error class to be thrown if an underflow occurs\nclass UnderflowError extends Error\n    constructor: ->\n        super()\n        @name = 'UnderflowError'\n        @stack = new Error().stack\n\nmodule.exports = UnderflowError\n","class Bitstream\n    constructor: (@stream) ->\n        @bitPosition = 0\n\n    copy: ->\n        result = new Bitstream @stream.copy()\n        result.bitPosition = @bitPosition\n        return result\n\n    offset: -> # Should be a property\n        return 8 * @stream.offset + @bitPosition\n\n    available: (bits) ->\n        return @stream.available((bits + 8 - @bitPosition) / 8)\n\n    advance: (bits) ->\n        pos = @bitPosition + bits\n        @stream.advance(pos >> 3)\n        @bitPosition = pos & 7\n        \n    rewind: (bits) ->\n        pos = @bitPosition - bits\n        @stream.rewind(Math.abs(pos >> 3))\n        @bitPosition = pos & 7\n        \n    seek: (offset) ->\n        curOffset = @offset()\n        \n        if offset > curOffset\n            @advance offset - curOffset \n            \n        else if offset < curOffset \n            @rewind curOffset - offset\n\n    align: ->\n        unless @bitPosition is 0\n            @bitPosition = 0\n            @stream.advance(1)\n        \n    read: (bits, signed) ->\n        return 0 if bits is 0\n        \n        mBits = bits + @bitPosition\n        if mBits <= 8\n            a = ((@stream.peekUInt8() << @bitPosition) & 0xff) >>> (8 - bits)\n\n        else if mBits <= 16\n            a = ((@stream.peekUInt16() << @bitPosition) & 0xffff) >>> (16 - bits)\n\n        else if mBits <= 24\n            a = ((@stream.peekUInt24() << @bitPosition) & 0xffffff) >>> (24 - bits)\n\n        else if mBits <= 32\n            a = (@stream.peekUInt32() << @bitPosition) >>> (32 - bits)\n\n        else if mBits <= 40\n            a0 = @stream.peekUInt8(0) * 0x0100000000 # same as a << 32\n            a1 = @stream.peekUInt8(1) << 24 >>> 0\n            a2 = @stream.peekUInt8(2) << 16\n            a3 = @stream.peekUInt8(3) << 8\n            a4 = @stream.peekUInt8(4)\n\n            a = a0 + a1 + a2 + a3 + a4\n            a %= Math.pow(2, 40 - @bitPosition)                        # (a << bitPosition) & 0xffffffffff\n            a = Math.floor(a / Math.pow(2, 40 - @bitPosition - bits))  # a >>> (40 - bits)\n\n        else\n            throw new Error \"Too many bits!\"\n            \n        if signed\n            # if the sign bit is turned on, flip the bits and \n            # add one to convert to a negative value\n            if mBits < 32\n                if a >>> (bits - 1)\n                    a = ((1 << bits >>> 0) - a) * -1\n            else\n                if a / Math.pow(2, bits - 1) | 0\n                    a = (Math.pow(2, bits) - a) * -1\n\n        @advance bits\n        return a\n        \n    peek: (bits, signed) ->\n        return 0 if bits is 0\n        \n        mBits = bits + @bitPosition\n        if mBits <= 8\n            a = ((@stream.peekUInt8() << @bitPosition) & 0xff) >>> (8 - bits)\n\n        else if mBits <= 16\n            a = ((@stream.peekUInt16() << @bitPosition) & 0xffff) >>> (16 - bits)\n\n        else if mBits <= 24\n            a = ((@stream.peekUInt24() << @bitPosition) & 0xffffff) >>> (24 - bits)\n\n        else if mBits <= 32\n            a = (@stream.peekUInt32() << @bitPosition) >>> (32 - bits)\n\n        else if mBits <= 40\n            a0 = @stream.peekUInt8(0) * 0x0100000000 # same as a << 32\n            a1 = @stream.peekUInt8(1) << 24 >>> 0\n            a2 = @stream.peekUInt8(2) << 16\n            a3 = @stream.peekUInt8(3) << 8\n            a4 = @stream.peekUInt8(4)\n\n            a = a0 + a1 + a2 + a3 + a4\n            a %= Math.pow(2, 40 - @bitPosition)                        # (a << bitPosition) & 0xffffffffff\n            a = Math.floor(a / Math.pow(2, 40 - @bitPosition - bits))  # a >>> (40 - bits)\n\n        else\n            throw new Error \"Too many bits!\"\n            \n        if signed\n            # if the sign bit is turned on, flip the bits and \n            # add one to convert to a negative value\n            if mBits < 32\n                if a >>> (bits - 1)\n                    a = ((1 << bits >>> 0) - a) * -1\n            else\n                if a / Math.pow(2, bits - 1) | 0\n                    a = (Math.pow(2, bits) - a) * -1\n\n        return a\n\n    readLSB: (bits, signed) ->\n        return 0 if bits is 0\n        if bits > 40\n            throw new Error \"Too many bits!\"\n\n        mBits = bits + @bitPosition\n        a  = (@stream.peekUInt8(0)) >>> @bitPosition\n        a |= (@stream.peekUInt8(1)) << (8  - @bitPosition) if mBits > 8\n        a |= (@stream.peekUInt8(2)) << (16 - @bitPosition) if mBits > 16\n        a += (@stream.peekUInt8(3)) << (24 - @bitPosition) >>> 0 if mBits > 24            \n        a += (@stream.peekUInt8(4)) * Math.pow(2, 32 - @bitPosition) if mBits > 32\n\n        if mBits >= 32\n            a %= Math.pow(2, bits)\n        else\n            a &= (1 << bits) - 1\n            \n        if signed\n            # if the sign bit is turned on, flip the bits and \n            # add one to convert to a negative value\n            if mBits < 32\n                if a >>> (bits - 1)\n                    a = ((1 << bits >>> 0) - a) * -1\n            else\n                if a / Math.pow(2, bits - 1) | 0\n                    a = (Math.pow(2, bits) - a) * -1\n\n        @advance bits\n        return a\n        \n    peekLSB: (bits, signed) ->\n        return 0 if bits is 0\n        if bits > 40\n            throw new Error \"Too many bits!\"\n\n        mBits = bits + @bitPosition\n        a  = (@stream.peekUInt8(0)) >>> @bitPosition\n        a |= (@stream.peekUInt8(1)) << (8  - @bitPosition) if mBits > 8\n        a |= (@stream.peekUInt8(2)) << (16 - @bitPosition) if mBits > 16\n        a += (@stream.peekUInt8(3)) << (24 - @bitPosition) >>> 0 if mBits > 24            \n        a += (@stream.peekUInt8(4)) * Math.pow(2, 32 - @bitPosition) if mBits > 32\n        \n        if mBits >= 32\n            a %= Math.pow(2, bits)\n        else\n            a &= (1 << bits) - 1\n            \n        if signed\n            # if the sign bit is turned on, flip the bits and \n            # add one to convert to a negative value\n            if mBits < 32\n                if a >>> (bits - 1)\n                    a = ((1 << bits >>> 0) - a) * -1\n            else\n                if a / Math.pow(2, bits - 1) | 0\n                    a = (Math.pow(2, bits) - a) * -1\n\n        return a\n        \nmodule.exports = Bitstream\n","Base = require './base'\n\nclass EventEmitter extends Base\n    on: (event, fn) ->\n        @events ?= {}\n        @events[event] ?= []\n        @events[event].push(fn)\n        \n    off: (event, fn) ->\n        return unless @events?\n        if @events?[event]\n            if fn?\n                index = @events[event].indexOf(fn)\n                @events[event].splice(index, 1) if ~index\n            else\n                @events[event]\n        else unless event?\n            events = {}\n        \n    once: (event, fn) ->\n        @on event, cb = ->\n            @off event, cb\n            fn.apply(this, arguments)\n        \n    emit: (event, args...) ->\n        return unless @events?[event]\n        \n        # shallow clone with .slice() so that removing a handler\n        # while event is firing (as in once) doesn't cause errors\n        for fn in @events[event].slice()\n            fn.apply(this, args)\n            \n        return\n        \nmodule.exports = EventEmitter\n","export default (typeof global !== \"undefined\" ? global :\n  typeof self !== \"undefined\" ? self :\n  typeof window !== \"undefined\" ? window : {});","var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n","export var hasFetch = isFunction(global.fetch) && isFunction(global.ReadableStream)\n\nvar _blobConstructor;\nexport function blobConstructor() {\n  if (typeof _blobConstructor !== 'undefined') {\n    return _blobConstructor;\n  }\n  try {\n    new global.Blob([new ArrayBuffer(1)])\n    _blobConstructor = true\n  } catch (e) {\n    _blobConstructor = false\n  }\n  return _blobConstructor\n}\nvar xhr;\n\nfunction checkTypeSupport(type) {\n  if (!xhr) {\n    xhr = new global.XMLHttpRequest()\n    // If location.host is empty, e.g. if this page/worker was loaded\n    // from a Blob, then use example.com to avoid an error\n    xhr.open('GET', global.location.host ? '/' : 'https://example.com')\n  }\n  try {\n    xhr.responseType = type\n    return xhr.responseType === type\n  } catch (e) {\n    return false\n  }\n\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\nexport var arraybuffer = haveArrayBuffer && checkTypeSupport('arraybuffer')\n  // These next two tests unavoidably show warnings in Chrome. Since fetch will always\n  // be used if it's available, just return false for these to avoid the warnings.\nexport var msstream = !hasFetch && haveSlice && checkTypeSupport('ms-stream')\nexport var mozchunkedarraybuffer = !hasFetch && haveArrayBuffer &&\n  checkTypeSupport('moz-chunked-arraybuffer')\nexport var overrideMimeType = isFunction(xhr.overrideMimeType)\nexport var vbArray = isFunction(global.VBArray)\n\nfunction isFunction(value) {\n  return typeof value === 'function'\n}\n\nxhr = null // Help gc\n","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n","\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","import {overrideMimeType} from './capability';\nimport {inherits} from 'util';\nimport {Readable} from 'stream';\n\nvar rStates = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n}\nexport {\n  rStates as readyStates\n};\nexport function IncomingMessage(xhr, response, mode) {\n  var self = this\n  Readable.call(self)\n\n  self._mode = mode\n  self.headers = {}\n  self.rawHeaders = []\n  self.trailers = {}\n  self.rawTrailers = []\n\n  // Fake the 'close' event, but only once 'end' fires\n  self.on('end', function() {\n    // The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n    process.nextTick(function() {\n      self.emit('close')\n    })\n  })\n  var read;\n  if (mode === 'fetch') {\n    self._fetchResponse = response\n\n    self.url = response.url\n    self.statusCode = response.status\n    self.statusMessage = response.statusText\n      // backwards compatible version of for (<item> of <iterable>):\n      // for (var <item>,_i,_it = <iterable>[Symbol.iterator](); <item> = (_i = _it.next()).value,!_i.done;)\n    for (var header, _i, _it = response.headers[Symbol.iterator](); header = (_i = _it.next()).value, !_i.done;) {\n      self.headers[header[0].toLowerCase()] = header[1]\n      self.rawHeaders.push(header[0], header[1])\n    }\n\n    // TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n    var reader = response.body.getReader()\n\n    read = function () {\n      reader.read().then(function(result) {\n        if (self._destroyed)\n          return\n        if (result.done) {\n          self.push(null)\n          return\n        }\n        self.push(new Buffer(result.value))\n        read()\n      })\n    }\n    read()\n\n  } else {\n    self._xhr = xhr\n    self._pos = 0\n\n    self.url = xhr.responseURL\n    self.statusCode = xhr.status\n    self.statusMessage = xhr.statusText\n    var headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n    headers.forEach(function(header) {\n      var matches = header.match(/^([^:]+):\\s*(.*)/)\n      if (matches) {\n        var key = matches[1].toLowerCase()\n        if (key === 'set-cookie') {\n          if (self.headers[key] === undefined) {\n            self.headers[key] = []\n          }\n          self.headers[key].push(matches[2])\n        } else if (self.headers[key] !== undefined) {\n          self.headers[key] += ', ' + matches[2]\n        } else {\n          self.headers[key] = matches[2]\n        }\n        self.rawHeaders.push(matches[1], matches[2])\n      }\n    })\n\n    self._charset = 'x-user-defined'\n    if (!overrideMimeType) {\n      var mimeType = self.rawHeaders['mime-type']\n      if (mimeType) {\n        var charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n        if (charsetMatch) {\n          self._charset = charsetMatch[1].toLowerCase()\n        }\n      }\n      if (!self._charset)\n        self._charset = 'utf-8' // best guess\n    }\n  }\n}\n\ninherits(IncomingMessage, Readable)\n\nIncomingMessage.prototype._read = function() {}\n\nIncomingMessage.prototype._onXHRProgress = function() {\n  var self = this\n\n  var xhr = self._xhr\n\n  var response = null\n  switch (self._mode) {\n  case 'text:vbarray': // For IE9\n    if (xhr.readyState !== rStates.DONE)\n      break\n    try {\n      // This fails in IE8\n      response = new global.VBArray(xhr.responseBody).toArray()\n    } catch (e) {\n      // pass\n    }\n    if (response !== null) {\n      self.push(new Buffer(response))\n      break\n    }\n    // Falls through in IE8\n  case 'text':\n    try { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n      response = xhr.responseText\n    } catch (e) {\n      self._mode = 'text:vbarray'\n      break\n    }\n    if (response.length > self._pos) {\n      var newData = response.substr(self._pos)\n      if (self._charset === 'x-user-defined') {\n        var buffer = new Buffer(newData.length)\n        for (var i = 0; i < newData.length; i++)\n          buffer[i] = newData.charCodeAt(i) & 0xff\n\n        self.push(buffer)\n      } else {\n        self.push(newData, self._charset)\n      }\n      self._pos = response.length\n    }\n    break\n  case 'arraybuffer':\n    if (xhr.readyState !== rStates.DONE || !xhr.response)\n      break\n    response = xhr.response\n    self.push(new Buffer(new Uint8Array(response)))\n    break\n  case 'moz-chunked-arraybuffer': // take whole\n    response = xhr.response\n    if (xhr.readyState !== rStates.LOADING || !response)\n      break\n    self.push(new Buffer(new Uint8Array(response)))\n    break\n  case 'ms-stream':\n    response = xhr.response\n    if (xhr.readyState !== rStates.LOADING)\n      break\n    var reader = new global.MSStreamReader()\n    reader.onprogress = function() {\n      if (reader.result.byteLength > self._pos) {\n        self.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n        self._pos = reader.result.byteLength\n      }\n    }\n    reader.onload = function() {\n      self.push(null)\n    }\n      // reader.onerror = ??? // TODO: this\n    reader.readAsArrayBuffer(response)\n    break\n  }\n\n  // The ms-stream case handles end separately in reader.onload()\n  if (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n    self.push(null)\n  }\n}\n","import * as capability from './capability';\nimport {inherits} from 'util';\nimport {IncomingMessage, readyStates as rStates} from './response';\nimport {Writable} from 'stream';\nimport toArrayBuffer from './to-arraybuffer';\n\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.hasFetch && useFetch) {\n    return 'fetch'\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer'\n  } else if (capability.msstream) {\n    return 'ms-stream'\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer'\n  } else if (capability.vbArray && preferBinary) {\n    return 'text:vbarray'\n  } else {\n    return 'text'\n  }\n}\nexport default ClientRequest;\n\nfunction ClientRequest(opts) {\n  var self = this\n  Writable.call(self)\n\n  self._opts = opts\n  self._body = []\n  self._headers = {}\n  if (opts.auth)\n    self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n  Object.keys(opts.headers).forEach(function(name) {\n    self.setHeader(name, opts.headers[name])\n  })\n\n  var preferBinary\n  var useFetch = true\n  if (opts.mode === 'disable-fetch') {\n    // If the use of XHR should be preferred and includes preserving the 'content-type' header\n    useFetch = false\n    preferBinary = true\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true\n  } else {\n    throw new Error('Invalid value for opts.mode')\n  }\n  self._mode = decideMode(preferBinary, useFetch)\n\n  self.on('finish', function() {\n    self._onFinish()\n  })\n}\n\ninherits(ClientRequest, Writable)\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n  'accept-charset',\n  'accept-encoding',\n  'access-control-request-headers',\n  'access-control-request-method',\n  'connection',\n  'content-length',\n  'cookie',\n  'cookie2',\n  'date',\n  'dnt',\n  'expect',\n  'host',\n  'keep-alive',\n  'origin',\n  'referer',\n  'te',\n  'trailer',\n  'transfer-encoding',\n  'upgrade',\n  'user-agent',\n  'via'\n]\nClientRequest.prototype.setHeader = function(name, value) {\n  var self = this\n  var lowerName = name.toLowerCase()\n    // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n    // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n    // http-browserify did it, so I will too.\n  if (unsafeHeaders.indexOf(lowerName) !== -1)\n    return\n\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  }\n}\n\nClientRequest.prototype.getHeader = function(name) {\n  var self = this\n  return self._headers[name.toLowerCase()].value\n}\n\nClientRequest.prototype.removeHeader = function(name) {\n  var self = this\n  delete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function() {\n  var self = this\n\n  if (self._destroyed)\n    return\n  var opts = self._opts\n\n  var headersObj = self._headers\n  var body\n  if (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n    if (capability.blobConstructor()) {\n      body = new global.Blob(self._body.map(function(buffer) {\n        return toArrayBuffer(buffer)\n      }), {\n        type: (headersObj['content-type'] || {}).value || ''\n      })\n    } else {\n      // get utf8 string\n      body = Buffer.concat(self._body).toString()\n    }\n  }\n\n  if (self._mode === 'fetch') {\n    var headers = Object.keys(headersObj).map(function(name) {\n      return [headersObj[name].name, headersObj[name].value]\n    })\n\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headers,\n      body: body,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin'\n    }).then(function(response) {\n      self._fetchResponse = response\n      self._connect()\n    }, function(reason) {\n      self.emit('error', reason)\n    })\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest()\n    try {\n      xhr.open(self._opts.method, self._opts.url, true)\n    } catch (err) {\n      process.nextTick(function() {\n        self.emit('error', err)\n      })\n      return\n    }\n\n    // Can't set responseType on really old browsers\n    if ('responseType' in xhr)\n      xhr.responseType = self._mode.split(':')[0]\n\n    if ('withCredentials' in xhr)\n      xhr.withCredentials = !!opts.withCredentials\n\n    if (self._mode === 'text' && 'overrideMimeType' in xhr)\n      xhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n    Object.keys(headersObj).forEach(function(name) {\n      xhr.setRequestHeader(headersObj[name].name, headersObj[name].value)\n    })\n\n    self._response = null\n    xhr.onreadystatechange = function() {\n      switch (xhr.readyState) {\n      case rStates.LOADING:\n      case rStates.DONE:\n        self._onXHRProgress()\n        break\n      }\n    }\n      // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n      // in onprogress, not in onreadystatechange with xhr.readyState = 3\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function() {\n        self._onXHRProgress()\n      }\n    }\n\n    xhr.onerror = function() {\n      if (self._destroyed)\n        return\n      self.emit('error', new Error('XHR error'))\n    }\n\n    try {\n      xhr.send(body)\n    } catch (err) {\n      process.nextTick(function() {\n        self.emit('error', err)\n      })\n      return\n    }\n  }\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status\n    return (status !== null && status !== 0)\n  } catch (e) {\n    return false\n  }\n}\n\nClientRequest.prototype._onXHRProgress = function() {\n  var self = this\n\n  if (!statusValid(self._xhr) || self._destroyed)\n    return\n\n  if (!self._response)\n    self._connect()\n\n  self._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function() {\n  var self = this\n\n  if (self._destroyed)\n    return\n\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n  self.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function(chunk, encoding, cb) {\n  var self = this\n\n  self._body.push(chunk)\n  cb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function() {\n  var self = this\n  self._destroyed = true\n  if (self._response)\n    self._response._destroyed = true\n  if (self._xhr)\n    self._xhr.abort()\n    // Currently, there isn't a way to truly abort a fetch.\n    // If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function(data, encoding, cb) {\n  var self = this\n  if (typeof data === 'function') {\n    cb = data\n    data = undefined\n  }\n\n  Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function() {}\nClientRequest.prototype.setTimeout = function() {}\nClientRequest.prototype.setNoDelay = function() {}\nClientRequest.prototype.setSocketKeepAlive = function() {}\n","// from https://github.com/jhiesey/to-arraybuffer/blob/6502d9850e70ba7935a7df4ad86b358fc216f9f0/index.js\n\n// MIT License\n// Copyright (c) 2016 John Hiesey\nimport {isBuffer} from 'buffer';\nexport default function (buf) {\n  // If the buffer is backed by a Uint8Array, a faster version will work\n  if (buf instanceof Uint8Array) {\n    // If the buffer isn't a subarray, return the underlying ArrayBuffer\n    if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n      return buf.buffer\n    } else if (typeof buf.buffer.slice === 'function') {\n      // Otherwise we need to get a proper copy\n      return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n    }\n  }\n\n  if (isBuffer(buf)) {\n    // This is the slow version that will work with any Buffer\n    // implementation (even in old browsers)\n    var arrayCopy = new Uint8Array(buf.length)\n    var len = buf.length\n    for (var i = 0; i < len; i++) {\n      arrayCopy[i] = buf[i]\n    }\n    return arrayCopy.buffer\n  } else {\n    throw new Error('Argument must be a Buffer')\n  }\n}\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n\n\n/** Highest positive signed 32-bit float value */\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nvar regexPunycode = /^xn--/;\nvar regexNonASCII = /[^\\x20-\\x7E]/; // unprintable ASCII chars + non-ASCII chars\nvar regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nvar errors = {\n  'overflow': 'Overflow: input needs wider integers to process',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n  var length = array.length;\n  var result = [];\n  while (length--) {\n    result[length] = fn(array[length]);\n  }\n  return result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n  var parts = string.split('@');\n  var result = '';\n  if (parts.length > 1) {\n    // In email addresses, only the domain name should be punycoded. Leave\n    // the local part (i.e. everything up to `@`) intact.\n    result = parts[0] + '@';\n    string = parts[1];\n  }\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  string = string.replace(regexSeparators, '\\x2E');\n  var labels = string.split('.');\n  var encoded = map(labels, fn).join('.');\n  return result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n  var output = [],\n    counter = 0,\n    length = string.length,\n    value,\n    extra;\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nfunction ucs2encode(array) {\n  return map(array, function(value) {\n    var output = '';\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n    output += stringFromCharCode(value);\n    return output;\n  }).join('');\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint) {\n  if (codePoint - 48 < 10) {\n    return codePoint - 22;\n  }\n  if (codePoint - 65 < 26) {\n    return codePoint - 65;\n  }\n  if (codePoint - 97 < 26) {\n    return codePoint - 97;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit, flag) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for ( /* no initialization */ ; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input) {\n  // Don't use UCS-2\n  var output = [],\n    inputLength = input.length,\n    out,\n    i = 0,\n    n = initialN,\n    bias = initialBias,\n    basic,\n    j,\n    index,\n    oldi,\n    w,\n    k,\n    digit,\n    t,\n    /** Cached calculation results */\n    baseMinusT;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */ ) {\n\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    for (oldi = i, w = 1, k = base; /* no condition */ ; k += base) {\n\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n      if (digit < t) {\n        break;\n      }\n\n      baseMinusT = base - t;\n      if (w > floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n\n    }\n\n    out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi == 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output\n    output.splice(i++, 0, n);\n\n  }\n\n  return ucs2encode(output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(input) {\n  var n,\n    delta,\n    handledCPCount,\n    basicLength,\n    bias,\n    j,\n    m,\n    q,\n    k,\n    t,\n    currentValue,\n    output = [],\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n    baseMinusT,\n    qMinusT;\n\n  // Convert the input in UCS-2 to Unicode\n  input = ucs2decode(input);\n\n  // Cache the length\n  inputLength = input.length;\n\n  // Initialize the state\n  n = initialN;\n  delta = 0;\n  bias = initialBias;\n\n  // Handle the basic code points\n  for (j = 0; j < inputLength; ++j) {\n    currentValue = input[j];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  handledCPCount = basicLength = output.length;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string - if it is not empty - with a delimiter\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    for (m = maxInt, j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow\n    handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer\n        for (q = delta, k = base; /* no condition */ ; k += base) {\n          t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) {\n            break;\n          }\n          qMinusT = q - t;\n          baseMinusT = base - t;\n          output.push(\n            stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n          );\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input) {\n  return mapDomain(input, function(string) {\n    return regexPunycode.test(string) ?\n      decode(string.slice(4).toLowerCase()) :\n      string;\n  });\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input) {\n  return mapDomain(input, function(string) {\n    return regexNonASCII.test(string) ?\n      'xn--' + encode(string) :\n      string;\n  });\n}\nexport var version = '1.4.1';\n/**\n * An object of methods to convert from JavaScript's internal character\n * representation (UCS-2) to Unicode code points, and back.\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode\n * @type Object\n */\n\nexport var ucs2 = {\n  decode: ucs2decode,\n  encode: ucs2encode\n};\nexport default {\n  version: version,\n  ucs2: ucs2,\n  toASCII: toASCII,\n  toUnicode: toUnicode,\n  encode: encode,\n  decode: decode\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nimport {toASCII} from 'punycode';\nimport {isObject,isString,isNullOrUndefined,isNull} from 'util';\nimport {parse as qsParse,stringify as qsStringify} from 'querystring';\nexport {\n  urlParse as parse,\n  urlResolve as resolve,\n  urlResolveObject as resolveObject,\n  urlFormat as format\n};\nexport default {\n  parse: urlParse,\n  resolve: urlResolve,\n  resolveObject: urlResolveObject,\n  format: urlFormat,\n  Url: Url\n}\nexport function Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n  portPattern = /:[0-9]*$/,\n\n  // Special case for a simple path URL\n  simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n  // RFC 2396: characters reserved for delimiting URLs.\n  // We actually just auto-escape these.\n  delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n  // RFC 2396: characters not allowed for various reasons.\n  unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n  // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n  autoEscape = ['\\''].concat(unwise),\n  // Characters that are never ever allowed in a hostname.\n  // Note that any invalid chars are also handled, but these\n  // are the ones that are *expected* to be seen, so we fast-path\n  // them.\n  nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n  hostEndingChars = ['/', '?', '#'],\n  hostnameMaxLen = 255,\n  hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n  hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n  // protocols that can allow \"unsafe\" and \"unwise\" chars.\n  unsafeProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that never have a hostname.\n  hostlessProtocol = {\n    'javascript': true,\n    'javascript:': true\n  },\n  // protocols that always contain a // bit.\n  slashedProtocol = {\n    'http': true,\n    'https': true,\n    'ftp': true,\n    'gopher': true,\n    'file': true,\n    'http:': true,\n    'https:': true,\n    'ftp:': true,\n    'gopher:': true,\n    'file:': true\n  };\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  return parse(this, url, parseQueryString, slashesDenoteHost);\n}\n\nfunction parse(self, url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError('Parameter \\'url\\' must be a string, not ' + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n    splitter =\n    (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n    uSplit = url.split(splitter),\n    slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      self.path = rest;\n      self.href = rest;\n      self.pathname = simplePath[1];\n      if (simplePath[2]) {\n        self.search = simplePath[2];\n        if (parseQueryString) {\n          self.query = qsParse(self.search.substr(1));\n        } else {\n          self.query = self.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        self.search = '';\n        self.query = {};\n      }\n      return self;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    self.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      self.slashes = true;\n    }\n  }\n  var i, hec, l, p;\n  if (!hostlessProtocol[proto] &&\n    (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      self.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    self.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    parseHost(self);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    self.hostname = self.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = self.hostname[0] === '[' &&\n      self.hostname[self.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = self.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            self.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (self.hostname.length > hostnameMaxLen) {\n      self.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      self.hostname = self.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      self.hostname = toASCII(self.hostname);\n    }\n\n    p = self.port ? ':' + self.port : '';\n    var h = self.hostname || '';\n    self.host = h + p;\n    self.href += self.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      self.hostname = self.hostname.substr(1, self.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    self.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    self.search = rest.substr(qm);\n    self.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      self.query = qsParse(self.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    self.search = '';\n    self.query = {};\n  }\n  if (rest) self.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n    self.hostname && !self.pathname) {\n    self.pathname = '/';\n  }\n\n  //to support http.request\n  if (self.pathname || self.search) {\n    p = self.pathname || '';\n    var s = self.search || '';\n    self.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  self.href = format(self);\n  return self;\n}\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = parse({}, obj);\n  return format(obj);\n}\n\nfunction format(self) {\n  var auth = self.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = self.protocol || '',\n    pathname = self.pathname || '',\n    hash = self.hash || '',\n    host = false,\n    query = '';\n\n  if (self.host) {\n    host = auth + self.host;\n  } else if (self.hostname) {\n    host = auth + (self.hostname.indexOf(':') === -1 ?\n      self.hostname :\n      '[' + this.hostname + ']');\n    if (self.port) {\n      host += ':' + self.port;\n    }\n  }\n\n  if (self.query &&\n    isObject(self.query) &&\n    Object.keys(self.query).length) {\n    query = qsStringify(self.query);\n  }\n\n  var search = self.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (self.slashes ||\n    (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n}\n\nUrl.prototype.format = function() {\n  return format(this);\n}\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n      result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n  var relPath;\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n    isRelAbs = (\n      relative.host ||\n      relative.pathname && relative.pathname.charAt(0) === '/'\n    ),\n    mustEndAbs = (isRelAbs || isSourceAbs ||\n      (result.host && relative.pathname)),\n    removeAllDots = mustEndAbs,\n    srcPath = result.pathname && result.pathname.split('/') || [],\n    psychotic = result.protocol && !slashedProtocol[result.protocol];\n  relPath = relative.pathname && relative.pathname.split('/') || [];\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n  var authInHost;\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n      relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      authInHost = result.host && result.host.indexOf('@') > 0 ?\n        result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n        (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n    (result.host || relative.host || srcPath.length > 1) &&\n    (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n    (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n    (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n      srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    authInHost = result.host && result.host.indexOf('@') > 0 ?\n      result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n      (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  return parseHost(this);\n};\n\nfunction parseHost(self) {\n  var host = self.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      self.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) self.hostname = host;\n}\n","/*\nthis and http-lib folder\n\nThe MIT License\n\nCopyright (c) 2015 John Hiesey\n\nPermission is hereby granted, free of charge,\nto any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to\ndeal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify,\nmerge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom\nthe Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice\nshall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\nimport ClientRequest from './http-lib/request';\nimport {parse} from 'url';\n\nexport function request(opts, cb) {\n  if (typeof opts === 'string')\n    opts = parse(opts)\n\n\n  // Normally, the page is loaded from http or https, so not specifying a protocol\n  // will result in a (valid) protocol-relative url. However, this won't work if\n  // the protocol is something else, like 'file:'\n  var defaultProtocol = global.location.protocol.search(/^https?:$/) === -1 ? 'http:' : ''\n\n  var protocol = opts.protocol || defaultProtocol\n  var host = opts.hostname || opts.host\n  var port = opts.port\n  var path = opts.path || '/'\n\n  // Necessary for IPv6 addresses\n  if (host && host.indexOf(':') !== -1)\n    host = '[' + host + ']'\n\n  // This may be a relative url. The browser should always be able to interpret it correctly.\n  opts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n  opts.method = (opts.method || 'GET').toUpperCase()\n  opts.headers = opts.headers || {}\n\n  // Also valid opts.auth, opts.mode\n\n  var req = new ClientRequest(opts)\n  if (cb)\n    req.on('response', cb)\n  return req\n}\n\nexport function get(opts, cb) {\n  var req = request(opts, cb)\n  req.end()\n  return req\n}\n\nexport function Agent() {}\nAgent.defaultMaxSockets = 4\n\nexport var METHODS = [\n  'CHECKOUT',\n  'CONNECT',\n  'COPY',\n  'DELETE',\n  'GET',\n  'HEAD',\n  'LOCK',\n  'M-SEARCH',\n  'MERGE',\n  'MKACTIVITY',\n  'MKCOL',\n  'MOVE',\n  'NOTIFY',\n  'OPTIONS',\n  'PATCH',\n  'POST',\n  'PROPFIND',\n  'PROPPATCH',\n  'PURGE',\n  'PUT',\n  'REPORT',\n  'SEARCH',\n  'SUBSCRIBE',\n  'TRACE',\n  'UNLOCK',\n  'UNSUBSCRIBE'\n]\nexport var STATUS_CODES = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  102: 'Processing', // RFC 2518, obsoleted by RFC 4918\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  207: 'Multi-Status', // RFC 4918\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Moved Temporarily',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Time-out',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Request Entity Too Large',\n  414: 'Request-URI Too Large',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  418: 'I\\'m a teapot', // RFC 2324\n  422: 'Unprocessable Entity', // RFC 4918\n  423: 'Locked', // RFC 4918\n  424: 'Failed Dependency', // RFC 4918\n  425: 'Unordered Collection', // RFC 4918\n  426: 'Upgrade Required', // RFC 2817\n  428: 'Precondition Required', // RFC 6585\n  429: 'Too Many Requests', // RFC 6585\n  431: 'Request Header Fields Too Large', // RFC 6585\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Time-out',\n  505: 'HTTP Version Not Supported',\n  506: 'Variant Also Negotiates', // RFC 2295\n  507: 'Insufficient Storage', // RFC 4918\n  509: 'Bandwidth Limit Exceeded',\n  510: 'Not Extended', // RFC 2774\n  511: 'Network Authentication Required' // RFC 6585\n};\n\nexport default {\n  request,\n  get,\n  Agent,\n  METHODS,\n  STATUS_CODES\n}\n","EventEmitter = require '../../core/events'\nAVBuffer = require '../../core/buffer'\nhttp = require 'http'\n\nclass HTTPSource extends EventEmitter\n    constructor: (@url) ->\n        super()\n        @request = null\n        @response = null\n        \n        @loaded = 0\n        @size = 0\n        \n    start: ->\n        if @response?\n            return @response.resume()\n        \n        @request = http.get @url\n        @request.on 'response', (@response) =>\n            if @response.statusCode isnt 200\n                return @errorHandler 'Error loading file. HTTP status code ' + @response.statusCode\n            \n            @size = parseInt @response.headers['content-length']\n            @loaded = 0\n            \n            @response.on 'data', (chunk) =>\n                @loaded += chunk.length\n                @emit 'progress', @loaded / @size * 100\n                @emit 'data', new AVBuffer(new Uint8Array(chunk))\n                \n            @response.on 'end', =>\n                @emit 'end'\n                \n            @response.on 'error', @errorHandler\n            \n        @request.on 'error', @errorHandler\n        \n    pause: ->\n        @response?.pause()\n        \n    reset: ->\n        @pause()\n        @request.abort()\n        @request = null\n        @response = null\n        \n    errorHandler: (err) =>\n        @reset()\n        @emit 'error', err\n        \nmodule.exports = HTTPSource\n","EventEmitter = require '../../core/events'\nAVBuffer = require '../../core/buffer'\nfs = require 'fs'\n\nclass FileSource extends EventEmitter\n    constructor: (@filename) ->\n        super()\n        @stream = null\n        @loaded = 0\n        @size = null\n        \n    getSize: ->\n        fs.stat @filename, (err, stat) =>\n            return @emit 'error', err if err\n            \n            @size = stat.size\n            @start()\n        \n    start: ->\n        if not @size?\n            return @getSize()\n        \n        if @stream\n            return @stream.resume()\n            \n        @stream = fs.createReadStream @filename\n        \n        b = new Buffer(1 << 20)\n        blen = 0\n        @stream.on 'data', (buf) =>\n            @loaded += buf.length\n            buf.copy(b, blen)\n            blen = blen + buf.length\n            \n            @emit 'progress', @loaded / @size * 100\n            \n            if blen >= b.length or @loaded >= @size\n              if blen < b.length\n                b = b.slice(0, blen)\n                \n              @emit 'data', new AVBuffer(new Uint8Array(b))\n              blen -= b.length\n              buf.copy(b, 0, blen)\n    \n        @stream.on 'end', =>\n            @emit 'end'\n            \n        @stream.on 'error', (err) =>\n            @pause()\n            @emit 'error', err\n    \n    pause: ->\n        @stream.pause()\n        \nmodule.exports = FileSource\n","export default {};\n","EventEmitter = require '../core/events'\nBufferList = require '../core/bufferlist'\nAVBuffer = require '../core/buffer'\n\nclass BufferSource extends EventEmitter    \n    constructor: (input) ->\n        super()\n        # Now make an AV.BufferList\n        if input instanceof BufferList\n            @list = input\n            \n        else\n            @list = new BufferList\n            @list.append new AVBuffer(input)\n            \n        @paused = true\n        \n    setImmediate = global.setImmediate or (fn) ->\n        global.setTimeout fn, 0\n        \n    clearImmediate = global.clearImmediate or (timer) ->\n        global.clearTimeout timer\n        \n    start: ->\n        @paused = false\n        @_timer = setImmediate @loop\n        \n    loop: =>\n        @emit 'progress', (@list.numBuffers - @list.availableBuffers + 1) / @list.numBuffers * 100 | 0\n        @emit 'data', @list.first\n        if @list.advance()\n            setImmediate @loop\n        else\n            @emit 'end'\n        \n    pause: ->\n        clearImmediate @_timer\n        @paused = true\n        \n    reset: ->\n        @pause()\n        @list.rewind()\n        \nmodule.exports = BufferSource\n","EventEmitter = require './core/events'\nBufferList = require './core/bufferlist'\nStream = require './core/stream'\n\nclass Demuxer extends EventEmitter\n    @probe: (buffer) ->\n        return false\n    \n    constructor: (source, chunk) ->\n        super()\n        list = new BufferList\n        list.append chunk\n        @stream = new Stream(list)\n        \n        received = false\n        source.on 'data', (chunk) =>\n            received = true\n            list.append chunk\n            try\n              @readChunk chunk\n            catch e\n              @emit 'error', e\n            \n        source.on 'error', (err) =>\n            @emit 'error', err\n            \n        source.on 'end', =>\n            # if there was only one chunk received, read it\n            @readChunk chunk unless received\n            @emit 'end'\n        \n        @seekPoints = []\n        @init()\n            \n    init: ->\n        return\n            \n    readChunk: (chunk) ->\n        return\n        \n    addSeekPoint: (offset, timestamp) ->\n        index = @searchTimestamp timestamp\n        @seekPoints.splice index, 0, \n            offset: offset\n            timestamp: timestamp\n        \n    searchTimestamp: (timestamp, backward) ->\n        low = 0\n        high = @seekPoints.length\n        \n        # optimize appending entries\n        if high > 0 and @seekPoints[high - 1].timestamp < timestamp\n            return high\n        \n        while low < high\n            mid = (low + high) >> 1\n            time = @seekPoints[mid].timestamp\n            \n            if time < timestamp\n                low = mid + 1\n                \n            else if time >= timestamp\n                high = mid\n                \n        if high > @seekPoints.length\n            high = @seekPoints.length\n            \n        return high\n        \n    seek: (timestamp) ->\n        if @format and @format.framesPerPacket > 0 and @format.bytesPerPacket > 0\n            seekPoint =\n                timestamp: timestamp\n                offset: @format.bytesPerPacket * timestamp / @format.framesPerPacket\n                \n            return seekPoint\n        else\n            index = @searchTimestamp timestamp\n            return @seekPoints[index]\n        \n    formats = []\n    @register: (demuxer) ->\n        formats.push demuxer\n            \n    @find: (buffer) ->\n        stream = Stream.fromBuffer(buffer)        \n        for format in formats\n            offset = stream.offset\n            try\n                 return format if format.probe(stream)\n            catch e\n                # an underflow or other error occurred\n                \n            stream.seek(offset)\n            \n        return null\n        \nmodule.exports = Demuxer\n","EventEmitter = require './core/events'\nBufferList = require './core/bufferlist'\nStream = require './core/stream'\nBitstream = require './core/bitstream'\nUnderflowError = require './core/underflow'\n\nclass Decoder extends EventEmitter\n    constructor: (@demuxer, @format) ->\n        super()\n        list = new BufferList\n        @stream = new Stream(list)\n        @bitstream = new Bitstream(@stream)\n        \n        @receivedFinalBuffer = false\n        @waiting = false\n        \n        @demuxer.on 'cookie', (cookie) =>\n            try\n                @setCookie cookie\n            catch error\n                @emit 'error', error\n            \n        @demuxer.on 'data', (chunk) =>\n            list.append chunk\n            @decode() if @waiting\n            \n        @demuxer.on 'end', =>\n            @receivedFinalBuffer = true\n            @decode() if @waiting\n            \n        @init()\n            \n    init: ->\n        return\n            \n    setCookie: (cookie) ->\n        return\n    \n    readChunk: ->\n        return\n        \n    decode: ->\n        @waiting = not @receivedFinalBuffer\n        offset = @bitstream.offset()\n        \n        try\n            packet = @readChunk()\n        catch error\n            if error not instanceof UnderflowError\n                @emit 'error', error\n                return false\n            \n        # if a packet was successfully read, emit it\n        if packet\n            @emit 'data', packet\n            if @receivedFinalBuffer\n              @emit 'end'\n            return true\n            \n        # if we haven't reached the end, jump back and try again when we have more data\n        else if not @receivedFinalBuffer\n            @bitstream.seek offset\n            @waiting = true\n            \n        # otherwise we've reached the end\n        else\n            @emit 'end'\n            \n        return false\n        \n    seek: (timestamp) ->\n        # use the demuxer to get a seek point\n        seekPoint = @demuxer.seek(timestamp)\n        @stream.seek(seekPoint.offset)\n        return seekPoint.timestamp\n    \n    codecs = {}\n    @register: (id, decoder) ->\n        codecs[id] = decoder\n        \n    @find: (id) ->\n        return codecs[id] or null\n        \nmodule.exports = Decoder\n","#\n# The AudioDevice class is responsible for interfacing with various audio\n# APIs in browsers, and for keeping track of the current playback time\n# based on the device hardware time and the play/pause/seek state\n#\n\nEventEmitter = require './core/events'\n\nclass AudioDevice extends EventEmitter\n    constructor: (@sampleRate, @channels) ->\n        super()\n        @playing = false\n        @currentTime = 0\n        @_lastTime = 0\n        \n    start: ->\n        return if @playing\n        @playing = true\n        \n        @device ?= AudioDevice.create(@sampleRate, @channels)\n        unless @device\n            throw new Error \"No supported audio device found.\"\n            \n        @_lastTime = @device.getDeviceTime()\n            \n        @_timer = setInterval @updateTime, 200\n        @device.on 'refill', @refill = (buffer) =>\n            @emit 'refill', buffer\n        \n    stop: ->\n        return unless @playing\n        @playing = false\n        \n        @device.off 'refill', @refill\n        clearInterval @_timer\n        \n    destroy: ->\n        @stop()\n        @device?.destroy()\n        \n    seek: (@currentTime) ->\n        @_lastTime = @device.getDeviceTime() if @playing\n        @emit 'timeUpdate', @currentTime\n        \n    updateTime: =>\n        time = @device.getDeviceTime()\n        @currentTime += (time - @_lastTime) / @device.sampleRate * 1000 | 0\n        @_lastTime = time\n        @emit 'timeUpdate', @currentTime\n        \n    devices = []\n    @register: (device) ->\n        devices.push(device)\n\n    @create: (sampleRate, channels) ->\n        for device in devices when device.supported\n            return new device(sampleRate, channels)\n\n        return null\n        \nmodule.exports = AudioDevice\n","#\n# The Asset class is responsible for managing all aspects of the \n# decoding pipeline from source to decoder.  You can use the Asset\n# class to inspect information about an audio file, such as its \n# format, metadata, and duration, as well as actually decode the\n# file to linear PCM raw audio data.\n#\n\nEventEmitter = require './core/events'\nHTTPSource   = require './sources/node/http'\nFileSource   = require './sources/node/file'\nBufferSource = require './sources/buffer'\nDemuxer      = require './demuxer'\nDecoder      = require './decoder'\n\nclass Asset extends EventEmitter\n    constructor: (@source) ->\n        super()\n        @buffered = 0\n        @duration = null\n        @format = null\n        @metadata = null\n        @active = false\n        @demuxer = null\n        @decoder = null\n                \n        @source.once 'data', @probe\n        @source.on 'error', (err) =>\n            @emit 'error', err\n            @stop()\n            \n        @source.on 'progress', (@buffered) =>\n            @emit 'buffer', @buffered\n            \n    @fromURL: (url, opts) ->\n        return new Asset new HTTPSource(url, opts)\n\n    @fromFile: (file) ->\n        return new Asset new FileSource(file)\n        \n    @fromBuffer: (buffer) ->\n        return new Asset new BufferSource(buffer)\n        \n    start: (decode) ->\n        return if @active\n        \n        @shouldDecode = decode if decode?\n        @shouldDecode ?= true\n        \n        @active = true\n        @source.start()\n        \n        if @decoder and @shouldDecode\n            @_decode()\n        \n    stop: ->\n        return unless @active\n        \n        @active = false\n        @source.pause()\n        \n    get: (event, callback) ->\n        return unless event in ['format', 'duration', 'metadata']\n        \n        if this[event]?\n            callback(this[event])\n        else\n            @once event, (value) =>\n                @stop()\n                callback(value)\n            \n            @start()\n            \n    decodePacket: ->\n        @decoder.decode()\n        \n    decodeToBuffer: (callback) ->\n        length = 0\n        chunks = []\n        @on 'data', dataHandler = (chunk) ->\n            length += chunk.length\n            chunks.push chunk\n            \n        @once 'end', ->\n            buf = new Float32Array(length)\n            offset = 0\n            \n            for chunk in chunks\n                buf.set(chunk, offset)\n                offset += chunk.length\n                \n            @off 'data', dataHandler\n            callback(buf)\n            \n        @start()\n    \n    probe: (chunk) =>\n        return unless @active\n        \n        demuxer = Demuxer.find(chunk)\n        if not demuxer\n            return @emit 'error', 'A demuxer for this container was not found.'\n            \n        @demuxer = new demuxer(@source, chunk)\n        @demuxer.on 'format', @findDecoder\n        \n        @demuxer.on 'duration', (@duration) =>\n            @emit 'duration', @duration\n            \n        @demuxer.on 'metadata', (@metadata) =>\n            @emit 'metadata', @metadata\n            \n        @demuxer.on 'error', (err) =>\n            @emit 'error', err\n            @stop()\n\n    findDecoder: (@format) =>\n        return unless @active\n        \n        @emit 'format', @format\n        \n        decoder = Decoder.find(@format.formatID)\n        if not decoder\n            return @emit 'error', \"A decoder for #{@format.formatID} was not found.\"\n\n        @decoder = new decoder(@demuxer, @format)\n        \n        if @format.floatingPoint\n            @decoder.on 'data', (buffer) =>\n                @emit 'data', buffer\n        else\n            div = Math.pow(2, @format.bitsPerChannel - 1)\n            @decoder.on 'data', (buffer) =>\n                buf = new Float32Array(buffer.length)\n                for sample, i in buffer\n                    buf[i] = sample / div\n                    \n                @emit 'data', buf\n            \n        @decoder.on 'error', (err) =>\n            @emit 'error', err\n            @stop()\n            \n        @decoder.on 'end', =>\n            @emit 'end'\n            \n        @emit 'decodeStart'\n        @_decode() if @shouldDecode\n        \n    _decode: =>\n        continue while @decoder.decode() and @active\n        @decoder.once 'data', @_decode if @active\n        \n    destroy: ->\n        @stop()\n        @demuxer?.off()\n        @decoder?.off()\n        @source?.off()\n        @off()\n        \nmodule.exports = Asset\n","Filter = require '../filter'\n\nclass VolumeFilter extends Filter\n    process: (buffer) ->\n        return if @value >= 100\n        vol = Math.max(0, Math.min(100, @value)) / 100\n        \n        for i in [0...buffer.length] by 1\n            buffer[i] *= vol\n            \n        return\n        \nmodule.exports = VolumeFilter\n","class Filter\n    constructor: (context, key) ->\n        # default constructor takes a single value\n        # override to take more parameters\n        if context and key\n            Object.defineProperty this, 'value', \n                get: -> context[key]\n        \n    process: (buffer) ->\n        # override this method\n        return\n        \nmodule.exports = Filter\n","Filter = require '../filter'\n\nclass BalanceFilter extends Filter\n    process: (buffer) ->\n        return if @value is 0\n        pan = Math.max(-50, Math.min(50, @value))\n        \n        for i in [0...buffer.length] by 2\n            buffer[i] *= Math.min(1, (50 - pan) / 50)\n            buffer[i + 1] *= Math.min(1, (50 + pan) / 50)\n            \n        return\n        \nmodule.exports = BalanceFilter\n","EventEmitter = require './core/events'\n\nclass Queue extends EventEmitter\n    constructor: (@asset) ->\n        super()\n        @readyMark = 64\n        @finished = false\n        @buffering = true\n        @ended = false\n        \n        @buffers = []\n        @asset.on 'data', @write\n        @asset.on 'end', =>\n            @ended = true\n            \n        @asset.decodePacket()\n        \n    write: (buffer) =>\n        @buffers.push buffer if buffer\n        \n        if @buffering\n            if @buffers.length >= @readyMark or @ended\n                @buffering = false\n                @emit 'ready'\n            else    \n                @asset.decodePacket()\n            \n    read: ->\n        return null if @buffers.length is 0\n        \n        @asset.decodePacket()\n        return @buffers.shift()\n        \n    reset: ->\n        @buffers.length = 0\n        @buffering = true\n        @asset.decodePacket()\n        \nmodule.exports = Queue\n","#\n# The Player class plays back audio data from various sources\n# as decoded by the Asset class.  In addition, it handles\n# common audio filters like panning and volume adjustment,\n# and interfacing with AudioDevices to keep track of the \n# playback time.\n#\n\nEventEmitter = require './core/events'\nAsset = require './asset'\nVolumeFilter = require './filters/volume'\nBalanceFilter = require './filters/balance'\nQueue = require './queue'\nAudioDevice = require './device'\n\nclass Player extends EventEmitter\n    constructor: (@asset) ->\n        super()\n        @playing = false\n        @buffered = 0\n        @currentTime = 0\n        @duration = 0\n        @volume = 100\n        @pan = 0 # -50 for left, 50 for right, 0 for center\n        @metadata = {}\n        \n        @filters = [\n            new VolumeFilter(this, 'volume')\n            new BalanceFilter(this, 'pan')\n        ]\n        \n        @asset.on 'buffer', (@buffered) =>\n            @emit 'buffer', @buffered\n        \n        @asset.on 'decodeStart', =>\n            @queue = new Queue(@asset)\n            @queue.once 'ready', @startPlaying\n            \n        @asset.on 'format', (@format) =>\n            @emit 'format', @format\n            \n        @asset.on 'metadata', (@metadata) =>\n            @emit 'metadata', @metadata\n            \n        @asset.on 'duration', (@duration) =>\n            @emit 'duration', @duration\n            \n        @asset.on 'error', (error) =>\n            @emit 'error', error\n                \n    @fromURL: (url, opts) ->\n        return new Player Asset.fromURL(url, opts)\n        \n    @fromFile: (file) ->\n        return new Player Asset.fromFile(file)\n        \n    @fromBuffer: (buffer) ->\n        return new Player Asset.fromBuffer(buffer)\n        \n    preload: ->\n        return unless @asset\n        \n        @startedPreloading = true\n        @asset.start(false)\n        \n    play: ->\n        return if @playing\n        \n        unless @startedPreloading\n            @preload()\n        \n        @playing = true\n        @device?.start()\n        \n    pause: ->\n        return unless @playing\n        \n        @playing = false\n        @device?.stop()\n        \n    togglePlayback: ->\n        if @playing\n            @pause()\n        else\n            @play()\n        \n    stop: ->\n        @pause()\n        @asset.stop()\n        @device?.destroy()\n        \n    seek: (timestamp) ->\n        @device?.stop()\n        @queue.once 'ready', =>\n            @device?.seek @currentTime\n            @device?.start() if @playing\n            \n        # convert timestamp to sample number\n        timestamp = (timestamp / 1000) * @format.sampleRate\n            \n        # the actual timestamp we seeked to may differ \n        # from the requested timestamp due to optimizations\n        timestamp = @asset.decoder.seek(timestamp)\n        \n        # convert back from samples to milliseconds\n        @currentTime = timestamp / @format.sampleRate * 1000 | 0\n        \n        @queue.reset()\n        return @currentTime\n        \n    startPlaying: =>\n        frame = @queue.read()\n        frameOffset = 0\n        \n        @device = new AudioDevice(@format.sampleRate, @format.channelsPerFrame)\n        @device.on 'timeUpdate', (@currentTime) =>\n            @emit 'progress', @currentTime\n        \n        @refill = (buffer) =>\n            return unless @playing\n            \n            # try reading another frame if one isn't already available\n            # happens when we play to the end and then seek back\n            if not frame\n                frame = @queue.read()\n                frameOffset = 0\n\n            bufferOffset = 0\n            while frame and bufferOffset < buffer.length\n                max = Math.min(frame.length - frameOffset, buffer.length - bufferOffset)\n                for i in [0...max] by 1\n                    buffer[bufferOffset++] = frame[frameOffset++]\n                \n                if frameOffset is frame.length\n                    frame = @queue.read()\n                    frameOffset = 0\n            \n            # run any applied filters\n            for filter in @filters\n                filter.process(buffer)\n                \n            # if we've run out of data, pause the player\n            unless frame\n                # if this was the end of the track, make\n                # sure the currentTime reflects that\n                if @queue.ended\n                    @currentTime = @duration\n                    @emit 'progress', @currentTime\n                    @emit 'end'\n                    @stop()\n                else\n                    # if we ran out of data in the middle of \n                    # the track, stop the timer but don't change\n                    # the playback state\n                    @device.stop()\n                    \n            return\n        \n        @device.on 'refill', @refill\n        @device.start() if @playing\n        @emit 'ready'\n        \n    destroy: ->\n        @stop()\n        @device?.off()\n        @asset?.destroy()\n        @off()\n        \nmodule.exports = Player\n","exports.Base = require './core/base'\nexports.Buffer = require './core/buffer'\nexports.BufferList = require './core/bufferlist'\nexports.Stream = require './core/stream'\nexports.Bitstream = require './core/bitstream'\nexports.EventEmitter = require './core/events'\nexports.UnderflowError = require './core/underflow'\n\n# browserify will replace these with the browser versions\nexports.HTTPSource = require './sources/node/http'\nexports.FileSource = require './sources/node/file'\nexports.BufferSource = require './sources/buffer'\n\nexports.Demuxer = require './demuxer'\nexports.Decoder = require './decoder'\nexports.AudioDevice = require './device'\nexports.Asset = require './asset'\nexports.Player = require './player'\n\nexports.Filter = require './filter'\nexports.VolumeFilter = require './filters/volume'\nexports.BalanceFilter = require './filters/balance'\n","Demuxer = require '../demuxer'\n\nclass M4ADemuxer extends Demuxer\n    Demuxer.register(M4ADemuxer)\n    \n    # common file type identifiers\n    # see http://mp4ra.org/filetype.html for a complete list\n    TYPES = ['M4A ', 'M4P ', 'M4B ', 'M4V ', 'isom', 'mp42', 'qt  ']\n    \n    @probe: (buffer) ->\n        return buffer.peekString(4, 4) is 'ftyp' and\n               buffer.peekString(8, 4) in TYPES\n        \n    init: ->\n        # current atom heirarchy stacks\n        @atoms = []\n        @offsets = []\n        \n        # m4a files can have multiple tracks\n        @track = null\n        @tracks = []\n        \n    # lookup table for atom handlers\n    atoms = {}\n    \n    # lookup table of container atom names\n    containers = {}\n    \n    # declare a function to be used for parsing a given atom name\n    atom = (name, fn) ->        \n        c = []\n        for container in name.split('.').slice(0, -1)\n            c.push container\n            containers[c.join('.')] = true\n            \n        atoms[name] ?= {}\n        atoms[name].fn = fn\n        \n    # declare a function to be called after parsing of an atom and all sub-atoms has completed\n    after = (name, fn) ->\n        atoms[name] ?= {}\n        atoms[name].after = fn\n        \n    readChunk: ->\n        @break = false\n        \n        while @stream.available(1) and not @break\n            # if we're ready to read a new atom, add it to the stack\n            if not @readHeaders\n                return unless @stream.available(8)\n                \n                @len = @stream.readUInt32() - 8\n                @type = @stream.readString(4)\n                \n                continue if @len is 0\n                \n                @atoms.push @type\n                @offsets.push @stream.offset + @len\n                @readHeaders = true\n                \n            # find a handler for the current atom heirarchy\n            path = @atoms.join '.'                \n            handler = atoms[path]\n            \n            if handler?.fn\n                # wait until we have enough data, unless this is the mdat atom\n                return unless @stream.available(@len) or path is 'mdat'\n\n                # call the parser for the atom type\n                handler.fn.call(this)\n                \n                # check if this atom can contain sub-atoms\n                if path of containers\n                    @readHeaders = false\n                    \n            # handle container atoms\n            else if path of containers\n                @readHeaders = false\n                \n            # unknown atom\n            else\n                # wait until we have enough data\n                return unless @stream.available(@len)\n                @stream.advance(@len)\n                \n            # pop completed items from the stack\n            while @stream.offset >= @offsets[@offsets.length - 1]\n                # call after handler\n                handler = atoms[@atoms.join '.']\n                if handler?.after\n                    handler.after.call(this)\n                \n                type = @atoms.pop()\n                @offsets.pop()\n                @readHeaders = false\n                \n    atom 'ftyp', ->\n        if @stream.readString(4) not in TYPES\n            return @emit 'error', 'Not a valid M4A file.'\n        \n        @stream.advance(@len - 4)\n    \n    atom 'moov.trak', ->\n        @track = {}\n        @tracks.push @track\n        \n    atom 'moov.trak.tkhd', ->\n        @stream.advance(4) # version and flags\n        \n        @stream.advance(8) # creation and modification time\n        @track.id = @stream.readUInt32()\n        \n        @stream.advance(@len - 16)\n        \n    atom 'moov.trak.mdia.hdlr', ->\n        @stream.advance(4) # version and flags\n        \n        @stream.advance(4) # component type\n        @track.type = @stream.readString(4)\n        \n        @stream.advance(12) # component manufacturer, flags, and mask\n        @stream.advance(@len - 24) # component name\n    \n    atom 'moov.trak.mdia.mdhd', ->\n        @stream.advance(4) # version and flags\n        @stream.advance(8) # creation and modification dates\n        \n        @track.timeScale = @stream.readUInt32()\n        @track.duration = @stream.readUInt32()\n        \n        @stream.advance(4) # language and quality\n        \n    # corrections to bits per channel, base on formatID\n    # (ffmpeg appears to always encode the bitsPerChannel as 16)\n    BITS_PER_CHANNEL = \n        ulaw: 8\n        alaw: 8\n        in24: 24\n        in32: 32\n        fl32: 32\n        fl64: 64\n        \n    atom 'moov.trak.mdia.minf.stbl.stsd', ->\n        @stream.advance(4) # version and flags\n        \n        numEntries = @stream.readUInt32()\n        \n        # just ignore the rest of the atom if this isn't an audio track\n        if @track.type isnt 'soun'\n            return @stream.advance(@len - 8)\n        \n        if numEntries isnt 1\n            return @emit 'error', \"Only expecting one entry in sample description atom!\"\n            \n        @stream.advance(4) # size\n        \n        format = @track.format = {}\n        format.formatID = @stream.readString(4)\n        \n        @stream.advance(6) # reserved\n        @stream.advance(2) # data reference index\n        \n        version = @stream.readUInt16()\n        @stream.advance(6) # skip revision level and vendor\n        \n        format.channelsPerFrame = @stream.readUInt16()\n        format.bitsPerChannel = @stream.readUInt16()\n        \n        @stream.advance(4) # skip compression id and packet size\n        \n        format.sampleRate = @stream.readUInt16()\n        @stream.advance(2)\n        \n        if version is 1\n            format.framesPerPacket = @stream.readUInt32()\n            @stream.advance(4) # bytes per packet\n            format.bytesPerFrame = @stream.readUInt32()\n            @stream.advance(4) # bytes per sample\n            \n        else if version isnt 0\n            @emit 'error', 'Unknown version in stsd atom'\n            \n        if BITS_PER_CHANNEL[format.formatID]?\n            format.bitsPerChannel = BITS_PER_CHANNEL[format.formatID]\n            \n        format.floatingPoint = format.formatID in ['fl32', 'fl64']\n        format.littleEndian = format.formatID is 'sowt' and format.bitsPerChannel > 8\n        \n        if format.formatID in ['twos', 'sowt', 'in24', 'in32', 'fl32', 'fl64', 'raw ', 'NONE']\n            format.formatID = 'lpcm'\n        \n    atom 'moov.trak.mdia.minf.stbl.stsd.alac', ->\n        @stream.advance(4)\n        @track.cookie = @stream.readBuffer(@len - 4)\n        \n    atom 'moov.trak.mdia.minf.stbl.stsd.esds', ->\n        offset = @stream.offset + @len\n        @track.cookie = M4ADemuxer.readEsds @stream\n        @stream.seek offset # skip garbage at the end \n        \n    atom 'moov.trak.mdia.minf.stbl.stsd.wave.enda', ->\n        @track.format.littleEndian = !!@stream.readUInt16()\n        \n    # reads a variable length integer\n    @readDescrLen: (stream) ->\n        len = 0\n        count = 4\n\n        while count--\n            c = stream.readUInt8()\n            len = (len << 7) | (c & 0x7f)\n            break unless c & 0x80\n\n        return len\n        \n    @readEsds: (stream) ->\n        stream.advance(4) # version and flags\n        \n        tag = stream.readUInt8()\n        len = M4ADemuxer.readDescrLen(stream)\n\n        if tag is 0x03 # MP4ESDescrTag\n            stream.advance(2) # id\n            flags = stream.readUInt8()\n\n            if flags & 0x80 # streamDependenceFlag\n                stream.advance(2)\n\n            if flags & 0x40 # URL_Flag\n                stream.advance stream.readUInt8()\n\n            if flags & 0x20 # OCRstreamFlag\n                stream.advance(2)\n\n        else\n            stream.advance(2) # id\n\n        tag = stream.readUInt8()\n        len = M4ADemuxer.readDescrLen(stream)\n            \n        if tag is 0x04 # MP4DecConfigDescrTag\n            codec_id = stream.readUInt8() # might want this... (isom.c:35)\n            stream.advance(1) # stream type\n            stream.advance(3) # buffer size\n            stream.advance(4) # max bitrate\n            stream.advance(4) # avg bitrate\n\n            tag = stream.readUInt8()\n            len = M4ADemuxer.readDescrLen(stream)\n            \n            if tag is 0x05 # MP4DecSpecificDescrTag\n                return stream.readBuffer(len)\n        \n        return null\n        \n    # time to sample\n    atom 'moov.trak.mdia.minf.stbl.stts', ->\n        @stream.advance(4) # version and flags\n        \n        entries = @stream.readUInt32()\n        @track.stts = []\n        for i in [0...entries] by 1\n            @track.stts[i] =\n                count: @stream.readUInt32()\n                duration: @stream.readUInt32()\n                \n        @setupSeekPoints()\n    \n    # sample to chunk\n    atom 'moov.trak.mdia.minf.stbl.stsc', ->\n        @stream.advance(4) # version and flags\n        \n        entries = @stream.readUInt32()\n        @track.stsc = []\n        for i in [0...entries] by 1\n            @track.stsc[i] = \n                first: @stream.readUInt32()\n                count: @stream.readUInt32()\n                id: @stream.readUInt32()\n                \n        @setupSeekPoints()\n        \n    # sample size\n    atom 'moov.trak.mdia.minf.stbl.stsz', ->\n        @stream.advance(4) # version and flags\n        \n        @track.sampleSize = @stream.readUInt32()\n        entries = @stream.readUInt32()\n        \n        if @track.sampleSize is 0 and entries > 0\n            @track.sampleSizes = []\n            for i in [0...entries] by 1\n                @track.sampleSizes[i] = @stream.readUInt32()\n                \n        @setupSeekPoints()\n    \n    # chunk offsets\n    atom 'moov.trak.mdia.minf.stbl.stco', -> # TODO: co64\n        @stream.advance(4) # version and flags\n        \n        entries = @stream.readUInt32()\n        @track.chunkOffsets = []\n        for i in [0...entries] by 1\n            @track.chunkOffsets[i] = @stream.readUInt32()\n            \n        @setupSeekPoints()\n        \n    # chapter track reference\n    atom 'moov.trak.tref.chap', ->\n        entries = @len >> 2\n        @track.chapterTracks = []\n        for i in [0...entries] by 1\n            @track.chapterTracks[i] = @stream.readUInt32()\n            \n        return\n        \n    # once we have all the information we need, generate the seek table for this track\n    setupSeekPoints: ->\n        return unless @track.chunkOffsets? and @track.stsc? and @track.sampleSize? and @track.stts?\n        \n        stscIndex = 0\n        sttsIndex = 0\n        sttsIndex = 0\n        sttsSample = 0\n        sampleIndex = 0\n        \n        offset = 0\n        timestamp = 0\n        @track.seekPoints = []\n        \n        for position, i in @track.chunkOffsets\n            for j in [0...@track.stsc[stscIndex].count] by 1\n                # push the timestamp and both the physical position in the file\n                # and the offset without gaps from the start of the data\n                @track.seekPoints.push\n                    offset: offset\n                    position: position\n                    timestamp: timestamp\n                \n                size = @track.sampleSize or @track.sampleSizes[sampleIndex++]\n                offset += size\n                position += size\n                timestamp += @track.stts[sttsIndex].duration\n                \n                if sttsIndex + 1 < @track.stts.length and ++sttsSample is @track.stts[sttsIndex].count\n                    sttsSample = 0\n                    sttsIndex++\n                    \n            if stscIndex + 1 < @track.stsc.length and i + 1 is @track.stsc[stscIndex + 1].first\n                stscIndex++\n        \n    after 'moov', ->        \n        # if the mdat block was at the beginning rather than the end, jump back to it\n        if @mdatOffset?\n            @stream.seek @mdatOffset - 8\n            \n        # choose a track\n        for track in @tracks when track.type is 'soun'\n            @track = track\n            break\n            \n        if @track.type isnt 'soun'\n            @track = null\n            return @emit 'error', 'No audio tracks in m4a file.'\n            \n        # emit info\n        @emit 'format', @track.format\n        @emit 'duration', @track.duration / @track.timeScale * 1000 | 0\n        if @track.cookie\n            @emit 'cookie', @track.cookie\n        \n        # use the seek points from the selected track\n        @seekPoints = @track.seekPoints\n        \n    atom 'mdat', ->\n        if not @startedData\n            @mdatOffset ?= @stream.offset\n            \n            # if we haven't read the headers yet, the mdat atom was at the beginning\n            # rather than the end. Skip over it for now to read the headers first, and\n            # come back later.\n            if @tracks.length is 0\n                bytes = Math.min(@stream.remainingBytes(), @len)\n                @stream.advance bytes\n                @len -= bytes\n                return\n            \n            @chunkIndex = 0\n            @stscIndex = 0\n            @sampleIndex = 0\n            @tailOffset = 0\n            @tailSamples = 0\n            \n            @startedData = true\n            \n        # read the chapter information if any\n        unless @readChapters\n            @readChapters = @parseChapters()\n            return if @break = not @readChapters\n            @stream.seek @mdatOffset\n            \n        # get the starting offset\n        offset = @track.chunkOffsets[@chunkIndex] + @tailOffset\n        length = 0\n        \n        # make sure we have enough data to get to the offset\n        unless @stream.available(offset - @stream.offset)\n            @break = true\n            return\n        \n        # seek to the offset\n        @stream.seek(offset)\n        \n        # calculate the maximum length we can read at once\n        while @chunkIndex < @track.chunkOffsets.length\n            # calculate the size in bytes of the chunk using the sample size table\n            numSamples = @track.stsc[@stscIndex].count - @tailSamples\n            chunkSize = 0\n            for sample in [0...numSamples] by 1\n                size = @track.sampleSize or @track.sampleSizes[@sampleIndex]\n                \n                # if we don't have enough data to add this sample, jump out\n                break unless @stream.available(length + size)\n                \n                length += size\n                chunkSize += size\n                @sampleIndex++\n            \n            # if we didn't make it through the whole chunk, add what we did use to the tail\n            if sample < numSamples\n                @tailOffset += chunkSize\n                @tailSamples += sample\n                break\n            else\n                # otherwise, we can move to the next chunk\n                @chunkIndex++\n                @tailOffset = 0\n                @tailSamples = 0\n                \n                # if we've made it to the end of a list of subsequent chunks with the same number of samples,\n                # go to the next sample to chunk entry\n                if @stscIndex + 1 < @track.stsc.length and @chunkIndex + 1 is @track.stsc[@stscIndex + 1].first\n                    @stscIndex++\n                \n                # if the next chunk isn't right after this one, jump out\n                if offset + length isnt @track.chunkOffsets[@chunkIndex]\n                    break\n        \n        # emit some data if we have any, otherwise wait for more\n        if length > 0\n            @emit 'data', @stream.readBuffer(length)\n            @break = @chunkIndex is @track.chunkOffsets.length\n        else\n            @break = true\n            \n    parseChapters: ->\n        return true unless @track.chapterTracks?.length > 0\n\n        # find the chapter track\n        id = @track.chapterTracks[0]\n        for track in @tracks\n            break if track.id is id\n\n        if track.id isnt id\n            @emit 'error', 'Chapter track does not exist.'\n\n        @chapters ?= []\n        \n        # use the seek table offsets to find chapter titles\n        while @chapters.length < track.seekPoints.length\n            point = track.seekPoints[@chapters.length]\n            \n            # make sure we have enough data\n            return false unless @stream.available(point.position - @stream.offset + 32)\n\n            # jump to the title offset\n            @stream.seek point.position\n\n            # read the length of the title string\n            len = @stream.readUInt16()\n            title = null\n            \n            return false unless @stream.available(len)\n            \n            # if there is a BOM marker, read a utf16 string\n            if len > 2\n                bom = @stream.peekUInt16()\n                if bom in [0xfeff, 0xfffe]\n                    title = @stream.readString(len, 'utf16-bom')\n\n            # otherwise, use utf8\n            title ?= @stream.readString(len, 'utf8')\n            \n            # add the chapter title, timestamp, and duration\n            nextTimestamp = track.seekPoints[@chapters.length + 1]?.timestamp ? track.duration\n            @chapters.push\n                title: title\n                timestamp: point.timestamp / track.timeScale * 1000 | 0\n                duration: (nextTimestamp - point.timestamp) / track.timeScale * 1000 | 0\n                \n        # we're done, so emit the chapter data\n        @emit 'chapters', @chapters\n        return true\n        \n    # metadata chunk\n    atom 'moov.udta.meta', ->\n        @metadata = {}        \n        @stream.advance(4) # version and flags\n        \n    # emit when we're done\n    after 'moov.udta.meta', ->\n        @emit 'metadata', @metadata\n\n    # convienience function to generate metadata atom handler\n    meta = (field, name, fn) ->\n        atom \"moov.udta.meta.ilst.#{field}.data\", ->\n            @stream.advance(8)\n            @len -= 8\n            fn.call this, name\n\n    # string field reader\n    string = (field) ->\n        @metadata[field] = @stream.readString(@len, 'utf8')\n\n    # from http://atomicparsley.sourceforge.net/mpeg-4files.html\n    meta '©alb', 'album', string\n    meta '©arg', 'arranger', string\n    meta '©art', 'artist', string\n    meta '©ART', 'artist', string\n    meta 'aART', 'albumArtist', string\n    meta 'catg', 'category', string\n    meta '©com', 'composer', string\n    meta '©cpy', 'copyright', string\n    meta 'cprt', 'copyright', string\n    meta '©cmt', 'comments', string\n    meta '©day', 'releaseDate', string\n    meta 'desc', 'description', string\n    meta '©gen', 'genre', string # custom genres\n    meta '©grp', 'grouping', string\n    meta '©isr', 'ISRC', string\n    meta 'keyw', 'keywords', string\n    meta '©lab', 'recordLabel', string\n    meta 'ldes', 'longDescription', string\n    meta '©lyr', 'lyrics', string\n    meta '©nam', 'title', string\n    meta '©phg', 'recordingCopyright', string\n    meta '©prd', 'producer', string\n    meta '©prf', 'performers', string\n    meta 'purd', 'purchaseDate', string\n    meta 'purl', 'podcastURL', string\n    meta '©swf', 'songwriter', string\n    meta '©too', 'encoder', string\n    meta '©wrt', 'composer', string\n\n    meta 'covr', 'coverArt', (field) ->\n        @metadata[field] = @stream.readBuffer(@len)\n\n    # standard genres\n    genres = [\n        \"Blues\", \"Classic Rock\", \"Country\", \"Dance\", \"Disco\", \"Funk\", \"Grunge\", \n        \"Hip-Hop\", \"Jazz\", \"Metal\", \"New Age\", \"Oldies\", \"Other\", \"Pop\", \"R&B\",\n        \"Rap\", \"Reggae\", \"Rock\", \"Techno\", \"Industrial\", \"Alternative\", \"Ska\", \n        \"Death Metal\", \"Pranks\", \"Soundtrack\", \"Euro-Techno\", \"Ambient\", \n        \"Trip-Hop\", \"Vocal\", \"Jazz+Funk\", \"Fusion\", \"Trance\", \"Classical\", \n        \"Instrumental\", \"Acid\", \"House\", \"Game\", \"Sound Clip\", \"Gospel\", \"Noise\",\n        \"AlternRock\", \"Bass\", \"Soul\", \"Punk\", \"Space\", \"Meditative\", \"Instrumental Pop\", \n        \"Instrumental Rock\", \"Ethnic\", \"Gothic\",  \"Darkwave\", \"Techno-Industrial\", \n        \"Electronic\", \"Pop-Folk\", \"Eurodance\", \"Dream\", \"Southern Rock\", \"Comedy\", \n        \"Cult\", \"Gangsta\", \"Top 40\", \"Christian Rap\", \"Pop/Funk\", \"Jungle\", \n        \"Native American\", \"Cabaret\", \"New Wave\", \"Psychadelic\", \"Rave\", \"Showtunes\",\n        \"Trailer\", \"Lo-Fi\", \"Tribal\", \"Acid Punk\", \"Acid Jazz\", \"Polka\", \"Retro\", \n        \"Musical\", \"Rock & Roll\", \"Hard Rock\", \"Folk\", \"Folk/Rock\", \"National Folk\", \n        \"Swing\", \"Fast Fusion\", \"Bebob\", \"Latin\", \"Revival\", \"Celtic\", \"Bluegrass\",\n        \"Avantgarde\", \"Gothic Rock\", \"Progressive Rock\", \"Psychedelic Rock\", \"Symphonic Rock\",\n        \"Slow Rock\", \"Big Band\", \"Chorus\", \"Easy Listening\", \"Acoustic\", \"Humour\", \"Speech\", \n        \"Chanson\", \"Opera\", \"Chamber Music\", \"Sonata\", \"Symphony\", \"Booty Bass\", \"Primus\", \n        \"Porn Groove\", \"Satire\", \"Slow Jam\", \"Club\", \"Tango\", \"Samba\", \"Folklore\", \"Ballad\", \n        \"Power Ballad\", \"Rhythmic Soul\", \"Freestyle\", \"Duet\", \"Punk Rock\", \"Drum Solo\", \n        \"A Capella\", \"Euro-House\", \"Dance Hall\"\n    ]\n\n    meta 'gnre', 'genre', (field) ->\n        @metadata[field] = genres[@stream.readUInt16() - 1]\n\n    meta 'tmpo', 'tempo', (field) ->\n        @metadata[field] = @stream.readUInt16()\n\n    meta 'rtng', 'rating', (field) ->\n        rating = @stream.readUInt8()\n        @metadata[field] = if rating is 2 then 'Clean' else if rating isnt 0 then 'Explicit' else 'None'\n\n    diskTrack = (field) ->\n        @stream.advance(2)\n        @metadata[field] = @stream.readUInt16() + ' of ' + @stream.readUInt16()\n        @stream.advance(@len - 6)\n\n    meta 'disk', 'diskNumber', diskTrack\n    meta 'trkn', 'trackNumber', diskTrack\n\n    bool = (field) ->\n        @metadata[field] = @stream.readUInt8() is 1\n\n    meta 'cpil', 'compilation', bool\n    meta 'pcst', 'podcast', bool\n    meta 'pgap', 'gapless', bool\n    \nmodule.exports = M4ADemuxer\n","Demuxer = require '../demuxer'\nM4ADemuxer = require './m4a'\n\nclass CAFDemuxer extends Demuxer\n    Demuxer.register(CAFDemuxer)\n    \n    @probe: (buffer) ->\n        return buffer.peekString(0, 4) is 'caff'\n        \n    readChunk: ->\n        if not @format and @stream.available(64) # Number out of my behind\n            if @stream.readString(4) isnt 'caff'\n                return @emit 'error', \"Invalid CAF, does not begin with 'caff'\"\n                \n            # skip version and flags\n            @stream.advance(4)\n            \n            if @stream.readString(4) isnt 'desc'\n                return @emit 'error', \"Invalid CAF, 'caff' is not followed by 'desc'\"\n                \n            unless @stream.readUInt32() is 0 and @stream.readUInt32() is 32\n                return @emit 'error', \"Invalid 'desc' size, should be 32\"\n                \n            @format = {}\n            @format.sampleRate = @stream.readFloat64()\n            @format.formatID = @stream.readString(4)\n            \n            flags = @stream.readUInt32()\n            if @format.formatID is 'lpcm'\n                @format.floatingPoint = Boolean(flags & 1)\n                @format.littleEndian = Boolean(flags & 2)\n             \n            @format.bytesPerPacket = @stream.readUInt32()\n            @format.framesPerPacket = @stream.readUInt32()\n            @format.channelsPerFrame = @stream.readUInt32()\n            @format.bitsPerChannel = @stream.readUInt32()\n                \n            @emit 'format', @format\n            \n        while @stream.available(1)\n            unless @headerCache\n                @headerCache =\n                    type: @stream.readString(4)\n                    oversize: @stream.readUInt32() isnt 0\n                    size: @stream.readUInt32()\n                \n                if @headerCache.oversize\n                    return @emit 'error', \"Holy Shit, an oversized file, not supported in JS\"\n            \n            switch @headerCache.type\n                when 'kuki'\n                    if @stream.available(@headerCache.size)\n                        if @format.formatID is 'aac ' # variations needed?\n                            offset = @stream.offset + @headerCache.size\n                            if cookie = M4ADemuxer.readEsds(@stream)\n                                @emit 'cookie', cookie\n                                \n                            @stream.seek offset # skip extra garbage\n                    \n                        else\n                            buffer = @stream.readBuffer(@headerCache.size)\n                            @emit 'cookie', buffer\n                        \n                        @headerCache = null\n                        \n                when 'pakt'\n                    if @stream.available(@headerCache.size)\n                        if @stream.readUInt32() isnt 0\n                            return @emit 'error', 'Sizes greater than 32 bits are not supported.'\n                            \n                        @numPackets = @stream.readUInt32()\n                        \n                        if @stream.readUInt32() isnt 0\n                            return @emit 'error', 'Sizes greater than 32 bits are not supported.'\n                            \n                        @numFrames = @stream.readUInt32()\n                        @primingFrames = @stream.readUInt32()\n                        @remainderFrames = @stream.readUInt32()\n                        \n                        @emit 'duration', @numFrames / @format.sampleRate * 1000 | 0\n                        @sentDuration = true\n                        \n                        byteOffset = 0\n                        sampleOffset = 0\n                        for i in [0...@numPackets] by 1\n                            @addSeekPoint byteOffset, sampleOffset\n                            byteOffset += @format.bytesPerPacket or M4ADemuxer.readDescrLen(@stream)\n                            sampleOffset += @format.framesPerPacket or M4ADemuxer.readDescrLen(@stream)\n                        \n                        @headerCache = null\n                        \n                when 'info'\n                    entries = @stream.readUInt32()\n                    metadata = {}\n                    \n                    for i in [0...entries]\n                        # null terminated strings\n                        key = @stream.readString(null)\n                        value = @stream.readString(null)                        \n                        metadata[key] = value\n                    \n                    @emit 'metadata', metadata\n                    @headerCache = null\n                    \n                when 'data'\n                    unless @sentFirstDataChunk\n                        # skip edit count\n                        @stream.advance(4)\n                        @headerCache.size -= 4\n\n                        # calculate the duration based on bytes per packet if no packet table\n                        if @format.bytesPerPacket isnt 0 and not @sentDuration\n                            @numFrames = @headerCache.size / @format.bytesPerPacket\n                            @emit 'duration', @numFrames / @format.sampleRate * 1000 | 0\n                            \n                        @sentFirstDataChunk = true\n                \n                    buffer = @stream.readSingleBuffer(@headerCache.size)\n                    @headerCache.size -= buffer.length\n                    @emit 'data', buffer\n                    \n                    if @headerCache.size <= 0\n                        @headerCache = null\n                    \n                else\n                    if @stream.available(@headerCache.size)\n                        @stream.advance(@headerCache.size)\n                        @headerCache = null\n                        \n        return","Demuxer = require '../demuxer'\n\nclass AIFFDemuxer extends Demuxer\n    Demuxer.register(AIFFDemuxer)\n    \n    @probe: (buffer) ->\n        return buffer.peekString(0, 4) is 'FORM' && \n               buffer.peekString(8, 4) in ['AIFF', 'AIFC']\n        \n    readChunk: ->\n        if not @readStart and @stream.available(12)\n            if @stream.readString(4) isnt 'FORM'\n                return @emit 'error', 'Invalid AIFF.'\n                \n            @fileSize = @stream.readUInt32()\n            @fileType = @stream.readString(4)\n            @readStart = true\n            \n            if @fileType not in ['AIFF', 'AIFC']\n                return @emit 'error', 'Invalid AIFF.'\n        \n        while @stream.available(1)\n            if not @readHeaders and @stream.available(8)\n                @type = @stream.readString(4)\n                @len = @stream.readUInt32()\n                \n            switch @type\n                when 'COMM'\n                    return unless @stream.available(@len)\n                    \n                    @format =\n                        formatID: 'lpcm'\n                        channelsPerFrame: @stream.readUInt16()\n                        sampleCount: @stream.readUInt32()\n                        bitsPerChannel: @stream.readUInt16()\n                        sampleRate: @stream.readFloat80()\n                        framesPerPacket: 1\n                        littleEndian: false\n                        floatingPoint: false\n                        \n                    @format.bytesPerPacket = (@format.bitsPerChannel / 8) * @format.channelsPerFrame\n                    \n                    if @fileType is 'AIFC'\n                        format = @stream.readString(4)\n                        \n                        @format.littleEndian = format is 'sowt' and @format.bitsPerChannel > 8\n                        @format.floatingPoint = format in ['fl32', 'fl64']\n                        \n                        format = 'lpcm' if format in ['twos', 'sowt', 'fl32', 'fl64', 'NONE']\n                        @format.formatID = format\n                        @len -= 4\n                        \n                    @stream.advance(@len - 18)\n                    @emit 'format', @format\n                    @emit 'duration', @format.sampleCount / @format.sampleRate * 1000 | 0\n                    \n                when 'SSND'\n                    unless @readSSNDHeader and @stream.available(4)\n                        offset = @stream.readUInt32()\n                        @stream.advance(4) # skip block size\n                        @stream.advance(offset) # skip to data\n                        @readSSNDHeader = true\n                        \n                    buffer = @stream.readSingleBuffer(@len)\n                    @len -= buffer.length\n                    @readHeaders = @len > 0\n                    @emit 'data', buffer\n                    \n                else\n                    return unless @stream.available(@len)\n                    @stream.advance(@len)\n                        \n            @readHeaders = false unless @type is 'SSND'\n            \n        return","Demuxer = require '../demuxer'\n\nclass WAVEDemuxer extends Demuxer\n    Demuxer.register(WAVEDemuxer)\n    \n    @probe: (buffer) ->\n        return buffer.peekString(0, 4) is 'RIFF' && \n               buffer.peekString(8, 4) is 'WAVE'\n               \n    formats = \n        0x0001: 'lpcm'\n        0x0003: 'lpcm'\n        0x0006: 'alaw'\n        0x0007: 'ulaw'\n               \n    readChunk: ->\n        if not @readStart and @stream.available(12)\n            if @stream.readString(4) isnt 'RIFF'\n                return @emit 'error', 'Invalid WAV file.'\n                \n            @fileSize = @stream.readUInt32(true)\n            @readStart = true\n            \n            if @stream.readString(4) isnt 'WAVE'\n                return @emit 'error', 'Invalid WAV file.'\n                \n        while @stream.available(1)\n            if not @readHeaders and @stream.available(8)\n                @type = @stream.readString(4)\n                @len = @stream.readUInt32(true) # little endian\n                \n            switch @type\n                when 'fmt '\n                    encoding = @stream.readUInt16(true)\n                    if encoding not of formats\n                        return @emit 'error', 'Unsupported format in WAV file.'\n                        \n                    @format = \n                        formatID: formats[encoding]\n                        floatingPoint: encoding is 0x0003\n                        littleEndian: formats[encoding] is 'lpcm'\n                        channelsPerFrame: @stream.readUInt16(true)\n                        sampleRate: @stream.readUInt32(true)\n                        framesPerPacket: 1\n                        \n                    @stream.advance(4) # bytes/sec.\n                    @stream.advance(2) # block align\n                    \n                    @format.bitsPerChannel = @stream.readUInt16(true)\n                    @format.bytesPerPacket = (@format.bitsPerChannel / 8) * @format.channelsPerFrame\n                    \n                    @emit 'format', @format\n\n                    # Advance to the next chunk\n                    @stream.advance(@len - 16)\n                    \n                when 'data'\n                    if not @sentDuration\n                        bytes = @format.bitsPerChannel / 8\n                        @emit 'duration', @len / bytes / @format.channelsPerFrame / @format.sampleRate * 1000 | 0\n                        @sentDuration = true\n                \n                    buffer = @stream.readSingleBuffer(@len)\n                    @len -= buffer.length\n                    @readHeaders = @len > 0\n                    @emit 'data', buffer\n                    \n                else\n                    return unless @stream.available(@len)\n                    @stream.advance(@len)\n                        \n            @readHeaders = false unless @type is 'data'\n            \n        return","Demuxer = require '../demuxer'\n\nclass AUDemuxer extends Demuxer\n    Demuxer.register(AUDemuxer)\n    \n    @probe: (buffer) ->\n        return buffer.peekString(0, 4) is '.snd'\n        \n    bps = [8, 8, 16, 24, 32, 32, 64]\n    bps[26] = 8\n    \n    formats = \n        1: 'ulaw'\n        27: 'alaw'\n        \n    readChunk: ->\n        if not @readHeader and @stream.available(24)\n            if @stream.readString(4) isnt '.snd'\n                return @emit 'error', 'Invalid AU file.'\n                \n            size = @stream.readUInt32()\n            dataSize = @stream.readUInt32()\n            encoding = @stream.readUInt32()\n            \n            @format = \n                formatID: formats[encoding] or 'lpcm'\n                littleEndian: false\n                floatingPoint: encoding in [6, 7]\n                bitsPerChannel: bps[encoding - 1]\n                sampleRate: @stream.readUInt32()\n                channelsPerFrame: @stream.readUInt32()\n                framesPerPacket: 1\n            \n            if not @format.bitsPerChannel?\n                return @emit 'error', 'Unsupported encoding in AU file.'\n            \n            @format.bytesPerPacket = (@format.bitsPerChannel / 8) * @format.channelsPerFrame\n            \n            if dataSize isnt 0xffffffff\n                bytes = @format.bitsPerChannel / 8\n                @emit 'duration', dataSize / bytes / @format.channelsPerFrame / @format.sampleRate * 1000 | 0\n            \n            @emit 'format', @format\n            @readHeader = true\n            \n        if @readHeader\n            while @stream.available(1)\n                @emit 'data', @stream.readSingleBuffer(@stream.remainingBytes())\n                \n        return","Decoder = require '../decoder'\n\nclass LPCMDecoder extends Decoder\n    Decoder.register('lpcm', LPCMDecoder)\n    \n    readChunk: =>\n        stream = @stream\n        littleEndian = @format.littleEndian\n        chunkSize = Math.min(4096, stream.remainingBytes())\n        samples = chunkSize / (@format.bitsPerChannel / 8) | 0\n        \n        if chunkSize < @format.bitsPerChannel / 8\n            return null\n        \n        if @format.floatingPoint\n            switch @format.bitsPerChannel\n                when 32\n                    output = new Float32Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readFloat32(littleEndian)\n                        \n                when 64\n                    output = new Float64Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readFloat64(littleEndian)\n                        \n                else\n                    throw new Error 'Unsupported bit depth.'\n            \n        else\n            switch @format.bitsPerChannel\n                when 8\n                    output = new Int8Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readInt8()\n                \n                when 16\n                    output = new Int16Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readInt16(littleEndian)\n                    \n                when 24\n                    output = new Int32Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readInt24(littleEndian)\n                \n                when 32\n                    output = new Int32Array(samples)\n                    for i in [0...samples] by 1\n                        output[i] = stream.readInt32(littleEndian)\n                    \n                else\n                    throw new Error 'Unsupported bit depth.'\n        \n        return output","Decoder = require '../decoder'\n\nclass XLAWDecoder extends Decoder\n    Decoder.register('ulaw', XLAWDecoder)\n    Decoder.register('alaw', XLAWDecoder)\n    \n    SIGN_BIT   = 0x80\n    QUANT_MASK = 0xf\n    SEG_SHIFT  = 4\n    SEG_MASK   = 0x70\n    BIAS       = 0x84\n    \n    init: ->\n        @format.bitsPerChannel = 16\n        @table = table = new Int16Array(256)\n        \n        if @format.formatID is 'ulaw'\n            for i in [0...256]\n                # Complement to obtain normal u-law value.\n                val = ~i\n            \n                # Extract and bias the quantization bits. Then\n                # shift up by the segment number and subtract out the bias.\n                t = ((val & QUANT_MASK) << 3) + BIAS\n                t <<= (val & SEG_MASK) >>> SEG_SHIFT\n            \n                table[i] = if val & SIGN_BIT then BIAS - t else t - BIAS\n                                \n        else\n            for i in [0...256]\n                val = i ^ 0x55\n                t = val & QUANT_MASK\n                seg = (val & SEG_MASK) >>> SEG_SHIFT\n                \n                if seg\n                    t = (t + t + 1 + 32) << (seg + 2)\n                else\n                    t = (t + t + 1) << 3\n                    \n                table[i] = if val & SIGN_BIT then t else -t\n                \n        return\n            \n    readChunk: =>\n        {stream, table} = this\n        \n        samples = Math.min(4096, @stream.remainingBytes())\n        return if samples is 0\n        \n        output = new Int16Array(samples)\n        for i in [0...samples] by 1\n            output[i] = table[stream.readUInt8()]\n            \n        return output","//JavaScript Audio Resampler\n//Copyright (C) 2011-2015 Grant Galitz\n//Released to Public Domain\nfunction Resampler(fromSampleRate, toSampleRate, channels, inputBufferLength) {\n  this.fromSampleRate = +fromSampleRate;\n  this.toSampleRate = +toSampleRate;\n  this.channels = channels | 0;\n  this.inputBufferLength = inputBufferLength;\n  this.initialize();\n}\n\nResampler.prototype.initialize = function () {\n  //Perform some checks:\n  if (this.fromSampleRate > 0 && this.toSampleRate > 0 && this.channels > 0) {\n    if (this.fromSampleRate == this.toSampleRate) {\n      //Setup a resampler bypass:\n      this.resampler = this.bypassResampler;    //Resampler just returns what was passed through.\n      this.ratioWeight = 1;\n    } else {\n      this.ratioWeight = this.fromSampleRate / this.toSampleRate;\n      if (this.fromSampleRate < this.toSampleRate) {\n        /*\n          Use generic linear interpolation if upsampling,\n          as linear interpolation produces a gradient that we want\n          and works fine with two input sample points per output in this case.\n        */\n        this.compileLinearInterpolationFunction();\n        this.lastWeight = 1;\n      } else {\n        /*\n          Custom resampler I wrote that doesn't skip samples\n          like standard linear interpolation in high downsampling.\n          This is more accurate than linear interpolation on downsampling.\n        */\n        this.compileMultiTapFunction();\n        this.tailExists = false;\n        this.lastWeight = 0;\n      }\n      \n      var outputBufferSize = (Math.ceil(this.inputBufferLength * this.toSampleRate / this.fromSampleRate / this.channels * 1.01) * this.channels) + this.channels;\n      this.outputBuffer = new Float32Array(outputBufferSize);\n      this.lastOutput = new Float32Array(this.channels);\n    }\n  } else {\n    throw(new Error(\"Invalid settings specified for the resampler.\"));\n  }\n};\n\nResampler.prototype.compileLinearInterpolationFunction = function () {\n  var toCompile = \"var outputOffset = 0;\\\n    var bufferLength = buffer.length;\\\n    if (bufferLength > 0) {\\\n      var weight = this.lastWeight;\\\n      var firstWeight = 0;\\\n      var secondWeight = 0;\\\n      var sourceOffset = 0;\\\n      var outputOffset = 0;\\\n      var outputBuffer = this.outputBuffer;\\\n      for (; weight < 1; weight += \" + this.ratioWeight + \") {\\\n        secondWeight = weight % 1;\\\n        firstWeight = 1 - secondWeight;\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n          toCompile += \"outputBuffer[outputOffset++] = (this.lastOutput[\" + channel + \"] * firstWeight) + (buffer[\" + channel + \"] * secondWeight);\";\n        }\n      toCompile += \"}\\\n      weight -= 1;\\\n      for (bufferLength -= \" + this.channels + \", sourceOffset = Math.floor(weight) * \" + this.channels + \"; sourceOffset < bufferLength;) {\\\n        secondWeight = weight % 1;\\\n        firstWeight = 1 - secondWeight;\";\n        for (var channel = 0; channel < this.channels; ++channel) {\n          toCompile += \"outputBuffer[outputOffset++] = (buffer[sourceOffset\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * firstWeight) + (buffer[sourceOffset + \" + (this.channels + channel) + \"] * secondWeight);\";\n        }\n        toCompile += \"weight += \" + this.ratioWeight + \";\\\n        sourceOffset = Math.floor(weight) * \" + this.channels + \";\\\n      }\";\n      for (var channel = 0; channel < this.channels; ++channel) {\n        toCompile += \"this.lastOutput[\" + channel + \"] = buffer[sourceOffset++];\";\n      }\n      toCompile += \"this.lastWeight = weight % 1;\\\n    }\\\n    return this.outputBuffer;\";\n    \n  this.resampler = Function(\"buffer\", toCompile);\n};\n\nResampler.prototype.compileMultiTapFunction = function () {\n  var toCompile = \"var outputOffset = 0;\\\n    var bufferLength = buffer.length;\\\n    if (bufferLength > 0) {\\\n      var weight = 0;\";\n      for (var channel = 0; channel < this.channels; ++channel) {\n        toCompile += \"var output\" + channel + \" = 0;\"\n      }\n      toCompile += \"var actualPosition = 0;\\\n      var amountToNext = 0;\\\n      var alreadyProcessedTail = !this.tailExists;\\\n      this.tailExists = false;\\\n      var outputBuffer = this.outputBuffer;\\\n      var currentPosition = 0;\\\n      do {\\\n        if (alreadyProcessedTail) {\\\n          weight = \" + this.ratioWeight + \";\";\n          for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" = 0;\"\n          }\n        toCompile += \"}\\\n        else {\\\n          weight = this.lastWeight;\";\n          for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"output\" + channel + \" = this.lastOutput[\" + channel + \"];\"\n          }\n          toCompile += \"alreadyProcessedTail = true;\\\n        }\\\n        while (weight > 0 && actualPosition < bufferLength) {\\\n          amountToNext = 1 + actualPosition - currentPosition;\\\n          if (weight >= amountToNext) {\";\n            for (channel = 0; channel < this.channels; ++channel) {\n              toCompile += \"output\" + channel + \" += buffer[actualPosition++] * amountToNext;\"\n            }\n            toCompile += \"currentPosition = actualPosition;\\\n            weight -= amountToNext;\\\n          }\\\n          else {\";\n            for (channel = 0; channel < this.channels; ++channel) {\n              toCompile += \"output\" + channel + \" += buffer[actualPosition\" + ((channel > 0) ? (\" + \" + channel) : \"\") + \"] * weight;\"\n            }\n            toCompile += \"currentPosition += weight;\\\n            weight = 0;\\\n            break;\\\n          }\\\n        }\\\n        if (weight <= 0) {\";\n          for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"outputBuffer[outputOffset++] = output\" + channel + \" / \" + this.ratioWeight + \";\"\n          }\n        toCompile += \"}\\\n        else {\\\n          this.lastWeight = weight;\";\n          for (channel = 0; channel < this.channels; ++channel) {\n            toCompile += \"this.lastOutput[\" + channel + \"] = output\" + channel + \";\"\n          }\n          toCompile += \"this.tailExists = true;\\\n          break;\\\n        }\\\n      } while (actualPosition < bufferLength);\\\n    }\\\n    return this.outputBuffer;\";\n  \n  this.resampler = Function(\"buffer\", toCompile);\n};\n\nResampler.prototype.bypassResampler = function (inputBuffer) {\n  return inputBuffer;\n};\n\nmodule.exports = Resampler;\n","for key, val of require './aurora_base'\n    exports[key] = val\n\nrequire './demuxers/caf'\nrequire './demuxers/m4a'\nrequire './demuxers/aiff'\nrequire './demuxers/wave'\nrequire './demuxers/au'\n\nrequire './decoders/lpcm'\nrequire './decoders/xlaw'","EventEmitter = require '../core/events'\nAudioDevice = require '../device'\nResampler = require './resampler'\n\nclass WebAudioDevice extends EventEmitter\n    AudioDevice.register(WebAudioDevice)\n    \n    # determine whether this device is supported by the browser\n    AudioContext = global.AudioContext or global.webkitAudioContext\n    @supported = AudioContext and \n      (typeof AudioContext::[createProcessor = 'createScriptProcessor'] is 'function' or\n      typeof AudioContext::[createProcessor = 'createJavaScriptNode']  is 'function')\n    \n    # Chrome limits the number of AudioContexts that one can create,\n    # so use a lazily created shared context for all playback\n    sharedContext = null\n    \n    constructor: (@sampleRate, @channels) ->\n        super()\n        @context = sharedContext ?= new AudioContext\n        @deviceSampleRate = @context.sampleRate\n        \n        # calculate the buffer size to read\n        @bufferSize = Math.ceil(4096 / (@deviceSampleRate / @sampleRate) * @channels)\n        @bufferSize += @bufferSize % @channels\n        \n        # if the sample rate doesn't match the hardware sample rate, create a resampler\n        if @deviceSampleRate isnt @sampleRate\n            @resampler = new Resampler(@sampleRate, @deviceSampleRate, @channels, @bufferSize)\n\n        @node = @context[createProcessor](4096, @channels, @channels)\n        @node.onaudioprocess = @refill\n        @node.connect(@context.destination)\n        \n    refill: (event) =>\n        outputBuffer = event.outputBuffer\n        channelCount = outputBuffer.numberOfChannels\n        channels = new Array(channelCount)\n        \n        # get output channels\n        for i in [0...channelCount] by 1\n            channels[i] = outputBuffer.getChannelData(i)\n        \n        # get audio data    \n        data = new Float32Array(@bufferSize)\n        @emit 'refill', data\n        \n        # resample if necessary    \n        if @resampler\n            data = @resampler.resampler(data)\n        \n        # write data to output\n        for i in [0...outputBuffer.length] by 1\n            for n in [0...channelCount] by 1\n                channels[n][i] = data[i * channelCount + n]\n                \n        return\n        \n    destroy: ->\n        @node.disconnect(0)\n        \n    getDeviceTime: ->\n        return @context.currentTime * @sampleRate\n","EventEmitter = require '../core/events'\nAudioDevice = require '../device'\nAVBuffer = require '../core/buffer'\n\nclass MozillaAudioDevice extends EventEmitter\n    AudioDevice.register(MozillaAudioDevice)\n    \n    # determine whether this device is supported by the browser\n    @supported: Audio? and 'mozWriteAudio' of new Audio\n    \n    constructor: (@sampleRate, @channels) ->        \n        super()\n        @audio = new Audio\n        @audio.mozSetup(@channels, @sampleRate)\n        \n        @writePosition = 0\n        @prebufferSize = @sampleRate / 2\n        @tail = null\n        \n        @timer = createTimer @refill, 100\n        \n    refill: =>\n        if @tail\n            written = @audio.mozWriteAudio(@tail)\n            @writePosition += written\n            \n            if @writePosition < @tail.length\n                @tail = @tail.subarray(written)\n            else    \n                @tail = null\n            \n        currentPosition = @audio.mozCurrentSampleOffset()\n        available = currentPosition + @prebufferSize - @writePosition\n        if available > 0\n            buffer = new Float32Array(available)\n            @emit 'refill', buffer\n            \n            written = @audio.mozWriteAudio(buffer)\n            if written < buffer.length\n                @tail = buffer.subarray(written)\n                \n            @writePosition += written\n            \n        return\n        \n    destroy: ->\n        destroyTimer @timer\n        \n    getDeviceTime: ->\n        return @audio.mozCurrentSampleOffset() / @channels\n    \n    # Use an inline worker to get setInterval\n    # without being clamped in background tabs\n    createTimer = (fn, interval) ->\n        url = AVBuffer.makeBlobURL(\"setInterval(function() { postMessage('ping'); }, #{interval});\")\n        return setInterval fn, interval unless url?\n                \n        worker = new Worker(url)\n        worker.onmessage = fn\n        worker.url = url\n        \n        return worker\n        \n    destroyTimer = (timer) ->\n        if timer.terminate\n            timer.terminate()\n            URL.revokeObjectURL(timer.url)\n        else\n            clearInterval timer\n","for key, val of require './src/aurora'\n  exports[key] = val\n  \nrequire './src/devices/webaudio'\nrequire './src/devices/mozilla'\n","var AV = require('av');\n\nfunction MP3FrameHeader() {\n    this.layer          = 0; // audio layer (1, 2, or 3)\n    this.mode           = 0; // channel mode (see above)\n    this.mode_extension = 0; // additional mode info\n    this.emphasis       = 0; // de-emphasis to use (see above)\n\n    this.bitrate        = 0; // stream bitrate (bps)\n    this.samplerate     = 0; // sampling frequency (Hz)\n\n    this.crc_check      = 0; // frame CRC accumulator\n    this.crc_target     = 0; // final target CRC checksum\n\n    this.flags          = 0; // flags (see above)\n    this.private_bits   = 0; // private bits\n}\n\nconst BITRATES = [\n    // MPEG-1\n    [ 0,  32000,  64000,  96000, 128000, 160000, 192000, 224000,  // Layer I\n         256000, 288000, 320000, 352000, 384000, 416000, 448000 ],\n    [ 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  // Layer II\n         128000, 160000, 192000, 224000, 256000, 320000, 384000 ],\n    [ 0,  32000,  40000,  48000,  56000,  64000,  80000,  96000,  // Layer III\n         112000, 128000, 160000, 192000, 224000, 256000, 320000 ],\n\n    // MPEG-2 LSF\n    [ 0,  32000,  48000,  56000,  64000,  80000,  96000, 112000,  // Layer I\n         128000, 144000, 160000, 176000, 192000, 224000, 256000 ],\n    [ 0,   8000,  16000,  24000,  32000,  40000,  48000,  56000,  // Layers\n          64000,  80000,  96000, 112000, 128000, 144000, 160000 ] // II & III\n];\n\nconst SAMPLERATES = [ \n    44100, 48000, 32000 \n];\n\nMP3FrameHeader.FLAGS = {\n    NPRIVATE_III: 0x0007,   // number of Layer III private bits\n    INCOMPLETE  : 0x0008,   // header but not data is decoded\n\n    PROTECTION  : 0x0010,   // frame has CRC protection\n    COPYRIGHT   : 0x0020,   // frame is copyright\n    ORIGINAL    : 0x0040,   // frame is original (else copy)\n    PADDING     : 0x0080,   // frame has additional slot\n\n    I_STEREO    : 0x0100,   // uses intensity joint stereo\n    MS_STEREO   : 0x0200,   // uses middle/side joint stereo\n    FREEFORMAT  : 0x0400,   // uses free format bitrate\n\n    LSF_EXT     : 0x1000,   // lower sampling freq. extension\n    MC_EXT      : 0x2000,   // multichannel audio extension\n    MPEG_2_5_EXT: 0x4000    // MPEG 2.5 (unofficial) extension\n};\n\nconst PRIVATE = {\n    HEADER  : 0x0100, // header private bit\n    III     : 0x001f  // Layer III private bits (up to 5)\n};\n\nMP3FrameHeader.MODE = {\n    SINGLE_CHANNEL: 0, // single channel\n    DUAL_CHANNEL  : 1, // dual channel\n    JOINT_STEREO  : 2, // joint (MS/intensity) stereo\n    STEREO        : 3  // normal LR stereo\n};\n\nconst EMPHASIS = {\n    NONE      : 0, // no emphasis\n    _50_15_US : 1, // 50/15 microseconds emphasis\n    CCITT_J_17: 3, // CCITT J.17 emphasis\n    RESERVED  : 2  // unknown emphasis\n};\n\nMP3FrameHeader.BUFFER_GUARD = 8;\nMP3FrameHeader.BUFFER_MDLEN = (511 + 2048 + MP3FrameHeader.BUFFER_GUARD);\n\nMP3FrameHeader.prototype.copy = function() {\n    var clone = new MP3FrameHeader();\n    var keys = Object.keys(this);\n    \n    for (var key in keys) {\n        clone[key] = this[key];\n    }\n    \n    return clone;\n}\n\nMP3FrameHeader.prototype.nchannels = function () {\n    return this.mode === 0 ? 1 : 2;\n};\n\nMP3FrameHeader.prototype.nbsamples = function() {\n    return (this.layer === 1 ? 12 : ((this.layer === 3 && (this.flags & MP3FrameHeader.FLAGS.LSF_EXT)) ? 18 : 36));\n};\n\nMP3FrameHeader.prototype.framesize = function() {\n    if (this.bitrate === 0)\n        return null;\n    \n    var padding = (this.flags & MP3FrameHeader.FLAGS.PADDING ? 1 : 0);\n    switch (this.layer) {\n        case 1:\n            var size = (this.bitrate * 12) / this.samplerate | 0;\n            return (size + padding) * 4;\n            \n        case 2:\n            var size = (this.bitrate * 144) / this.samplerate | 0;\n            return size + padding;\n            \n        case 3:\n        default:\n            var lsf = this.flags & MP3FrameHeader.FLAGS.LSF_EXT ? 1 : 0;\n            var size = (this.bitrate * 144) / (this.samplerate << lsf) | 0;\n            return size + padding;\n    }\n};\n\nMP3FrameHeader.prototype.decode = function(stream) {\n    this.flags        = 0;\n    this.private_bits = 0;\n    \n    // syncword \n    stream.advance(11);\n\n    // MPEG 2.5 indicator (really part of syncword) \n    if (stream.read(1) === 0)\n        this.flags |= MP3FrameHeader.FLAGS.MPEG_2_5_EXT;\n\n    // ID \n    if (stream.read(1) === 0) {\n        this.flags |= MP3FrameHeader.FLAGS.LSF_EXT;\n    } else if (this.flags & MP3FrameHeader.FLAGS.MPEG_2_5_EXT) {\n        throw new AV.UnderflowError(); // LOSTSYNC\n    }\n\n    // layer \n    this.layer = 4 - stream.read(2);\n\n    if (this.layer === 4)\n        throw new Error('Invalid layer');\n\n    // protection_bit \n    if (stream.read(1) === 0)\n        this.flags |= MP3FrameHeader.FLAGS.PROTECTION;\n\n    // bitrate_index \n    var index = stream.read(4);\n    if (index === 15)\n        throw new Error('Invalid bitrate');\n\n    if (this.flags & MP3FrameHeader.FLAGS.LSF_EXT) {\n        this.bitrate = BITRATES[3 + (this.layer >> 1)][index];\n    } else {\n        this.bitrate = BITRATES[this.layer - 1][index];\n    }\n\n    // sampling_frequency \n    index = stream.read(2);\n    if (index === 3)\n        throw new Error('Invalid sampling frequency');\n\n    this.samplerate = SAMPLERATES[index];\n\n    if (this.flags & MP3FrameHeader.FLAGS.LSF_EXT) {\n        this.samplerate /= 2;\n\n        if (this.flags & MP3FrameHeader.FLAGS.MPEG_2_5_EXT)\n            this.samplerate /= 2;\n    }\n\n    // padding_bit \n    if (stream.read(1))\n        this.flags |= MP3FrameHeader.FLAGS.PADDING;\n\n    // private_bit \n    if (stream.read(1))\n        this.private_bits |= PRIVATE.HEADER;\n\n    // mode \n    this.mode = 3 - stream.read(2);\n\n    // mode_extension \n    this.mode_extension = stream.read(2);\n\n    // copyright \n    if (stream.read(1))\n        this.flags |= MP3FrameHeader.FLAGS.COPYRIGHT;\n\n    // original/copy \n    if (stream.read(1))\n        this.flags |= MP3FrameHeader.FLAGS.ORIGINAL;\n\n    // emphasis \n    this.emphasis = stream.read(2);\n\n    // crc_check \n    if (this.flags & MP3FrameHeader.FLAGS.PROTECTION)\n        this.crc_target = stream.read(16);\n};\n\nMP3FrameHeader.decode = function(stream) {\n    // synchronize\n    var ptr = stream.next_frame;\n    var syncing = true;\n    var header = null;\n    \n    while (syncing) {\n        syncing = false;\n        \n        if (stream.sync) {\n            if (!stream.available(MP3FrameHeader.BUFFER_GUARD)) {\n                stream.next_frame = ptr;\n                throw new AV.UnderflowError();\n            } else if (!(stream.getU8(ptr) === 0xff && (stream.getU8(ptr + 1) & 0xe0) === 0xe0)) {\n                // mark point where frame sync word was expected\n                stream.this_frame = ptr;\n                stream.next_frame = ptr + 1;\n                throw new AV.UnderflowError(); // LOSTSYNC\n            }\n        } else {\n            stream.seek(ptr * 8);\n            if (!stream.doSync())\n                throw new AV.UnderflowError();\n                \n            ptr = stream.nextByte();\n        }\n        \n        // begin processing\n        stream.this_frame = ptr;\n        stream.next_frame = ptr + 1; // possibly bogus sync word\n        \n        stream.seek(stream.this_frame * 8);\n        \n        header = new MP3FrameHeader();\n        header.decode(stream);\n        \n        if (header.bitrate === 0) {\n            if (stream.freerate === 0 || !stream.sync || (header.layer === 3 && stream.freerate > 640000))\n                MP3FrameHeader.free_bitrate(stream, header);\n            \n            header.bitrate = stream.freerate;\n            header.flags |= MP3FrameHeader.FLAGS.FREEFORMAT;\n        }\n        \n        // calculate beginning of next frame\n        var pad_slot = (header.flags & MP3FrameHeader.FLAGS.PADDING) ? 1 : 0;\n        \n        if (header.layer === 1) {\n            var N = (((12 * header.bitrate / header.samplerate) << 0) + pad_slot) * 4;\n        } else {\n            var slots_per_frame = (header.layer === 3 && (header.flags & MP3FrameHeader.FLAGS.LSF_EXT)) ? 72 : 144;\n            var N = ((slots_per_frame * header.bitrate / header.samplerate) << 0) + pad_slot;\n        }\n        \n        // verify there is enough data left in buffer to decode this frame\n        if (!stream.available(N + MP3FrameHeader.BUFFER_GUARD)) {\n            stream.next_frame = stream.this_frame;\n            throw new AV.UnderflowError();\n        }\n        \n        stream.next_frame = stream.this_frame + N;\n        \n        if (!stream.sync) {\n            // check that a valid frame header follows this frame\n            ptr = stream.next_frame;\n            \n            if (!(stream.getU8(ptr) === 0xff && (stream.getU8(ptr + 1) & 0xe0) === 0xe0)) {\n                ptr = stream.next_frame = stream.this_frame + 1;\n\n                // emulating 'goto sync'\n                syncing = true;\n                continue;\n            }\n            \n            stream.sync = true;\n        }\n    }\n    \n    header.flags |= MP3FrameHeader.FLAGS.INCOMPLETE;\n    return header;\n};\n\nMP3FrameHeader.free_bitrate = function(stream, header) {\n    var pad_slot = header.flags & MP3FrameHeader.FLAGS.PADDING ? 1 : 0,\n        slots_per_frame = header.layer === 3 && header.flags & MP3FrameHeader.FLAGS.LSF_EXT ? 72 : 144;\n    \n    var start = stream.offset();\n    var rate = 0;\n        \n    while (stream.doSync()) {\n        var peek_header = header.copy();\n        var peek_stream = stream.copy();\n        \n        if (peek_header.decode(peek_stream) && peek_header.layer === header.layer && peek_header.samplerate === header.samplerate) {\n            var N = stream.nextByte() - stream.this_frame;\n            \n            if (header.layer === 1) {\n                rate = header.samplerate * (N - 4 * pad_slot + 4) / 48 / 1000 | 0;\n            } else {\n                rate = header.samplerate * (N - pad_slot + 1) / slots_per_frame / 1000 | 0;\n            }\n            \n            if (rate >= 8)\n                break;\n        }\n        \n        stream.advance(8);\n    }\n    \n    stream.seek(start);\n    \n    if (rate < 8 || (header.layer === 3 && rate > 640))\n        throw new AV.UnderflowError(); // LOSTSYNC\n    \n    stream.freerate = rate * 1000;\n};\n\nmodule.exports = MP3FrameHeader;\n","var AV = require('av');\nvar MP3FrameHeader = require('./header');\n\nfunction MP3Stream(stream) {\n    this.stream = stream;                     // actual bitstream\n    this.sync = false;                        // stream sync found\n    this.freerate = 0;                        // free bitrate (fixed)\n    this.this_frame = stream.stream.offset;   // start of current frame\n    this.next_frame = stream.stream.offset;   // start of next frame\n    \n    this.main_data = new Uint8Array(MP3FrameHeader.BUFFER_MDLEN); // actual audio data\n    this.md_len = 0;                               // length of main data\n    \n    // copy methods from actual stream\n    for (var key in stream) {\n        if (typeof stream[key] === 'function')\n            this[key] = stream[key].bind(stream);\n    }\n}\n\nMP3Stream.prototype.getU8 = function(offset) {\n    var stream = this.stream.stream;\n    return stream.peekUInt8(offset - stream.offset);\n};\n\nMP3Stream.prototype.nextByte = function() {\n    var stream = this.stream;\n    return stream.bitPosition === 0 ? stream.stream.offset : stream.stream.offset + 1;\n};\n\nMP3Stream.prototype.doSync = function() {\n    var stream = this.stream.stream;\n    this.align();\n    \n    while (this.available(16) && !(stream.peekUInt8(0) === 0xff && (stream.peekUInt8(1) & 0xe0) === 0xe0)) {\n        this.advance(8);\n    }\n\n    if (!this.available(MP3FrameHeader.BUFFER_GUARD))\n        return false;\n        \n    return true;\n};\n\nMP3Stream.prototype.reset = function(byteOffset) {\n    this.seek(byteOffset * 8);\n    this.next_frame = byteOffset;\n    this.sync = true;\n};\n\nmodule.exports = MP3Stream;\n","/**\n * Makes a multidimensional array\n */\nexports.makeArray = function(lengths, Type) {\n    if (!Type) Type = Float64Array;\n    \n    if (lengths.length === 1) {\n        return new Type(lengths[0]);\n    }\n    \n    var ret = [],\n        len = lengths[0];\n        \n    for (var j = 0; j < len; j++) {\n        ret[j] = exports.makeArray(lengths.slice(1), Type);\n    }\n    \n    return ret;\n};\n","var MP3FrameHeader = require('./header');\nvar utils = require('./utils');\n\nfunction MP3Frame() {\n    this.header = null;                     // MPEG audio header\n    this.options = 0;                       // decoding options (from stream)\n    this.sbsample = utils.makeArray([2, 36, 32]); // synthesis subband filter samples\n    this.overlap = utils.makeArray([2, 32, 18]);  // Layer III block overlap data\n    this.decoders = [];\n}\n\n// included layer decoders are registered here\nMP3Frame.layers = [];\n\nMP3Frame.prototype.decode = function(stream) {\n    if (!this.header || !(this.header.flags & MP3FrameHeader.FLAGS.INCOMPLETE))\n        this.header = MP3FrameHeader.decode(stream);\n\n    this.header.flags &= ~MP3FrameHeader.FLAGS.INCOMPLETE;\n    \n    // make an instance of the decoder for this layer if needed\n    var decoder = this.decoders[this.header.layer - 1];\n    if (!decoder) {\n        var Layer = MP3Frame.layers[this.header.layer];\n        if (!Layer)\n            throw new Error(\"Layer \" + this.header.layer + \" is not supported.\");\n            \n        decoder = this.decoders[this.header.layer - 1] = new Layer();\n    }\n    \n    decoder.decode(stream, this);\n};\n\nmodule.exports = MP3Frame;\n","var utils = require('./utils');\n\nfunction MP3Synth() {\n    this.filter = utils.makeArray([2, 2, 2, 16, 8]); // polyphase filterbank outputs\n    this.phase = 0;\n    \n    this.pcm = {\n        samplerate: 0,\n        channels: 0,\n        length: 0,\n        samples: [new Float64Array(1152), new Float64Array(1152)]\n    };\n}\n\n/* costab[i] = cos(PI / (2 * 32) * i) */\nconst costab1  = 0.998795456;\nconst costab2  = 0.995184727;\nconst costab3  = 0.989176510;\nconst costab4  = 0.980785280;\nconst costab5  = 0.970031253;\nconst costab6  = 0.956940336;\nconst costab7  = 0.941544065;\nconst costab8  = 0.923879533;\nconst costab9  = 0.903989293;\nconst costab10 = 0.881921264;\nconst costab11 = 0.857728610;\nconst costab12 = 0.831469612;\nconst costab13 = 0.803207531;\nconst costab14 = 0.773010453;\nconst costab15 = 0.740951125;\nconst costab16 = 0.707106781;\nconst costab17 = 0.671558955;\nconst costab18 = 0.634393284;\nconst costab19 = 0.595699304;\nconst costab20 = 0.555570233;\nconst costab21 = 0.514102744;\nconst costab22 = 0.471396737;\nconst costab23 = 0.427555093;\nconst costab24 = 0.382683432;\nconst costab25 = 0.336889853;\nconst costab26 = 0.290284677;\nconst costab27 = 0.242980180;\nconst costab28 = 0.195090322;\nconst costab29 = 0.146730474;\nconst costab30 = 0.098017140;\nconst costab31 = 0.049067674;\n\n/*\n * NAME:    dct32()\n * DESCRIPTION: perform fast in[32].out[32] DCT\n */\nMP3Synth.dct32 = function (_in, slot, lo, hi) {\n    var t0,   t1,   t2,   t3,   t4,   t5,   t6,   t7;\n    var t8,   t9,   t10,  t11,  t12,  t13,  t14,  t15;\n    var t16,  t17,  t18,  t19,  t20,  t21,  t22,  t23;\n    var t24,  t25,  t26,  t27,  t28,  t29,  t30,  t31;\n    var t32,  t33,  t34,  t35,  t36,  t37,  t38,  t39;\n    var t40,  t41,  t42,  t43,  t44,  t45,  t46,  t47;\n    var t48,  t49,  t50,  t51,  t52,  t53,  t54,  t55;\n    var t56,  t57,  t58,  t59,  t60,  t61,  t62,  t63;\n    var t64,  t65,  t66,  t67,  t68,  t69,  t70,  t71;\n    var t72,  t73,  t74,  t75,  t76,  t77,  t78,  t79;\n    var t80,  t81,  t82,  t83,  t84,  t85,  t86,  t87;\n    var t88,  t89,  t90,  t91,  t92,  t93,  t94,  t95;\n    var t96,  t97,  t98,  t99,  t100, t101, t102, t103;\n    var t104, t105, t106, t107, t108, t109, t110, t111;\n    var t112, t113, t114, t115, t116, t117, t118, t119;\n    var t120, t121, t122, t123, t124, t125, t126, t127;\n    var t128, t129, t130, t131, t132, t133, t134, t135;\n    var t136, t137, t138, t139, t140, t141, t142, t143;\n    var t144, t145, t146, t147, t148, t149, t150, t151;\n    var t152, t153, t154, t155, t156, t157, t158, t159;\n    var t160, t161, t162, t163, t164, t165, t166, t167;\n    var t168, t169, t170, t171, t172, t173, t174, t175;\n    var t176;\n\n    t0   = _in[0]  + _in[31];  t16  = ((_in[0]  - _in[31]) * (costab1));\n    t1   = _in[15] + _in[16];  t17  = ((_in[15] - _in[16]) * (costab31));\n\n    t41  = t16 + t17;\n    t59  = ((t16 - t17) * (costab2));\n    t33  = t0  + t1;\n    t50  = ((t0  - t1) * ( costab2));\n\n    t2   = _in[7]  + _in[24];  t18  = ((_in[7]  - _in[24]) * (costab15));\n    t3   = _in[8]  + _in[23];  t19  = ((_in[8]  - _in[23]) * (costab17));\n\n    t42  = t18 + t19;\n    t60  = ((t18 - t19) * (costab30));\n    t34  = t2  + t3;\n    t51  = ((t2  - t3) * ( costab30));\n\n    t4   = _in[3]  + _in[28];  t20  = ((_in[3]  - _in[28]) * (costab7));\n    t5   = _in[12] + _in[19];  t21  = ((_in[12] - _in[19]) * (costab25));\n\n    t43  = t20 + t21;\n    t61  = ((t20 - t21) * (costab14));\n    t35  = t4  + t5;\n    t52  = ((t4  - t5) * ( costab14));\n\n    t6   = _in[4]  + _in[27];  t22  = ((_in[4]  - _in[27]) * (costab9));\n    t7   = _in[11] + _in[20];  t23  = ((_in[11] - _in[20]) * (costab23));\n\n    t44  = t22 + t23;\n    t62  = ((t22 - t23) * (costab18));\n    t36  = t6  + t7;\n    t53  = ((t6  - t7) * ( costab18));\n\n    t8   = _in[1]  + _in[30];  t24  = ((_in[1]  - _in[30]) * (costab3));\n    t9   = _in[14] + _in[17];  t25  = ((_in[14] - _in[17]) * (costab29));\n\n    t45  = t24 + t25;\n    t63  = ((t24 - t25) * (costab6));\n    t37  = t8  + t9;\n    t54  = ((t8  - t9) * ( costab6));\n\n    t10  = _in[6]  + _in[25];  t26  = ((_in[6]  - _in[25]) * (costab13));\n    t11  = _in[9]  + _in[22];  t27  = ((_in[9]  - _in[22]) * (costab19));\n\n    t46  = t26 + t27;\n    t64  = ((t26 - t27) * (costab26));\n    t38  = t10 + t11;\n    t55  = ((t10 - t11) * (costab26));\n\n    t12  = _in[2]  + _in[29];  t28  = ((_in[2]  - _in[29]) * (costab5));\n    t13  = _in[13] + _in[18];  t29  = ((_in[13] - _in[18]) * (costab27));\n\n    t47  = t28 + t29;\n    t65  = ((t28 - t29) * (costab10));\n    t39  = t12 + t13;\n    t56  = ((t12 - t13) * (costab10));\n\n    t14  = _in[5]  + _in[26];  t30  = ((_in[5]  - _in[26]) * (costab11));\n    t15  = _in[10] + _in[21];  t31  = ((_in[10] - _in[21]) * (costab21));\n\n    t48  = t30 + t31;\n    t66  = ((t30 - t31) * (costab22));\n    t40  = t14 + t15;\n    t57  = ((t14 - t15) * (costab22));\n\n    t69  = t33 + t34;  t89  = ((t33 - t34) * (costab4));\n    t70  = t35 + t36;  t90  = ((t35 - t36) * (costab28));\n    t71  = t37 + t38;  t91  = ((t37 - t38) * (costab12));\n    t72  = t39 + t40;  t92  = ((t39 - t40) * (costab20));\n    t73  = t41 + t42;  t94  = ((t41 - t42) * (costab4));\n    t74  = t43 + t44;  t95  = ((t43 - t44) * (costab28));\n    t75  = t45 + t46;  t96  = ((t45 - t46) * (costab12));\n    t76  = t47 + t48;  t97  = ((t47 - t48) * (costab20));\n\n    t78  = t50 + t51;  t100 = ((t50 - t51) * (costab4));\n    t79  = t52 + t53;  t101 = ((t52 - t53) * (costab28));\n    t80  = t54 + t55;  t102 = ((t54 - t55) * (costab12));\n    t81  = t56 + t57;  t103 = ((t56 - t57) * (costab20));\n\n    t83  = t59 + t60;  t106 = ((t59 - t60) * (costab4));\n    t84  = t61 + t62;  t107 = ((t61 - t62) * (costab28));\n    t85  = t63 + t64;  t108 = ((t63 - t64) * (costab12));\n    t86  = t65 + t66;  t109 = ((t65 - t66) * (costab20));\n\n    t113 = t69  + t70;\n    t114 = t71  + t72;\n\n    /*  0 */ hi[15][slot] = t113 + t114;\n    /* 16 */ lo[ 0][slot] = ((t113 - t114) * (costab16));\n\n    t115 = t73  + t74;\n    t116 = t75  + t76;\n\n    t32  = t115 + t116;\n\n    /*  1 */ hi[14][slot] = t32;\n\n    t118 = t78  + t79;\n    t119 = t80  + t81;\n\n    t58  = t118 + t119;\n\n    /*  2 */ hi[13][slot] = t58;\n\n    t121 = t83  + t84;\n    t122 = t85  + t86;\n\n    t67  = t121 + t122;\n\n    t49  = (t67 * 2) - t32;\n\n    /*  3 */ hi[12][slot] = t49;\n\n    t125 = t89  + t90;\n    t126 = t91  + t92;\n\n    t93  = t125 + t126;\n\n    /*  4 */ hi[11][slot] = t93;\n\n    t128 = t94  + t95;\n    t129 = t96  + t97;\n\n    t98  = t128 + t129;\n\n    t68  = (t98 * 2) - t49;\n\n    /*  5 */ hi[10][slot] = t68;\n\n    t132 = t100 + t101;\n    t133 = t102 + t103;\n\n    t104 = t132 + t133;\n\n    t82  = (t104 * 2) - t58;\n\n    /*  6 */ hi[ 9][slot] = t82;\n\n    t136 = t106 + t107;\n    t137 = t108 + t109;\n\n    t110 = t136 + t137;\n\n    t87  = (t110 * 2) - t67;\n\n    t77  = (t87 * 2) - t68;\n\n    /*  7 */ hi[ 8][slot] = t77;\n\n    t141 = ((t69 - t70) * (costab8));\n    t142 = ((t71 - t72) * (costab24));\n    t143 = t141 + t142;\n\n    /*  8 */ hi[ 7][slot] = t143;\n    /* 24 */ lo[ 8][slot] =\n        (((t141 - t142) * (costab16) * 2)) - t143;\n\n    t144 = ((t73 - t74) * (costab8));\n    t145 = ((t75 - t76) * (costab24));\n    t146 = t144 + t145;\n\n    t88  = (t146 * 2) - t77;\n\n    /*  9 */ hi[ 6][slot] = t88;\n\n    t148 = ((t78 - t79) * (costab8));\n    t149 = ((t80 - t81) * (costab24));\n    t150 = t148 + t149;\n\n    t105 = (t150 * 2) - t82;\n\n    /* 10 */ hi[ 5][slot] = t105;\n\n    t152 = ((t83 - t84) * (costab8));\n    t153 = ((t85 - t86) * (costab24));\n    t154 = t152 + t153;\n\n    t111 = (t154 * 2) - t87;\n\n    t99  = (t111 * 2) - t88;\n\n    /* 11 */ hi[ 4][slot] = t99;\n\n    t157 = ((t89 - t90) * (costab8));\n    t158 = ((t91 - t92) * (costab24));\n    t159 = t157 + t158;\n\n    t127 = (t159 * 2) - t93;\n\n    /* 12 */ hi[ 3][slot] = t127;\n\n    t160 = (((t125 - t126) * (costab16) * 2)) - t127;\n\n    /* 20 */ lo[ 4][slot] = t160;\n    /* 28 */ lo[12][slot] =\n        (((((t157 - t158) * (costab16) * 2) - t159) * 2)) - t160;\n\n    t161 = ((t94 - t95) * (costab8));\n    t162 = ((t96 - t97) * (costab24));\n    t163 = t161 + t162;\n\n    t130 = (t163 * 2) - t98;\n\n    t112 = (t130 * 2) - t99;\n\n    /* 13 */ hi[ 2][slot] = t112;\n\n    t164 = (((t128 - t129) * (costab16) * 2)) - t130;\n\n    t166 = ((t100 - t101) * (costab8));\n    t167 = ((t102 - t103) * (costab24));\n    t168 = t166 + t167;\n\n    t134 = (t168 * 2) - t104;\n\n    t120 = (t134 * 2) - t105;\n\n    /* 14 */ hi[ 1][slot] = t120;\n\n    t135 = (((t118 - t119) * (costab16) * 2)) - t120;\n\n    /* 18 */ lo[ 2][slot] = t135;\n\n    t169 = (((t132 - t133) * (costab16) * 2)) - t134;\n\n    t151 = (t169 * 2) - t135;\n\n    /* 22 */ lo[ 6][slot] = t151;\n\n    t170 = (((((t148 - t149) * (costab16) * 2) - t150) * 2)) - t151;\n\n    /* 26 */ lo[10][slot] = t170;\n    /* 30 */ lo[14][slot] =\n        (((((((t166 - t167) * (costab16)) * 2 -\n             t168) * 2) - t169) * 2) - t170);\n\n    t171 = ((t106 - t107) * (costab8));\n    t172 = ((t108 - t109) * (costab24));\n    t173 = t171 + t172;\n\n    t138 = (t173 * 2) - t110;\n    t123 = (t138 * 2) - t111;\n    t139 = (((t121 - t122) * (costab16) * 2)) - t123;\n    t117 = (t123 * 2) - t112;\n\n    /* 15 */ hi[ 0][slot] = t117;\n\n    t124 = (((t115 - t116) * (costab16) * 2)) - t117;\n\n    /* 17 */ lo[ 1][slot] = t124;\n\n    t131 = (t139 * 2) - t124;\n\n    /* 19 */ lo[ 3][slot] = t131;\n\n    t140 = (t164 * 2) - t131;\n\n    /* 21 */ lo[ 5][slot] = t140;\n\n    t174 = (((t136 - t137) * (costab16) * 2)) - t138;\n    t155 = (t174 * 2) - t139;\n    t147 = (t155 * 2) - t140;\n\n    /* 23 */ lo[ 7][slot] = t147;\n\n    t156 = (((((t144 - t145) * (costab16) * 2) - t146) * 2)) - t147;\n\n    /* 25 */ lo[ 9][slot] = t156;\n\n    t175 = (((((t152 - t153) * (costab16) * 2) - t154) * 2)) - t155;\n    t165 = (t175 * 2) - t156;\n\n    /* 27 */ lo[11][slot] = t165;\n\n    t176 = (((((((t161 - t162) * (costab16) * 2)) -\n               t163) * 2) - t164) * 2) - t165;\n\n    /* 29 */ lo[13][slot] = t176;\n    /* 31 */ lo[15][slot] =\n        (((((((((t171 - t172) * (costab16)) * 2 -\n               t173) * 2) - t174) * 2) - t175) * 2) - t176);\n\n    /*\n     * Totals:\n     *  80 multiplies\n     *  80 additions\n     * 119 subtractions\n     *  49 shifts (not counting SSO)\n     */\n};\n\n/*\n * These are the coefficients for the subband synthesis window. This is a\n * reordered version of Table B.3 from ISO/IEC 11172-3.\n */\nconst D = [\n    [  0.000000000,   /*  0 */\n       -0.000442505,\n       0.003250122,\n       -0.007003784,\n       0.031082153,\n       -0.078628540,\n       0.100311279,\n       -0.572036743,\n       1.144989014,\n       0.572036743,\n       0.100311279,\n       0.078628540,\n       0.031082153,\n       0.007003784,\n       0.003250122,\n       0.000442505,\n\n       0.000000000,\n       -0.000442505,\n       0.003250122,\n       -0.007003784,\n       0.031082153,\n       -0.078628540,\n       0.100311279,\n       -0.572036743,\n       1.144989014,\n       0.572036743,\n       0.100311279,\n       0.078628540,\n       0.031082153,\n       0.007003784,\n       0.003250122,\n       0.000442505 ],\n\n    [ -0.000015259,   /*  1 */\n      -0.000473022,\n      0.003326416,\n      -0.007919312,\n      0.030517578,\n      -0.084182739,\n      0.090927124,\n      -0.600219727,\n      1.144287109,\n      0.543823242,\n      0.108856201,\n      0.073059082,\n      0.031478882,\n      0.006118774,\n      0.003173828,\n      0.000396729,\n\n      -0.000015259,\n      -0.000473022,\n      0.003326416,\n      -0.007919312,\n      0.030517578,\n      -0.084182739,\n      0.090927124,\n      -0.600219727,\n      1.144287109,\n      0.543823242,\n      0.108856201,\n      0.073059082,\n      0.031478882,\n      0.006118774,\n      0.003173828,\n      0.000396729 ],\n\n    [ -0.000015259,   /*  2 */\n      -0.000534058,\n      0.003387451,\n      -0.008865356,\n      0.029785156,\n      -0.089706421,\n      0.080688477,\n      -0.628295898,\n      1.142211914,\n      0.515609741,\n      0.116577148,\n      0.067520142,\n      0.031738281,\n      0.005294800,\n      0.003082275,\n      0.000366211,\n\n      -0.000015259,\n      -0.000534058,\n      0.003387451,\n      -0.008865356,\n      0.029785156,\n      -0.089706421,\n      0.080688477,\n      -0.628295898,\n      1.142211914,\n      0.515609741,\n      0.116577148,\n      0.067520142,\n      0.031738281,\n      0.005294800,\n      0.003082275,\n      0.000366211 ],\n\n    [ -0.000015259,   /*  3 */\n      -0.000579834,\n      0.003433228,\n      -0.009841919,\n      0.028884888,\n      -0.095169067,\n      0.069595337,\n      -0.656219482,\n      1.138763428,\n      0.487472534,\n      0.123474121,\n      0.061996460,\n      0.031845093,\n      0.004486084,\n      0.002990723,\n      0.000320435,\n\n      -0.000015259,\n      -0.000579834,\n      0.003433228,\n      -0.009841919,\n      0.028884888,\n      -0.095169067,\n      0.069595337,\n      -0.656219482,\n      1.138763428,\n      0.487472534,\n      0.123474121,\n      0.061996460,\n      0.031845093,\n      0.004486084,\n      0.002990723,\n      0.000320435 ],\n\n    [ -0.000015259,   /*  4 */\n      -0.000625610,\n      0.003463745,\n      -0.010848999,\n      0.027801514,\n      -0.100540161,\n      0.057617187,\n      -0.683914185,\n      1.133926392,\n      0.459472656,\n      0.129577637,\n      0.056533813,\n      0.031814575,\n      0.003723145,\n      0.002899170,\n      0.000289917,\n\n      -0.000015259,\n      -0.000625610,\n      0.003463745,\n      -0.010848999,\n      0.027801514,\n      -0.100540161,\n      0.057617187,\n      -0.683914185,\n      1.133926392,\n      0.459472656,\n      0.129577637,\n      0.056533813,\n      0.031814575,\n      0.003723145,\n      0.002899170,\n      0.000289917 ],\n\n    [ -0.000015259,   /*  5 */\n      -0.000686646,\n      0.003479004,\n      -0.011886597,\n      0.026535034,\n      -0.105819702,\n      0.044784546,\n      -0.711318970,\n      1.127746582,\n      0.431655884,\n      0.134887695,\n      0.051132202,\n      0.031661987,\n      0.003005981,\n      0.002792358,\n      0.000259399,\n\n      -0.000015259,\n      -0.000686646,\n      0.003479004,\n      -0.011886597,\n      0.026535034,\n      -0.105819702,\n      0.044784546,\n      -0.711318970,\n      1.127746582,\n      0.431655884,\n      0.134887695,\n      0.051132202,\n      0.031661987,\n      0.003005981,\n      0.002792358,\n      0.000259399 ],\n\n    [ -0.000015259,   /*  6 */\n      -0.000747681,\n      0.003479004,\n      -0.012939453,\n      0.025085449,\n      -0.110946655,\n      0.031082153,\n      -0.738372803,\n      1.120223999,\n      0.404083252,\n      0.139450073,\n      0.045837402,\n      0.031387329,\n      0.002334595,\n      0.002685547,\n      0.000244141,\n\n      -0.000015259,\n      -0.000747681,\n      0.003479004,\n      -0.012939453,\n      0.025085449,\n      -0.110946655,\n      0.031082153,\n      -0.738372803,\n      1.120223999,\n      0.404083252,\n      0.139450073,\n      0.045837402,\n      0.031387329,\n      0.002334595,\n      0.002685547,\n      0.000244141 ],\n\n    [ -0.000030518,   /*  7 */\n      -0.000808716,\n      0.003463745,\n      -0.014022827,\n      0.023422241,\n      -0.115921021,\n      0.016510010,\n      -0.765029907,\n      1.111373901,\n      0.376800537,\n      0.143264771,\n      0.040634155,\n      0.031005859,\n      0.001693726,\n      0.002578735,\n      0.000213623,\n\n      -0.000030518,\n      -0.000808716,\n      0.003463745,\n      -0.014022827,\n      0.023422241,\n      -0.115921021,\n      0.016510010,\n      -0.765029907,\n      1.111373901,\n      0.376800537,\n      0.143264771,\n      0.040634155,\n      0.031005859,\n      0.001693726,\n      0.002578735,\n      0.000213623 ],\n\n    [ -0.000030518,   /*  8 */\n      -0.000885010,\n      0.003417969,\n      -0.015121460,\n      0.021575928,\n      -0.120697021,\n      0.001068115,\n      -0.791213989,\n      1.101211548,\n      0.349868774,\n      0.146362305,\n      0.035552979,\n      0.030532837,\n      0.001098633,\n      0.002456665,\n      0.000198364,\n\n      -0.000030518,\n      -0.000885010,\n      0.003417969,\n      -0.015121460,\n      0.021575928,\n      -0.120697021,\n      0.001068115,\n      -0.791213989,\n      1.101211548,\n      0.349868774,\n      0.146362305,\n      0.035552979,\n      0.030532837,\n      0.001098633,\n      0.002456665,\n      0.000198364 ],\n\n    [ -0.000030518,   /*  9 */\n      -0.000961304,\n      0.003372192,\n      -0.016235352,\n      0.019531250,\n      -0.125259399,\n      -0.015228271,\n      -0.816864014,\n      1.089782715,\n      0.323318481,\n      0.148773193,\n      0.030609131,\n      0.029937744,\n      0.000549316,\n      0.002349854,\n      0.000167847,\n\n      -0.000030518,\n      -0.000961304,\n      0.003372192,\n      -0.016235352,\n      0.019531250,\n      -0.125259399,\n      -0.015228271,\n      -0.816864014,\n      1.089782715,\n      0.323318481,\n      0.148773193,\n      0.030609131,\n      0.029937744,\n      0.000549316,\n      0.002349854,\n      0.000167847 ],\n\n    [ -0.000030518,   /* 10 */\n      -0.001037598,\n      0.003280640,\n      -0.017349243,\n      0.017257690,\n      -0.129562378,\n      -0.032379150,\n      -0.841949463,\n      1.077117920,\n      0.297210693,\n      0.150497437,\n      0.025817871,\n      0.029281616,\n      0.000030518,\n      0.002243042,\n      0.000152588,\n\n      -0.000030518,\n      -0.001037598,\n      0.003280640,\n      -0.017349243,\n      0.017257690,\n      -0.129562378,\n      -0.032379150,\n      -0.841949463,\n      1.077117920,\n      0.297210693,\n      0.150497437,\n      0.025817871,\n      0.029281616,\n      0.000030518,\n      0.002243042,\n      0.000152588 ],\n\n    [ -0.000045776,   /* 11 */\n      -0.001113892,\n      0.003173828,\n      -0.018463135,\n      0.014801025,\n      -0.133590698,\n      -0.050354004,\n      -0.866363525,\n      1.063217163,\n      0.271591187,\n      0.151596069,\n      0.021179199,\n      0.028533936,\n      -0.000442505,\n      0.002120972,\n      0.000137329,\n\n      -0.000045776,\n      -0.001113892,\n      0.003173828,\n      -0.018463135,\n      0.014801025,\n      -0.133590698,\n      -0.050354004,\n      -0.866363525,\n      1.063217163,\n      0.271591187,\n      0.151596069,\n      0.021179199,\n      0.028533936,\n      -0.000442505,\n      0.002120972,\n      0.000137329 ],\n\n    [ -0.000045776,   /* 12 */\n      -0.001205444,\n      0.003051758,\n      -0.019577026,\n      0.012115479,\n      -0.137298584,\n      -0.069168091,\n      -0.890090942,\n      1.048156738,\n      0.246505737,\n      0.152069092,\n      0.016708374,\n      0.027725220,\n      -0.000869751,\n      0.002014160,\n      0.000122070,\n\n      -0.000045776,\n      -0.001205444,\n      0.003051758,\n      -0.019577026,\n      0.012115479,\n      -0.137298584,\n      -0.069168091,\n      -0.890090942,\n      1.048156738,\n      0.246505737,\n      0.152069092,\n      0.016708374,\n      0.027725220,\n      -0.000869751,\n      0.002014160,\n      0.000122070 ],\n\n    [ -0.000061035,   /* 13 */\n      -0.001296997,\n      0.002883911,\n      -0.020690918,\n      0.009231567,\n      -0.140670776,\n      -0.088775635,\n      -0.913055420,\n      1.031936646,\n      0.221984863,\n      0.151962280,\n      0.012420654,\n      0.026840210,\n      -0.001266479,\n      0.001907349,\n      0.000106812,\n\n      -0.000061035,\n      -0.001296997,\n      0.002883911,\n      -0.020690918,\n      0.009231567,\n      -0.140670776,\n      -0.088775635,\n      -0.913055420,\n      1.031936646,\n      0.221984863,\n      0.151962280,\n      0.012420654,\n      0.026840210,\n      -0.001266479,\n      0.001907349,\n      0.000106812 ],\n\n    [ -0.000061035,   /* 14 */\n      -0.001388550,\n      0.002700806,\n      -0.021789551,\n      0.006134033,\n      -0.143676758,\n      -0.109161377,\n      -0.935195923,\n      1.014617920,\n      0.198059082,\n      0.151306152,\n      0.008316040,\n      0.025909424,\n      -0.001617432,\n      0.001785278,\n      0.000106812,\n\n      -0.000061035,\n      -0.001388550,\n      0.002700806,\n      -0.021789551,\n      0.006134033,\n      -0.143676758,\n      -0.109161377,\n      -0.935195923,\n      1.014617920,\n      0.198059082,\n      0.151306152,\n      0.008316040,\n      0.025909424,\n      -0.001617432,\n      0.001785278,\n      0.000106812 ],\n\n    [ -0.000076294,   /* 15 */\n      -0.001480103,\n      0.002487183,\n      -0.022857666,\n      0.002822876,\n      -0.146255493,\n      -0.130310059,\n      -0.956481934,\n      0.996246338,\n      0.174789429,\n      0.150115967,\n      0.004394531,\n      0.024932861,\n      -0.001937866,\n      0.001693726,\n      0.000091553,\n\n      -0.000076294,\n      -0.001480103,\n      0.002487183,\n      -0.022857666,\n      0.002822876,\n      -0.146255493,\n      -0.130310059,\n      -0.956481934,\n      0.996246338,\n      0.174789429,\n      0.150115967,\n      0.004394531,\n      0.024932861,\n      -0.001937866,\n      0.001693726,\n      0.000091553 ],\n\n    [ -0.000076294,   /* 16 */\n      -0.001586914,\n      0.002227783,\n      -0.023910522,\n      -0.000686646,\n      -0.148422241,\n      -0.152206421,\n      -0.976852417,\n      0.976852417,\n      0.152206421,\n      0.148422241,\n      0.000686646,\n      0.023910522,\n      -0.002227783,\n      0.001586914,\n      0.000076294,\n\n      -0.000076294,\n      -0.001586914,\n      0.002227783,\n      -0.023910522,\n      -0.000686646,\n      -0.148422241,\n      -0.152206421,\n      -0.976852417,\n      0.976852417,\n      0.152206421,\n      0.148422241,\n      0.000686646,\n      0.023910522,\n      -0.002227783,\n      0.001586914,\n      0.000076294 ]\n];\n\n/*\n * perform full frequency PCM synthesis\n */\nMP3Synth.prototype.full = function(frame, nch, ns) {\n    var Dptr, hi, lo, ptr;\n    \n    for (var ch = 0; ch < nch; ++ch) {\n        var sbsample = frame.sbsample[ch];\n        var filter  = this.filter[ch];\n        var phase   = this.phase;\n        var pcm     = this.pcm.samples[ch];\n        var pcm1Ptr = 0;\n        var pcm2Ptr = 0;\n\n        for (var s = 0; s < ns; ++s) {\n            MP3Synth.dct32(sbsample[s], phase >> 1, filter[0][phase & 1], filter[1][phase & 1]);\n\n            var pe = phase & ~1;\n            var po = ((phase - 1) & 0xf) | 1;\n\n            /* calculate 32 samples */\n            var fe = filter[0][ phase & 1];\n            var fx = filter[0][~phase & 1];\n            var fo = filter[1][~phase & 1];\n\n            var fePtr = 0;\n            var fxPtr = 0;\n            var foPtr = 0;\n            \n            Dptr = 0;\n\n            ptr = D[Dptr];\n            _fx = fx[fxPtr];\n            _fe = fe[fePtr];\n\n            lo =  _fx[0] * ptr[po +  0];\n            lo += _fx[1] * ptr[po + 14];\n            lo += _fx[2] * ptr[po + 12];\n            lo += _fx[3] * ptr[po + 10];\n            lo += _fx[4] * ptr[po +  8];\n            lo += _fx[5] * ptr[po +  6];\n            lo += _fx[6] * ptr[po +  4];\n            lo += _fx[7] * ptr[po +  2];\n            lo = -lo;                      \n            \n            lo += _fe[0] * ptr[pe +  0];\n            lo += _fe[1] * ptr[pe + 14];\n            lo += _fe[2] * ptr[pe + 12];\n            lo += _fe[3] * ptr[pe + 10];\n            lo += _fe[4] * ptr[pe +  8];\n            lo += _fe[5] * ptr[pe +  6];\n            lo += _fe[6] * ptr[pe +  4];\n            lo += _fe[7] * ptr[pe +  2];\n\n            pcm[pcm1Ptr++] = lo;\n            pcm2Ptr = pcm1Ptr + 30;\n\n            for (var sb = 1; sb < 16; ++sb) {\n                ++fePtr;\n                ++Dptr;\n\n                /* D[32 - sb][i] === -D[sb][31 - i] */\n\n                ptr = D[Dptr];\n                _fo = fo[foPtr];\n                _fe = fe[fePtr];\n\n                lo  = _fo[0] * ptr[po +  0];\n                lo += _fo[1] * ptr[po + 14];\n                lo += _fo[2] * ptr[po + 12];\n                lo += _fo[3] * ptr[po + 10];\n                lo += _fo[4] * ptr[po +  8];\n                lo += _fo[5] * ptr[po +  6];\n                lo += _fo[6] * ptr[po +  4];\n                lo += _fo[7] * ptr[po +  2];\n                lo = -lo;\n\n                lo += _fe[7] * ptr[pe + 2];\n                lo += _fe[6] * ptr[pe + 4];\n                lo += _fe[5] * ptr[pe + 6];\n                lo += _fe[4] * ptr[pe + 8];\n                lo += _fe[3] * ptr[pe + 10];\n                lo += _fe[2] * ptr[pe + 12];\n                lo += _fe[1] * ptr[pe + 14];\n                lo += _fe[0] * ptr[pe + 0];\n\n                pcm[pcm1Ptr++] = lo;\n\n                lo =  _fe[0] * ptr[-pe + 31 - 16];\n                lo += _fe[1] * ptr[-pe + 31 - 14];\n                lo += _fe[2] * ptr[-pe + 31 - 12];\n                lo += _fe[3] * ptr[-pe + 31 - 10];\n                lo += _fe[4] * ptr[-pe + 31 -  8];\n                lo += _fe[5] * ptr[-pe + 31 -  6];\n                lo += _fe[6] * ptr[-pe + 31 -  4];\n                lo += _fe[7] * ptr[-pe + 31 -  2];\n\n                lo += _fo[7] * ptr[-po + 31 -  2];\n                lo += _fo[6] * ptr[-po + 31 -  4];\n                lo += _fo[5] * ptr[-po + 31 -  6];\n                lo += _fo[4] * ptr[-po + 31 -  8];\n                lo += _fo[3] * ptr[-po + 31 - 10];\n                lo += _fo[2] * ptr[-po + 31 - 12];\n                lo += _fo[1] * ptr[-po + 31 - 14];\n                lo += _fo[0] * ptr[-po + 31 - 16];\n\n                pcm[pcm2Ptr--] = lo;\n                ++foPtr;\n            }\n\n            ++Dptr;\n\n            ptr = D[Dptr];\n            _fo = fo[foPtr];\n\n            lo  = _fo[0] * ptr[po +  0];\n            lo += _fo[1] * ptr[po + 14];\n            lo += _fo[2] * ptr[po + 12];\n            lo += _fo[3] * ptr[po + 10];\n            lo += _fo[4] * ptr[po +  8];\n            lo += _fo[5] * ptr[po +  6];\n            lo += _fo[6] * ptr[po +  4];\n            lo += _fo[7] * ptr[po +  2];\n\n            pcm[pcm1Ptr] = -lo;\n            pcm1Ptr += 16;\n            phase = (phase + 1) % 16;\n        }\n    }\n};\n\n// TODO: synth.half()\n\n/*\n * NAME:    synth.frame()\n * DESCRIPTION: perform PCM synthesis of frame subband samples\n */\nMP3Synth.prototype.frame = function (frame) {\n    var nch = frame.header.nchannels();\n    var ns  = frame.header.nbsamples();\n\n    this.pcm.samplerate = frame.header.samplerate;\n    this.pcm.channels   = nch;\n    this.pcm.length     = 32 * ns;\n\n    /*\n     if (frame.options & Mad.Option.HALFSAMPLERATE) {\n     this.pcm.samplerate /= 2;\n     this.pcm.length     /= 2;\n\n     throw new Error(\"HALFSAMPLERATE is not supported. What do you think? As if I have the time for this\");\n     }\n     */\n\n    this.full(frame, nch, ns);\n    this.phase = (this.phase + ns) % 16;\n};\n\nmodule.exports = MP3Synth;\n","/*\n * These are the scalefactor values for Layer I and Layer II.\n * The values are from Table B.1 of ISO/IEC 11172-3.\n *\n * Strictly speaking, Table B.1 has only 63 entries (0-62), thus a strict\n * interpretation of ISO/IEC 11172-3 would suggest that a scalefactor index of\n * 63 is invalid. However, for better compatibility with current practices, we\n * add a 64th entry.\n */\nexports.SF_TABLE = new Float32Array([\n    2.000000000000, 1.587401051968, 1.259921049895, 1.000000000000, \n    0.793700525984, 0.629960524947, 0.500000000000, 0.396850262992,\n    0.314980262474, 0.250000000000, 0.198425131496, 0.157490131237,\n    0.125000000000, 0.099212565748, 0.078745065618, 0.062500000000,\n    0.049606282874, 0.039372532809, 0.031250000000, 0.024803141437,\n    0.019686266405, 0.015625000000, 0.012401570719, 0.009843133202,\n    0.007812500000, 0.006200785359, 0.004921566601, 0.003906250000,\n    0.003100392680, 0.002460783301, 0.001953125000, 0.001550196340,\n    0.001230391650, 0.000976562500, 0.000775098170, 0.000615195825,\n    0.000488281250, 0.000387549085, 0.000307597913, 0.000244140625,\n    0.000193774542, 0.000153798956, 0.000122070313, 0.000096887271,\n    0.000076899478, 0.000061035156, 0.000048443636, 0.000038449739,\n    0.000030517578, 0.000024221818, 0.000019224870, 0.000015258789,\n    0.000012110909, 0.000009612435, 0.000007629395, 0.000006055454,\n    0.000004806217, 0.000003814697, 0.000003027727, 0.000002403109,\n    0.000001907349, 0.000001513864, 0.000001201554, 0.000000000000\n]);\n\n/*\n * MPEG-1 scalefactor band widths\n * derived from Table B.8 of ISO/IEC 11172-3\n */\nconst SFB_48000_LONG = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  6,  6,  6,   8,  10,\n    12, 16, 18, 22, 28, 34, 40, 46, 54,  54, 192\n]);\n\nconst SFB_44100_LONG = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  6,  6,  8,   8,  10,\n    12, 16, 20, 24, 28, 34, 42, 50, 54,  76, 158\n]);\n\nconst SFB_32000_LONG = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  6,  6,  8,  10,  12,\n    16, 20, 24, 30, 38, 46, 56, 68, 84, 102,  26\n]);\n\nconst SFB_48000_SHORT = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\n    6,  6,  6,  6,  6, 10, 10, 10, 12, 12, 12, 14, 14,\n    14, 16, 16, 16, 20, 20, 20, 26, 26, 26, 66, 66, 66\n]);\n\nconst SFB_44100_SHORT = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\n    6,  6,  8,  8,  8, 10, 10, 10, 12, 12, 12, 14, 14,\n    14, 18, 18, 18, 22, 22, 22, 30, 30, 30, 56, 56, 56\n]);\n\nconst SFB_32000_SHORT = new Uint8Array([\n    4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  6,\n    6,  6,  8,  8,  8, 12, 12, 12, 16, 16, 16, 20, 20,\n    20, 26, 26, 26, 34, 34, 34, 42, 42, 42, 12, 12, 12\n]);\n\nconst SFB_48000_MIXED = new Uint8Array([\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\n    /* short */  4,  4,  4,  6,  6,  6,  6,  6,  6, 10,\n    10, 10, 12, 12, 12, 14, 14, 14, 16, 16,\n    16, 20, 20, 20, 26, 26, 26, 66, 66, 66\n]);\n\nconst SFB_44100_MIXED = new Uint8Array([\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\n    /* short */  4,  4,  4,  6,  6,  6,  8,  8,  8, 10,\n    10, 10, 12, 12, 12, 14, 14, 14, 18, 18,\n    18, 22, 22, 22, 30, 30, 30, 56, 56, 56\n]);\n\nconst SFB_32000_MIXED = new Uint8Array([\n    /* long */   4,  4,  4,  4,  4,  4,  6,  6,\n    /* short */  4,  4,  4,  6,  6,  6,  8,  8,  8, 12,\n    12, 12, 16, 16, 16, 20, 20, 20, 26, 26,\n    26, 34, 34, 34, 42, 42, 42, 12, 12, 12\n]);\n\n/*\n * MPEG-2 scalefactor band widths\n * derived from Table B.2 of ISO/IEC 13818-3\n */\nconst SFB_24000_LONG = new Uint8Array([\n    6,  6,  6,  6,  6,  6,  8, 10, 12,  14,  16,\n   18, 22, 26, 32, 38, 46, 54, 62, 70,  76,  36\n]);\n\nconst SFB_22050_LONG = new Uint8Array([\n    6,  6,  6,  6,  6,  6,  8, 10, 12,  14,  16,\n   20, 24, 28, 32, 38, 46, 52, 60, 68,  58,  54\n]);\n\nconst SFB_16000_LONG = SFB_22050_LONG;\n\nconst SFB_24000_SHORT = new Uint8Array([\n   4,  4,  4,  4,  4,  4,  4,  4,  4,  6,  6,  6,  8,\n   8,  8, 10, 10, 10, 12, 12, 12, 14, 14, 14, 18, 18,\n  18, 24, 24, 24, 32, 32, 32, 44, 44, 44, 12, 12, 12\n]);\n\nconst SFB_22050_SHORT = new Uint8Array([\n   4,  4,  4,  4,  4,  4,  4,  4,  4,  6,  6,  6,  6,\n   6,  6,  8,  8,  8, 10, 10, 10, 14, 14, 14, 18, 18,\n  18, 26, 26, 26, 32, 32, 32, 42, 42, 42, 18, 18, 18\n]);\n\nconst SFB_16000_SHORT = new Uint8Array([\n   4,  4,  4,  4,  4,  4,  4,  4,  4,  6,  6,  6,  8,\n   8,  8, 10, 10, 10, 12, 12, 12, 14, 14, 14, 18, 18,\n  18, 24, 24, 24, 30, 30, 30, 40, 40, 40, 18, 18, 18\n]);\n\nconst SFB_24000_MIXED = new Uint8Array([\n  /* long */   6,  6,  6,  6,  6,  6,\n  /* short */  6,  6,  6,  8,  8,  8, 10, 10, 10, 12,\n              12, 12, 14, 14, 14, 18, 18, 18, 24, 24,\n              24, 32, 32, 32, 44, 44, 44, 12, 12, 12\n]);\n\nconst SFB_22050_MIXED = new Uint8Array([\n  /* long */   6,  6,  6,  6,  6,  6,\n  /* short */  6,  6,  6,  6,  6,  6,  8,  8,  8, 10,\n              10, 10, 14, 14, 14, 18, 18, 18, 26, 26,\n              26, 32, 32, 32, 42, 42, 42, 18, 18, 18\n]);\n\nconst SFB_16000_MIXED = new Uint8Array([\n  /* long */   6,  6,  6,  6,  6,  6,\n  /* short */  6,  6,  6,  8,  8,  8, 10, 10, 10, 12,\n              12, 12, 14, 14, 14, 18, 18, 18, 24, 24,\n              24, 30, 30, 30, 40, 40, 40, 18, 18, 18\n]);\n\n/*\n * MPEG 2.5 scalefactor band widths\n * derived from public sources\n */\nconst SFB_12000_LONG = SFB_16000_LONG;\nconst SFB_11025_LONG = SFB_12000_LONG;\n\nconst SFB_8000_LONG = new Uint8Array([\n  12, 12, 12, 12, 12, 12, 16, 20, 24,  28,  32,\n  40, 48, 56, 64, 76, 90,  2,  2,  2,   2,   2\n]);\n\nconst SFB_12000_SHORT = SFB_16000_SHORT;\nconst SFB_11025_SHORT = SFB_12000_SHORT;\n\nconst SFB_8000_SHORT = new Uint8Array([\n   8,  8,  8,  8,  8,  8,  8,  8,  8, 12, 12, 12, 16,\n  16, 16, 20, 20, 20, 24, 24, 24, 28, 28, 28, 36, 36,\n  36,  2,  2,  2,  2,  2,  2,  2,  2,  2, 26, 26, 26\n]);\n\nconst SFB_12000_MIXED = SFB_16000_MIXED;\nconst SFB_11025_MIXED = SFB_12000_MIXED;\n\n/* the 8000 Hz short block scalefactor bands do not break after\n   the first 36 frequency lines, so this is probably wrong */\nconst SFB_8000_MIXED = new Uint8Array([\n  /* long */  12, 12, 12,\n  /* short */  4,  4,  4,  8,  8,  8, 12, 12, 12, 16, 16, 16,\n              20, 20, 20, 24, 24, 24, 28, 28, 28, 36, 36, 36,\n               2,  2,  2,  2,  2,  2,  2,  2,  2, 26, 26, 26\n]);\n\nexports.SFBWIDTH_TABLE = [\n    { l: SFB_48000_LONG, s: SFB_48000_SHORT, m: SFB_48000_MIXED },\n    { l: SFB_44100_LONG, s: SFB_44100_SHORT, m: SFB_44100_MIXED },\n    { l: SFB_32000_LONG, s: SFB_32000_SHORT, m: SFB_32000_MIXED },\n    { l: SFB_24000_LONG, s: SFB_24000_SHORT, m: SFB_24000_MIXED },\n    { l: SFB_22050_LONG, s: SFB_22050_SHORT, m: SFB_22050_MIXED },\n    { l: SFB_16000_LONG, s: SFB_16000_SHORT, m: SFB_16000_MIXED },\n    { l: SFB_12000_LONG, s: SFB_12000_SHORT, m: SFB_12000_MIXED },\n    { l: SFB_11025_LONG, s: SFB_11025_SHORT, m: SFB_11025_MIXED },\n    { l:  SFB_8000_LONG, s:  SFB_8000_SHORT, m:  SFB_8000_MIXED }\n];\n\nexports.PRETAB = new Uint8Array([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0\n]);\n\n/*\n * fractional powers of two\n * used for requantization and joint stereo decoding\n *\n * ROOT_TABLE[3 + x] = 2^(x/4)\n */\nexports.ROOT_TABLE = new Float32Array([\n    /* 2^(-3/4) */ 0.59460355750136,\n    /* 2^(-2/4) */ 0.70710678118655,\n    /* 2^(-1/4) */ 0.84089641525371,\n    /* 2^( 0/4) */ 1.00000000000000,\n    /* 2^(+1/4) */ 1.18920711500272,\n    /* 2^(+2/4) */ 1.41421356237310,\n    /* 2^(+3/4) */ 1.68179283050743\n]);\n\nexports.CS = new Float32Array([\n    +0.857492926 , +0.881741997,\n    +0.949628649 , +0.983314592,\n    +0.995517816 , +0.999160558,\n    +0.999899195 , +0.999993155\n]);\n\nexports.CA = new Float32Array([\n    -0.514495755, -0.471731969,\n    -0.313377454, -0.181913200,\n    -0.094574193, -0.040965583,\n    -0.014198569, -0.003699975\n]);\n\nexports.COUNT1TABLE_SELECT = 0x01;\nexports.SCALEFAC_SCALE     = 0x02;\nexports.PREFLAG            = 0x04;\nexports.MIXED_BLOCK_FLAG   = 0x08;\n\nexports.I_STEREO  = 0x1;\nexports.MS_STEREO = 0x2;\n\n/*\n * windowing coefficients for long blocks\n * derived from section 2.4.3.4.10.3 of ISO/IEC 11172-3\n *\n * WINDOW_L[i] = sin((PI / 36) * (i + 1/2))\n */\nexports.WINDOW_L = new Float32Array([\n    0.043619387, 0.130526192,\n    0.216439614, 0.300705800,\n    0.382683432, 0.461748613,\n    0.537299608, 0.608761429,\n    0.675590208, 0.737277337,\n    0.793353340, 0.843391446,\n\n    0.887010833, 0.923879533,\n    0.953716951, 0.976296007,\n    0.991444861, 0.999048222,\n    0.999048222, 0.991444861,\n    0.976296007, 0.953716951,\n    0.923879533, 0.887010833,\n\n    0.843391446, 0.793353340,\n    0.737277337, 0.675590208,\n    0.608761429, 0.537299608,\n    0.461748613, 0.382683432,\n    0.300705800, 0.216439614,\n    0.130526192, 0.043619387\n]);\n\n/*\n * windowing coefficients for short blocks\n * derived from section 2.4.3.4.10.3 of ISO/IEC 11172-3\n *\n * WINDOW_S[i] = sin((PI / 12) * (i + 1/2))\n */\nexports.WINDOW_S = new Float32Array([\n    0.130526192, 0.382683432,\n    0.608761429, 0.793353340,\n    0.923879533, 0.991444861,\n    0.991444861, 0.923879533,\n    0.793353340, 0.608761429,\n    0.382683432, 0.130526192\n]);\n\n/*\n * coefficients for intensity stereo processing\n * derived from section 2.4.3.4.9.3 of ISO/IEC 11172-3\n *\n * is_ratio[i] = tan(i * (PI / 12))\n * IS_TABLE[i] = is_ratio[i] / (1 + is_ratio[i])\n */\nexports.IS_TABLE = new Float32Array([\n    0.000000000,\n    0.211324865,\n    0.366025404,\n    0.500000000,\n    0.633974596,\n    0.788675135,\n    1.000000000\n]);\n\n/*\n * coefficients for LSF intensity stereo processing\n * derived from section 2.4.3.2 of ISO/IEC 13818-3\n *\n * IS_LSF_TABLE[0][i] = (1 / sqrt(sqrt(2)))^(i + 1)\n * IS_LSF_TABLE[1][i] = (1 /      sqrt(2)) ^(i + 1)\n */\nexports.IS_LSF_TABLE = [\n    new Float32Array([\n        0.840896415,\n        0.707106781,\n        0.594603558,\n        0.500000000,\n        0.420448208,\n        0.353553391,\n        0.297301779,\n        0.250000000,\n        0.210224104,\n        0.176776695,\n        0.148650889,\n        0.125000000,\n        0.105112052,\n        0.088388348,\n        0.074325445\n    ]), \n    new Float32Array([\n        0.707106781,\n        0.500000000,\n        0.353553391,\n        0.250000000,\n        0.176776695,\n        0.125000000,\n        0.088388348,\n        0.062500000,\n        0.044194174,\n        0.031250000,\n        0.022097087,\n        0.015625000,\n        0.011048543,\n        0.007812500,\n        0.005524272\n    ])\n];\n\n/*\n * scalefactor bit lengths\n * derived from section 2.4.2.7 of ISO/IEC 11172-3\n */\nexports.SFLEN_TABLE = [\n    { slen1: 0, slen2: 0 }, { slen1: 0, slen2: 1 }, { slen1: 0, slen2: 2 }, { slen1: 0, slen2: 3 },\n    { slen1: 3, slen2: 0 }, { slen1: 1, slen2: 1 }, { slen1: 1, slen2: 2 }, { slen1: 1, slen2: 3 },\n    { slen1: 2, slen2: 1 }, { slen1: 2, slen2: 2 }, { slen1: 2, slen2: 3 }, { slen1: 3, slen2: 1 },\n    { slen1: 3, slen2: 2 }, { slen1: 3, slen2: 3 }, { slen1: 4, slen2: 2 }, { slen1: 4, slen2: 3 }    \n];\n\n/*\n * number of LSF scalefactor band values\n * derived from section 2.4.3.2 of ISO/IEC 13818-3\n */\nexports.NSFB_TABLE = [\n    [ [  6,  5,  5, 5 ],\n      [  9,  9,  9, 9 ],\n      [  6,  9,  9, 9 ] ],\n\n    [ [  6,  5,  7, 3 ],\n      [  9,  9, 12, 6 ],\n      [  6,  9, 12, 6 ] ],\n\n    [ [ 11, 10,  0, 0 ],\n      [ 18, 18,  0, 0 ],\n      [ 15, 18,  0, 0 ] ],\n\n    [ [  7,  7,  7, 0 ],\n      [ 12, 12, 12, 0 ],\n      [  6, 15, 12, 0 ] ],\n\n    [ [  6,  6,  6, 3 ],\n      [ 12,  9,  9, 6 ],\n      [  6, 12,  9, 6 ] ],\n\n    [ [  8,  8,  5, 0 ],\n      [ 15, 12,  9, 0 ],\n      [  6, 18,  9, 0 ] ]\n];\n ","var tables = require('./tables');\nvar MP3FrameHeader = require('./header');\nvar MP3Frame = require('./frame');\nvar utils = require('./utils');\n\nfunction Layer1() {    \n    this.allocation = utils.makeArray([2, 32], Uint8Array);\n    this.scalefactor = utils.makeArray([2, 32], Uint8Array);\n}\n\nMP3Frame.layers[1] = Layer1;\n\n// linear scaling table\nconst LINEAR_TABLE = new Float32Array([\n    1.33333333333333, 1.14285714285714, 1.06666666666667,\n    1.03225806451613, 1.01587301587302, 1.00787401574803,\n    1.00392156862745, 1.00195694716243, 1.00097751710655,\n    1.00048851978505, 1.00024420024420, 1.00012208521548,\n    1.00006103888177, 1.00003051850948\n]);\n\nLayer1.prototype.decode = function(stream, frame) {\n    var header = frame.header;\n    var nch = header.nchannels();\n    \n    var bound = 32;\n    if (header.mode === MP3FrameHeader.MODE.JOINT_STEREO) {\n        header.flags |= MP3FrameHeader.FLAGS.I_STEREO;\n        bound = 4 + header.mode_extension * 4;\n    }\n    \n    if (header.flags & MP3FrameHeader.FLAGS.PROTECTION) {\n        // TODO: crc check\n    }\n    \n    // decode bit allocations\n    var allocation = this.allocation;\n    for (var sb = 0; sb < bound; sb++) {\n        for (var ch = 0; ch < nch; ch++) {\n            var nb = stream.read(4);\n            if (nb === 15)\n                throw new Error(\"forbidden bit allocation value\");\n                \n            allocation[ch][sb] = nb ? nb + 1 : 0;\n        }\n    }\n    \n    for (var sb = bound; sb < 32; sb++) {\n        var nb = stream.read(4);\n        if (nb === 15)\n            throw new Error(\"forbidden bit allocation value\");\n            \n        allocation[0][sb] =\n        allocation[1][sb] = nb ? nb + 1 : 0;\n    }\n    \n    // decode scalefactors\n    var scalefactor = this.scalefactor;\n    for (var sb = 0; sb < 32; sb++) {\n        for (var ch = 0; ch < nch; ch++) {\n            if (allocation[ch][sb]) {\n                scalefactor[ch][sb] = stream.read(6);\n                \n            \t/*\n            \t * Scalefactor index 63 does not appear in Table B.1 of\n            \t * ISO/IEC 11172-3. Nonetheless, other implementations accept it,\n                 * so we do as well \n                 */\n            }\n        }\n    }\n    \n    // decode samples\n    for (var s = 0; s < 12; s++) {\n        for (var sb = 0; sb < bound; sb++) {\n            for (var ch = 0; ch < nch; ch++) {\n                var nb = allocation[ch][sb];\n                frame.sbsample[ch][s][sb] = nb ? this.sample(stream, nb) * tables.SF_TABLE[scalefactor[ch][sb]] : 0;\n            }\n        }\n        \n        for (var sb = bound; sb < 32; sb++) {\n            var nb = allocation[0][sb];\n            if (nb) {\n                var sample = this.sample(stream, nb);\n                \n                for (var ch = 0; ch < nch; ch++) {\n                    frame.sbsample[ch][s][sb] = sample * tables.SF_TABLE[scalefactor[ch][sb]];\n                }\n            } else {\n                for (var ch = 0; ch < nch; ch++) {\n                    frame.sbsample[ch][s][sb] = 0;\n                }\n            }\n        }\n    }\n};\n\nLayer1.prototype.sample = function(stream, nb) {\n    var sample = stream.read(nb);\n    \n    // invert most significant bit, and form a 2's complement sample\n    sample ^= 1 << (nb - 1);\n    sample |= -(sample & (1 << (nb - 1)));\n    sample /= (1 << (nb - 1));\n        \n    // requantize the sample\n    // s'' = (2^nb / (2^nb - 1)) * (s''' + 2^(-nb + 1))\n    sample += 1 >> (nb - 1);\n    return sample * LINEAR_TABLE[nb - 2];\n};\n\nmodule.exports = Layer1;\n","var tables = require('./tables');\nvar MP3FrameHeader = require('./header');\nvar MP3Frame = require('./frame');\nvar utils = require('./utils');\n\nfunction Layer2() {    \n    this.samples = new Float64Array(3);\n    this.allocation = utils.makeArray([2, 32], Uint8Array);\n    this.scfsi = utils.makeArray([2, 32], Uint8Array);\n    this.scalefactor = utils.makeArray([2, 32, 3], Uint8Array);\n}\n\nMP3Frame.layers[2] = Layer2;\n\n// possible quantization per subband table\nconst SBQUANT = [\n  // ISO/IEC 11172-3 Table B.2a\n  { sblimit: 27, offsets:\n      [ 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0 ] },\n      \n  // ISO/IEC 11172-3 Table B.2b\n  { sblimit: 30, offsets:\n      [ 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0 ] },\n      \n  // ISO/IEC 11172-3 Table B.2c\n  {  sblimit: 8, offsets:\n      [ 5, 5, 2, 2, 2, 2, 2, 2 ] },\n      \n  // ISO/IEC 11172-3 Table B.2d\n  { sblimit: 12, offsets:\n      [ 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2 ] },\n      \n  // ISO/IEC 13818-3 Table B.1\n  { sblimit: 30, offsets:\n      [ 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ] }\n];\n\n// bit allocation table\nconst BITALLOC = [\n    { nbal: 2, offset: 0 },  // 0\n    { nbal: 2, offset: 3 },  // 1\n    { nbal: 3, offset: 3 },  // 2\n    { nbal: 3, offset: 1 },  // 3\n    { nbal: 4, offset: 2 },  // 4\n    { nbal: 4, offset: 3 },  // 5\n    { nbal: 4, offset: 4 },  // 6\n    { nbal: 4, offset: 5 }   // 7\n];\n\n// offsets into quantization class table\nconst OFFSETS = [\n    [ 0, 1, 16                                             ],  // 0\n    [ 0, 1,  2, 3, 4, 5, 16                                ],  // 1\n    [ 0, 1,  2, 3, 4, 5,  6, 7,  8,  9, 10, 11, 12, 13, 14 ],  // 2\n    [ 0, 1,  3, 4, 5, 6,  7, 8,  9, 10, 11, 12, 13, 14, 15 ],  // 3\n    [ 0, 1,  2, 3, 4, 5,  6, 7,  8,  9, 10, 11, 12, 13, 16 ],  // 4\n    [ 0, 2,  4, 5, 6, 7,  8, 9, 10, 11, 12, 13, 14, 15, 16 ]   // 5\n];\n\n\n\n/*\n * These are the Layer II classes of quantization.\n * The table is derived from Table B.4 of ISO/IEC 11172-3.\n */\nconst QC_TABLE = [\n    { nlevels:     3, group: 2, bits:  5, C: 1.33333333333, D: 0.50000000000 },\n    { nlevels:     5, group: 3, bits:  7, C: 1.60000000000, D: 0.50000000000 },\n    { nlevels:     7, group: 0, bits:  3, C: 1.14285714286, D: 0.25000000000 },\n    { nlevels:     9, group: 4, bits: 10, C: 1.77777777777, D: 0.50000000000 },\n    { nlevels:    15, group: 0, bits:  4, C: 1.06666666666, D: 0.12500000000 },\n    { nlevels:    31, group: 0, bits:  5, C: 1.03225806452, D: 0.06250000000 },\n    { nlevels:    63, group: 0, bits:  6, C: 1.01587301587, D: 0.03125000000 },\n    { nlevels:   127, group: 0, bits:  7, C: 1.00787401575, D: 0.01562500000 },\n    { nlevels:   255, group: 0, bits:  8, C: 1.00392156863, D: 0.00781250000 },\n    { nlevels:   511, group: 0, bits:  9, C: 1.00195694716, D: 0.00390625000 },\n    { nlevels:  1023, group: 0, bits: 10, C: 1.00097751711, D: 0.00195312500 },\n    { nlevels:  2047, group: 0, bits: 11, C: 1.00048851979, D: 0.00097656250 },\n    { nlevels:  4095, group: 0, bits: 12, C: 1.00024420024, D: 0.00048828125 },\n    { nlevels:  8191, group: 0, bits: 13, C: 1.00012208522, D: 0.00024414063 },\n    { nlevels: 16383, group: 0, bits: 14, C: 1.00006103888, D: 0.00012207031 },\n    { nlevels: 32767, group: 0, bits: 15, C: 1.00003051851, D: 0.00006103516 },\n    { nlevels: 65535, group: 0, bits: 16, C: 1.00001525902, D: 0.00003051758 }\n];\n\nLayer2.prototype.decode = function(stream, frame) {\n    var header = frame.header;\n    var nch = header.nchannels();\n    var index;\n    \n    if (header.flags & MP3FrameHeader.FLAGS.LSF_EXT) {\n        index = 4;\n    } else if (header.flags & MP3FrameHeader.FLAGS.FREEFORMAT) {\n        index = header.samplerate === 48000 ? 0 : 1;\n    } else {\n        var bitrate_per_channel = header.bitrate;\n        \n        if (nch === 2) {\n            bitrate_per_channel /= 2;\n            \n            /*\n             * ISO/IEC 11172-3 allows only single channel mode for 32, 48, 56, and\n             * 80 kbps bitrates in Layer II, but some encoders ignore this\n             * restriction, so we ignore it as well.\n             */\n        } else {\n            /*\n        \t * ISO/IEC 11172-3 does not allow single channel mode for 224, 256,\n        \t * 320, or 384 kbps bitrates in Layer II.\n        \t */\n            if (bitrate_per_channel > 192000)\n                throw new Error('bad bitrate/mode combination');\n        }\n        \n        if (bitrate_per_channel <= 48000)\n            index = header.samplerate === 32000 ? 3 : 2;\n        else if (bitrate_per_channel <= 80000)\n            index = 0;\n        else\n            index = header.samplerate === 48000 ? 0 : 1;\n    }\n    \n    var sblimit = SBQUANT[index].sblimit;\n    var offsets = SBQUANT[index].offsets;\n    \n    var bound = 32;\n    if (header.mode === MP3FrameHeader.MODE.JOINT_STEREO) {\n        header.flags |= MP3FrameHeader.FLAGS.I_STEREO;\n        bound = 4 + header.mode_extension * 4;\n    }\n    \n    if (bound > sblimit)\n        bound = sblimit;\n    \n    // decode bit allocations\n    var allocation = this.allocation;\n    for (var sb = 0; sb < bound; sb++) {\n        var nbal = BITALLOC[offsets[sb]].nbal;\n        \n        for (var ch = 0; ch < nch; ch++)\n            allocation[ch][sb] = stream.read(nbal);\n    }\n    \n    for (var sb = bound; sb < sblimit; sb++) {\n        var nbal = BITALLOC[offsets[sb]].nbal;\n        \n        allocation[0][sb] =\n        allocation[1][sb] = stream.read(nbal);\n    }\n    \n    // decode scalefactor selection info\n    var scfsi = this.scfsi;\n    for (var sb = 0; sb < sblimit; sb++) {\n        for (var ch = 0; ch < nch; ch++) {\n            if (allocation[ch][sb])\n                scfsi[ch][sb] = stream.read(2);\n        }\n    }\n    \n    if (header.flags & MP3FrameHeader.FLAGS.PROTECTION) {\n        // TODO: crc check\n    }\n    \n    // decode scalefactors\n    var scalefactor = this.scalefactor;\n    for (var sb = 0; sb < sblimit; sb++) {\n        for (var ch = 0; ch < nch; ch++) {\n            if (allocation[ch][sb]) {\n                scalefactor[ch][sb][0] = stream.read(6);\n                \n                switch (scfsi[ch][sb]) {\n            \t    case 2:\n            \t        scalefactor[ch][sb][2] =\n                        scalefactor[ch][sb][1] = scalefactor[ch][sb][0];\n                        break;\n                        \n                    case 0:\n                        scalefactor[ch][sb][1] = stream.read(6);\n                    \t// fall through\n                    \t\n                    case 1:\n                    case 3:\n                        scalefactor[ch][sb][2] = stream.read(6);\n                }\n                \n                if (scfsi[ch][sb] & 1)\n                    scalefactor[ch][sb][1] = scalefactor[ch][sb][scfsi[ch][sb] - 1];\n                    \n                /*\n            \t * Scalefactor index 63 does not appear in Table B.1 of\n            \t * ISO/IEC 11172-3. Nonetheless, other implementations accept it,\n            \t * so we do as well.\n            \t */\n            }\n        }\n    }\n    \n    // decode samples\n    for (var gr = 0; gr < 12; gr++) {\n        // normal\n        for (var sb = 0; sb < bound; sb++) {\n            for (var ch = 0; ch < nch; ch++) {                \n                if (index = allocation[ch][sb]) {\n                    index = OFFSETS[BITALLOC[offsets[sb]].offset][index - 1];\n                    this.decodeSamples(stream, QC_TABLE[index]);\n                    \n                    var scale = tables.SF_TABLE[scalefactor[ch][sb][gr >> 2]];\n                    for (var s = 0; s < 3; s++) {\n                        frame.sbsample[ch][3 * gr + s][sb] = this.samples[s] * scale;\n                    }\n                } else {\n                    for (var s = 0; s < 3; s++) {\n                        frame.sbsample[ch][3 * gr + s][sb] = 0;\n                    }\n                }\n            }\n        }\n        \n        // joint stereo\n        for (var sb = bound; sb < sblimit; sb++) {\n            if (index = allocation[0][sb]) {\n                index = OFFSETS[BITALLOC[offsets[sb]].offset][index - 1];\n                this.decodeSamples(stream, QC_TABLE[index]);\n                \n                for (var ch = 0; ch < nch; ch++) {\n                    var scale = tables.SF_TABLE[scalefactor[ch][sb][gr >> 2]];\n                    for (var s = 0; s < 3; s++) {\n                        frame.sbsample[ch][3 * gr + s][sb] = this.samples[s] * scale;\n                    }\n                }\n            } else {\n                for (var ch = 0; ch < nch; ch++) {\n                    for (var s = 0; s < 3; s++) {\n                        frame.sbsample[ch][3 * gr + s][sb] = 0;\n                    }\n                }\n            }\n        }\n        \n        // the rest\n        for (var ch = 0; ch < nch; ch++) {\n            for (var s = 0; s < 3; s++) {\n                for (var sb = sblimit; sb < 32; sb++) {\n                    frame.sbsample[ch][3 * gr + s][sb] = 0;\n                }\n            }\n        }\n    }\n};\n\nLayer2.prototype.decodeSamples = function(stream, quantclass) {\n    var sample = this.samples;\n    var nb = quantclass.group;\n    \n    if (nb) {\n        // degrouping\n        var c = stream.read(quantclass.bits);\n        var nlevels = quantclass.nlevels;\n        \n        for (var s = 0; s < 3; s++) {\n            sample[s] = c % nlevels;\n            c = c / nlevels | 0;\n        }\n    } else {\n        nb = quantclass.bits;\n        for (var s = 0; s < 3; s++) {\n            sample[s] = stream.read(nb);\n        }\n    }\n    \n    for (var s = 0; s < 3; s++) {\n        // invert most significant bit, and form a 2's complement sample\n        var requantized = sample[s] ^ (1 << (nb - 1));\n        requantized |= -(requantized & (1 << (nb - 1)));\n        requantized /= (1 << (nb - 1));\n        \n        // requantize the sample\n        sample[s] = (requantized + quantclass.D) * quantclass.C;\n    }\n};\n\nmodule.exports = Layer2;\n","/*\n * These are the Huffman code words for Layer III.\n * The data for these tables are derived from Table B.7 of ISO/IEC 11172-3.\n *\n * These tables support decoding up to 4 Huffman code bits at a time.\n */\n\nvar PTR = function(offs, bits) {\n    return {\n        final: 0,\n        ptr: {\n            bits:   bits,\n            offset: offs\n        }\n    };\n};\n\nvar huffquad_V = function (v, w, x, y, hlen) {\n    return {\n        final: 1,\n        value: {\n            v: v,\n            w: w,\n            x: x,\n            y: y,\n            hlen: hlen\n        }\n    };\n};\n\nconst hufftabA = [\n  /* 0000 */ PTR(16, 2),\n  /* 0001 */ PTR(20, 2),\n  /* 0010 */ PTR(24, 1),\n  /* 0011 */ PTR(26, 1),\n  /* 0100 */ huffquad_V(0, 0, 1, 0, 4),\n  /* 0101 */ huffquad_V(0, 0, 0, 1, 4),\n  /* 0110 */ huffquad_V(0, 1, 0, 0, 4),\n  /* 0111 */ huffquad_V(1, 0, 0, 0, 4),\n  /* 1000 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1001 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1010 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1011 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1100 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1101 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1110 */ huffquad_V(0, 0, 0, 0, 1),\n  /* 1111 */ huffquad_V(0, 0, 0, 0, 1),\n\n  /* 0000 ... */\n  /* 00   */ huffquad_V(1, 0, 1, 1, 2),\t/* 16 */\n  /* 01   */ huffquad_V(1, 1, 1, 1, 2),\n  /* 10   */ huffquad_V(1, 1, 0, 1, 2),\n  /* 11   */ huffquad_V(1, 1, 1, 0, 2),\n\n  /* 0001 ... */\n  /* 00   */ huffquad_V(0, 1, 1, 1, 2),\t/* 20 */\n  /* 01   */ huffquad_V(0, 1, 0, 1, 2),\n  /* 10   */ huffquad_V(1, 0, 0, 1, 1),\n  /* 11   */ huffquad_V(1, 0, 0, 1, 1),\n\n  /* 0010 ... */\n  /* 0    */ huffquad_V(0, 1, 1, 0, 1),\t/* 24 */\n  /* 1    */ huffquad_V(0, 0, 1, 1, 1),\n\n  /* 0011 ... */\n  /* 0    */ huffquad_V(1, 0, 1, 0, 1),\t/* 26 */\n  /* 1    */ huffquad_V(1, 1, 0, 0, 1)\n];\n\nconst hufftabB = [\n  /* 0000 */ huffquad_V(1, 1, 1, 1, 4),\n  /* 0001 */ huffquad_V(1, 1, 1, 0, 4),\n  /* 0010 */ huffquad_V(1, 1, 0, 1, 4),\n  /* 0011 */ huffquad_V(1, 1, 0, 0, 4),\n  /* 0100 */ huffquad_V(1, 0, 1, 1, 4),\n  /* 0101 */ huffquad_V(1, 0, 1, 0, 4),\n  /* 0110 */ huffquad_V(1, 0, 0, 1, 4),\n  /* 0111 */ huffquad_V(1, 0, 0, 0, 4),\n  /* 1000 */ huffquad_V(0, 1, 1, 1, 4),\n  /* 1001 */ huffquad_V(0, 1, 1, 0, 4),\n  /* 1010 */ huffquad_V(0, 1, 0, 1, 4),\n  /* 1011 */ huffquad_V(0, 1, 0, 0, 4),\n  /* 1100 */ huffquad_V(0, 0, 1, 1, 4),\n  /* 1101 */ huffquad_V(0, 0, 1, 0, 4),\n  /* 1110 */ huffquad_V(0, 0, 0, 1, 4),\n  /* 1111 */ huffquad_V(0, 0, 0, 0, 4)\n];\n\nvar V = function (x, y, hlen) {\n    return {\n        final: 1,\n        value: {\n            x: x,\n            y: y,\n            hlen: hlen\n        }\n    };\n};\n\nconst hufftab0 = [\n  /*      */ V(0, 0, 0)\n];\n\nconst hufftab1 = [\n  /* 000  */ V(1, 1, 3),\n  /* 001  */ V(0, 1, 3),\n  /* 010  */ V(1, 0, 2),\n  /* 011  */ V(1, 0, 2),\n  /* 100  */ V(0, 0, 1),\n  /* 101  */ V(0, 0, 1),\n  /* 110  */ V(0, 0, 1),\n  /* 111  */ V(0, 0, 1)\n];\n\nconst hufftab2 = [\n  /* 000  */ PTR(8, 3),\n  /* 001  */ V(1, 1, 3),\n  /* 010  */ V(0, 1, 3),\n  /* 011  */ V(1, 0, 3),\n  /* 100  */ V(0, 0, 1),\n  /* 101  */ V(0, 0, 1),\n  /* 110  */ V(0, 0, 1),\n  /* 111  */ V(0, 0, 1),\n\n  /* 000 ... */\n  /* 000  */ V(2, 2, 3),\t/* 8 */\n  /* 001  */ V(0, 2, 3),\n  /* 010  */ V(1, 2, 2),\n  /* 011  */ V(1, 2, 2),\n  /* 100  */ V(2, 1, 2),\n  /* 101  */ V(2, 1, 2),\n  /* 110  */ V(2, 0, 2),\n  /* 111  */ V(2, 0, 2)\n];\n\nconst hufftab3 = [\n  /* 000  */ PTR(8, 3),\n  /* 001  */ V(1, 0, 3),\n  /* 010  */ V(1, 1, 2),\n  /* 011  */ V(1, 1, 2),\n  /* 100  */ V(0, 1, 2),\n  /* 101  */ V(0, 1, 2),\n  /* 110  */ V(0, 0, 2),\n  /* 111  */ V(0, 0, 2),\n\n  /* 000 ... */\n  /* 000  */ V(2, 2, 3),\t/* 8 */\n  /* 001  */ V(0, 2, 3),\n  /* 010  */ V(1, 2, 2),\n  /* 011  */ V(1, 2, 2),\n  /* 100  */ V(2, 1, 2),\n  /* 101  */ V(2, 1, 2),\n  /* 110  */ V(2, 0, 2),\n  /* 111  */ V(2, 0, 2)\n];\n\nconst hufftab5 = [\n  /* 000  */ PTR(8, 4),\n  /* 001  */ V(1, 1, 3),\n  /* 010  */ V(0, 1, 3),\n  /* 011  */ V(1, 0, 3),\n  /* 100  */ V(0, 0, 1),\n  /* 101  */ V(0, 0, 1),\n  /* 110  */ V(0, 0, 1),\n  /* 111  */ V(0, 0, 1),\n\n  /* 000 ... */\n  /* 0000 */ PTR(24, 1),\t/* 8 */\n  /* 0001 */ V(3, 2, 4),\n  /* 0010 */ V(3, 1, 3),\n  /* 0011 */ V(3, 1, 3),\n  /* 0100 */ V(1, 3, 4),\n  /* 0101 */ V(0, 3, 4),\n  /* 0110 */ V(3, 0, 4),\n  /* 0111 */ V(2, 2, 4),\n  /* 1000 */ V(1, 2, 3),\n  /* 1001 */ V(1, 2, 3),\n  /* 1010 */ V(2, 1, 3),\n  /* 1011 */ V(2, 1, 3),\n  /* 1100 */ V(0, 2, 3),\n  /* 1101 */ V(0, 2, 3),\n  /* 1110 */ V(2, 0, 3),\n  /* 1111 */ V(2, 0, 3),\n\n  /* 000 0000 ... */\n  /* 0    */ V(3, 3, 1),\t/* 24 */\n  /* 1    */ V(2, 3, 1)\n];\n\nconst hufftab6 = [\n  /* 0000 */ PTR(16, 3),\n  /* 0001 */ PTR(24, 1),\n  /* 0010 */ PTR(26, 1),\n  /* 0011 */ V(1, 2, 4),\n  /* 0100 */ V(2, 1, 4),\n  /* 0101 */ V(2, 0, 4),\n  /* 0110 */ V(0, 1, 3),\n  /* 0111 */ V(0, 1, 3),\n  /* 1000 */ V(1, 1, 2),\n  /* 1001 */ V(1, 1, 2),\n  /* 1010 */ V(1, 1, 2),\n  /* 1011 */ V(1, 1, 2),\n  /* 1100 */ V(1, 0, 3),\n  /* 1101 */ V(1, 0, 3),\n  /* 1110 */ V(0, 0, 3),\n  /* 1111 */ V(0, 0, 3),\n\n  /* 0000 ... */\n  /* 000  */ V(3, 3, 3),\t/* 16 */\n  /* 001  */ V(0, 3, 3),\n  /* 010  */ V(2, 3, 2),\n  /* 011  */ V(2, 3, 2),\n  /* 100  */ V(3, 2, 2),\n  /* 101  */ V(3, 2, 2),\n  /* 110  */ V(3, 0, 2),\n  /* 111  */ V(3, 0, 2),\n\n  /* 0001 ... */\n  /* 0    */ V(1, 3, 1),\t/* 24 */\n  /* 1    */ V(3, 1, 1),\n\n  /* 0010 ... */\n  /* 0    */ V(2, 2, 1),\t/* 26 */\n  /* 1    */ V(0, 2, 1)\n];\n\nconst hufftab7 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 2),\n  /* 0011 */ V(1, 1, 4),\n  /* 0100 */ V(0, 1, 3),\n  /* 0101 */ V(0, 1, 3),\n  /* 0110 */ V(1, 0, 3),\n  /* 0111 */ V(1, 0, 3),\n  /* 1000 */ V(0, 0, 1),\n  /* 1001 */ V(0, 0, 1),\n  /* 1010 */ V(0, 0, 1),\n  /* 1011 */ V(0, 0, 1),\n  /* 1100 */ V(0, 0, 1),\n  /* 1101 */ V(0, 0, 1),\n  /* 1110 */ V(0, 0, 1),\n  /* 1111 */ V(0, 0, 1),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(52, 2),\t/* 16 */\n  /* 0001 */ PTR(56, 1),\n  /* 0010 */ PTR(58, 1),\n  /* 0011 */ V(1, 5, 4),\n  /* 0100 */ V(5, 1, 4),\n  /* 0101 */ PTR(60, 1),\n  /* 0110 */ V(5, 0, 4),\n  /* 0111 */ PTR(62, 1),\n  /* 1000 */ V(2, 4, 4),\n  /* 1001 */ V(4, 2, 4),\n  /* 1010 */ V(1, 4, 3),\n  /* 1011 */ V(1, 4, 3),\n  /* 1100 */ V(4, 1, 3),\n  /* 1101 */ V(4, 1, 3),\n  /* 1110 */ V(4, 0, 3),\n  /* 1111 */ V(4, 0, 3),\n\n  /* 0001 ... */\n  /* 0000 */ V(0, 4, 4),\t/* 32 */\n  /* 0001 */ V(2, 3, 4),\n  /* 0010 */ V(3, 2, 4),\n  /* 0011 */ V(0, 3, 4),\n  /* 0100 */ V(1, 3, 3),\n  /* 0101 */ V(1, 3, 3),\n  /* 0110 */ V(3, 1, 3),\n  /* 0111 */ V(3, 1, 3),\n  /* 1000 */ V(3, 0, 3),\n  /* 1001 */ V(3, 0, 3),\n  /* 1010 */ V(2, 2, 3),\n  /* 1011 */ V(2, 2, 3),\n  /* 1100 */ V(1, 2, 2),\n  /* 1101 */ V(1, 2, 2),\n  /* 1110 */ V(1, 2, 2),\n  /* 1111 */ V(1, 2, 2),\n\n  /* 0010 ... */\n  /* 00   */ V(2, 1, 1),\t/* 48 */\n  /* 01   */ V(2, 1, 1),\n  /* 10   */ V(0, 2, 2),\n  /* 11   */ V(2, 0, 2),\n\n  /* 0000 0000 ... */\n  /* 00   */ V(5, 5, 2),\t/* 52 */\n  /* 01   */ V(4, 5, 2),\n  /* 10   */ V(5, 4, 2),\n  /* 11   */ V(5, 3, 2),\n\n  /* 0000 0001 ... */\n  /* 0    */ V(3, 5, 1),\t/* 56 */\n  /* 1    */ V(4, 4, 1),\n\n  /* 0000 0010 ... */\n  /* 0    */ V(2, 5, 1),\t/* 58 */\n  /* 1    */ V(5, 2, 1),\n\n  /* 0000 0101 ... */\n  /* 0    */ V(0, 5, 1),\t/* 60 */\n  /* 1    */ V(3, 4, 1),\n\n  /* 0000 0111 ... */\n  /* 0    */ V(4, 3, 1),\t/* 62 */\n  /* 1    */ V(3, 3, 1)\n];\n\nconst hufftab8 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ V(1, 2, 4),\n  /* 0011 */ V(2, 1, 4),\n  /* 0100 */ V(1, 1, 2),\n  /* 0101 */ V(1, 1, 2),\n  /* 0110 */ V(1, 1, 2),\n  /* 0111 */ V(1, 1, 2),\n  /* 1000 */ V(0, 1, 3),\n  /* 1001 */ V(0, 1, 3),\n  /* 1010 */ V(1, 0, 3),\n  /* 1011 */ V(1, 0, 3),\n  /* 1100 */ V(0, 0, 2),\n  /* 1101 */ V(0, 0, 2),\n  /* 1110 */ V(0, 0, 2),\n  /* 1111 */ V(0, 0, 2),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(48, 3),\t/* 16 */\n  /* 0001 */ PTR(56, 2),\n  /* 0010 */ PTR(60, 1),\n  /* 0011 */ V(1, 5, 4),\n  /* 0100 */ V(5, 1, 4),\n  /* 0101 */ PTR(62, 1),\n  /* 0110 */ PTR(64, 1),\n  /* 0111 */ V(2, 4, 4),\n  /* 1000 */ V(4, 2, 4),\n  /* 1001 */ V(1, 4, 4),\n  /* 1010 */ V(4, 1, 3),\n  /* 1011 */ V(4, 1, 3),\n  /* 1100 */ V(0, 4, 4),\n  /* 1101 */ V(4, 0, 4),\n  /* 1110 */ V(2, 3, 4),\n  /* 1111 */ V(3, 2, 4),\n\n  /* 0001 ... */\n  /* 0000 */ V(1, 3, 4),\t/* 32 */\n  /* 0001 */ V(3, 1, 4),\n  /* 0010 */ V(0, 3, 4),\n  /* 0011 */ V(3, 0, 4),\n  /* 0100 */ V(2, 2, 2),\n  /* 0101 */ V(2, 2, 2),\n  /* 0110 */ V(2, 2, 2),\n  /* 0111 */ V(2, 2, 2),\n  /* 1000 */ V(0, 2, 2),\n  /* 1001 */ V(0, 2, 2),\n  /* 1010 */ V(0, 2, 2),\n  /* 1011 */ V(0, 2, 2),\n  /* 1100 */ V(2, 0, 2),\n  /* 1101 */ V(2, 0, 2),\n  /* 1110 */ V(2, 0, 2),\n  /* 1111 */ V(2, 0, 2),\n\n  /* 0000 0000 ... */\n  /* 000  */ V(5, 5, 3),\t/* 48 */\n  /* 001  */ V(5, 4, 3),\n  /* 010  */ V(4, 5, 2),\n  /* 011  */ V(4, 5, 2),\n  /* 100  */ V(5, 3, 1),\n  /* 101  */ V(5, 3, 1),\n  /* 110  */ V(5, 3, 1),\n  /* 111  */ V(5, 3, 1),\n\n  /* 0000 0001 ... */\n  /* 00   */ V(3, 5, 2),\t/* 56 */\n  /* 01   */ V(4, 4, 2),\n  /* 10   */ V(2, 5, 1),\n  /* 11   */ V(2, 5, 1),\n\n  /* 0000 0010 ... */\n  /* 0    */ V(5, 2, 1),\t/* 60 */\n  /* 1    */ V(0, 5, 1),\n\n  /* 0000 0101 ... */\n  /* 0    */ V(3, 4, 1),\t/* 62 */\n  /* 1    */ V(4, 3, 1),\n\n  /* 0000 0110 ... */\n  /* 0    */ V(5, 0, 1),\t/* 64 */\n  /* 1    */ V(3, 3, 1)\n];\n\nconst hufftab9 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 3),\n  /* 0010 */ PTR(40, 2),\n  /* 0011 */ PTR(44, 2),\n  /* 0100 */ PTR(48, 1),\n  /* 0101 */ V(1, 2, 4),\n  /* 0110 */ V(2, 1, 4),\n  /* 0111 */ V(2, 0, 4),\n  /* 1000 */ V(1, 1, 3),\n  /* 1001 */ V(1, 1, 3),\n  /* 1010 */ V(0, 1, 3),\n  /* 1011 */ V(0, 1, 3),\n  /* 1100 */ V(1, 0, 3),\n  /* 1101 */ V(1, 0, 3),\n  /* 1110 */ V(0, 0, 3),\n  /* 1111 */ V(0, 0, 3),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(50, 1),\t/* 16 */\n  /* 0001 */ V(3, 5, 4),\n  /* 0010 */ V(5, 3, 4),\n  /* 0011 */ PTR(52, 1),\n  /* 0100 */ V(4, 4, 4),\n  /* 0101 */ V(2, 5, 4),\n  /* 0110 */ V(5, 2, 4),\n  /* 0111 */ V(1, 5, 4),\n  /* 1000 */ V(5, 1, 3),\n  /* 1001 */ V(5, 1, 3),\n  /* 1010 */ V(3, 4, 3),\n  /* 1011 */ V(3, 4, 3),\n  /* 1100 */ V(4, 3, 3),\n  /* 1101 */ V(4, 3, 3),\n  /* 1110 */ V(5, 0, 4),\n  /* 1111 */ V(0, 4, 4),\n\n  /* 0001 ... */\n  /* 000  */ V(2, 4, 3),\t/* 32 */\n  /* 001  */ V(4, 2, 3),\n  /* 010  */ V(3, 3, 3),\n  /* 011  */ V(4, 0, 3),\n  /* 100  */ V(1, 4, 2),\n  /* 101  */ V(1, 4, 2),\n  /* 110  */ V(4, 1, 2),\n  /* 111  */ V(4, 1, 2),\n\n  /* 0010 ... */\n  /* 00   */ V(2, 3, 2),\t/* 40 */\n  /* 01   */ V(3, 2, 2),\n  /* 10   */ V(1, 3, 1),\n  /* 11   */ V(1, 3, 1),\n\n  /* 0011 ... */\n  /* 00   */ V(3, 1, 1),\t/* 44 */\n  /* 01   */ V(3, 1, 1),\n  /* 10   */ V(0, 3, 2),\n  /* 11   */ V(3, 0, 2),\n\n  /* 0100 ... */\n  /* 0    */ V(2, 2, 1),\t/* 48 */\n  /* 1    */ V(0, 2, 1),\n\n  /* 0000 0000 ... */\n  /* 0    */ V(5, 5, 1),\t/* 50 */\n  /* 1    */ V(4, 5, 1),\n\n  /* 0000 0011 ... */\n  /* 0    */ V(5, 4, 1),\t/* 52 */\n  /* 1    */ V(0, 5, 1)\n];\n\nconst hufftab10 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 2),\n  /* 0011 */ V(1, 1, 4),\n  /* 0100 */ V(0, 1, 3),\n  /* 0101 */ V(0, 1, 3),\n  /* 0110 */ V(1, 0, 3),\n  /* 0111 */ V(1, 0, 3),\n  /* 1000 */ V(0, 0, 1),\n  /* 1001 */ V(0, 0, 1),\n  /* 1010 */ V(0, 0, 1),\n  /* 1011 */ V(0, 0, 1),\n  /* 1100 */ V(0, 0, 1),\n  /* 1101 */ V(0, 0, 1),\n  /* 1110 */ V(0, 0, 1),\n  /* 1111 */ V(0, 0, 1),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(52, 3),\t/* 16 */\n  /* 0001 */ PTR(60, 2),\n  /* 0010 */ PTR(64, 3),\n  /* 0011 */ PTR(72, 1),\n  /* 0100 */ PTR(74, 2),\n  /* 0101 */ PTR(78, 2),\n  /* 0110 */ PTR(82, 2),\n  /* 0111 */ V(1, 7, 4),\n  /* 1000 */ V(7, 1, 4),\n  /* 1001 */ PTR(86, 1),\n  /* 1010 */ PTR(88, 2),\n  /* 1011 */ PTR(92, 2),\n  /* 1100 */ V(1, 6, 4),\n  /* 1101 */ V(6, 1, 4),\n  /* 1110 */ V(6, 0, 4),\n  /* 1111 */ PTR(96, 1),\n\n  /* 0001 ... */\n  /* 0000 */ PTR(98, 1),\t/* 32 */\n  /* 0001 */ PTR(100, 1),\n  /* 0010 */ V(1, 4, 4),\n  /* 0011 */ V(4, 1, 4),\n  /* 0100 */ V(4, 0, 4),\n  /* 0101 */ V(2, 3, 4),\n  /* 0110 */ V(3, 2, 4),\n  /* 0111 */ V(0, 3, 4),\n  /* 1000 */ V(1, 3, 3),\n  /* 1001 */ V(1, 3, 3),\n  /* 1010 */ V(3, 1, 3),\n  /* 1011 */ V(3, 1, 3),\n  /* 1100 */ V(3, 0, 3),\n  /* 1101 */ V(3, 0, 3),\n  /* 1110 */ V(2, 2, 3),\n  /* 1111 */ V(2, 2, 3),\n\n  /* 0010 ... */\n  /* 00   */ V(1, 2, 2),\t/* 48 */\n  /* 01   */ V(2, 1, 2),\n  /* 10   */ V(0, 2, 2),\n  /* 11   */ V(2, 0, 2),\n\n  /* 0000 0000 ... */\n  /* 000  */ V(7, 7, 3),\t/* 52 */\n  /* 001  */ V(6, 7, 3),\n  /* 010  */ V(7, 6, 3),\n  /* 011  */ V(5, 7, 3),\n  /* 100  */ V(7, 5, 3),\n  /* 101  */ V(6, 6, 3),\n  /* 110  */ V(4, 7, 2),\n  /* 111  */ V(4, 7, 2),\n\n  /* 0000 0001 ... */\n  /* 00   */ V(7, 4, 2),\t/* 60 */\n  /* 01   */ V(5, 6, 2),\n  /* 10   */ V(6, 5, 2),\n  /* 11   */ V(3, 7, 2),\n\n  /* 0000 0010 ... */\n  /* 000  */ V(7, 3, 2),\t/* 64 */\n  /* 001  */ V(7, 3, 2),\n  /* 010  */ V(4, 6, 2),\n  /* 011  */ V(4, 6, 2),\n  /* 100  */ V(5, 5, 3),\n  /* 101  */ V(5, 4, 3),\n  /* 110  */ V(6, 3, 2),\n  /* 111  */ V(6, 3, 2),\n\n  /* 0000 0011 ... */\n  /* 0    */ V(2, 7, 1),\t/* 72 */\n  /* 1    */ V(7, 2, 1),\n\n  /* 0000 0100 ... */\n  /* 00   */ V(6, 4, 2),\t/* 74 */\n  /* 01   */ V(0, 7, 2),\n  /* 10   */ V(7, 0, 1),\n  /* 11   */ V(7, 0, 1),\n\n  /* 0000 0101 ... */\n  /* 00   */ V(6, 2, 1),\t/* 78 */\n  /* 01   */ V(6, 2, 1),\n  /* 10   */ V(4, 5, 2),\n  /* 11   */ V(3, 5, 2),\n\n  /* 0000 0110 ... */\n  /* 00   */ V(0, 6, 1),\t/* 82 */\n  /* 01   */ V(0, 6, 1),\n  /* 10   */ V(5, 3, 2),\n  /* 11   */ V(4, 4, 2),\n\n  /* 0000 1001 ... */\n  /* 0    */ V(3, 6, 1),\t/* 86 */\n  /* 1    */ V(2, 6, 1),\n\n  /* 0000 1010 ... */\n  /* 00   */ V(2, 5, 2),\t/* 88 */\n  /* 01   */ V(5, 2, 2),\n  /* 10   */ V(1, 5, 1),\n  /* 11   */ V(1, 5, 1),\n\n  /* 0000 1011 ... */\n  /* 00   */ V(5, 1, 1),\t/* 92 */\n  /* 01   */ V(5, 1, 1),\n  /* 10   */ V(3, 4, 2),\n  /* 11   */ V(4, 3, 2),\n\n  /* 0000 1111 ... */\n  /* 0    */ V(0, 5, 1),\t/* 96 */\n  /* 1    */ V(5, 0, 1),\n\n  /* 0001 0000 ... */\n  /* 0    */ V(2, 4, 1),\t/* 98 */\n  /* 1    */ V(4, 2, 1),\n\n  /* 0001 0001 ... */\n  /* 0    */ V(3, 3, 1),\t/* 100 */\n  /* 1    */ V(0, 4, 1)\n];\n\nconst hufftab11 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ PTR(64, 3),\n  /* 0100 */ V(1, 2, 4),\n  /* 0101 */ PTR(72, 1),\n  /* 0110 */ V(1, 1, 3),\n  /* 0111 */ V(1, 1, 3),\n  /* 1000 */ V(0, 1, 3),\n  /* 1001 */ V(0, 1, 3),\n  /* 1010 */ V(1, 0, 3),\n  /* 1011 */ V(1, 0, 3),\n  /* 1100 */ V(0, 0, 2),\n  /* 1101 */ V(0, 0, 2),\n  /* 1110 */ V(0, 0, 2),\n  /* 1111 */ V(0, 0, 2),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(74, 2),\t/* 16 */\n  /* 0001 */ PTR(78, 3),\n  /* 0010 */ PTR(86, 2),\n  /* 0011 */ PTR(90, 1),\n  /* 0100 */ PTR(92, 2),\n  /* 0101 */ V(2, 7, 4),\n  /* 0110 */ V(7, 2, 4),\n  /* 0111 */ PTR(96, 1),\n  /* 1000 */ V(7, 1, 3),\n  /* 1001 */ V(7, 1, 3),\n  /* 1010 */ V(1, 7, 4),\n  /* 1011 */ V(7, 0, 4),\n  /* 1100 */ V(3, 6, 4),\n  /* 1101 */ V(6, 3, 4),\n  /* 1110 */ V(6, 0, 4),\n  /* 1111 */ PTR(98, 1),\n\n  /* 0001 ... */\n  /* 0000 */ PTR(100, 1),\t/* 32 */\n  /* 0001 */ V(1, 5, 4),\n  /* 0010 */ V(6, 2, 3),\n  /* 0011 */ V(6, 2, 3),\n  /* 0100 */ V(2, 6, 4),\n  /* 0101 */ V(0, 6, 4),\n  /* 0110 */ V(1, 6, 3),\n  /* 0111 */ V(1, 6, 3),\n  /* 1000 */ V(6, 1, 3),\n  /* 1001 */ V(6, 1, 3),\n  /* 1010 */ V(5, 1, 4),\n  /* 1011 */ V(3, 4, 4),\n  /* 1100 */ V(5, 0, 4),\n  /* 1101 */ PTR(102, 1),\n  /* 1110 */ V(2, 4, 4),\n  /* 1111 */ V(4, 2, 4),\n\n  /* 0010 ... */\n  /* 0000 */ V(1, 4, 4),\t/* 48 */\n  /* 0001 */ V(4, 1, 4),\n  /* 0010 */ V(0, 4, 4),\n  /* 0011 */ V(4, 0, 4),\n  /* 0100 */ V(2, 3, 3),\n  /* 0101 */ V(2, 3, 3),\n  /* 0110 */ V(3, 2, 3),\n  /* 0111 */ V(3, 2, 3),\n  /* 1000 */ V(1, 3, 2),\n  /* 1001 */ V(1, 3, 2),\n  /* 1010 */ V(1, 3, 2),\n  /* 1011 */ V(1, 3, 2),\n  /* 1100 */ V(3, 1, 2),\n  /* 1101 */ V(3, 1, 2),\n  /* 1110 */ V(3, 1, 2),\n  /* 1111 */ V(3, 1, 2),\n\n  /* 0011 ... */\n  /* 000  */ V(0, 3, 3),\t/* 64 */\n  /* 001  */ V(3, 0, 3),\n  /* 010  */ V(2, 2, 2),\n  /* 011  */ V(2, 2, 2),\n  /* 100  */ V(2, 1, 1),\n  /* 101  */ V(2, 1, 1),\n  /* 110  */ V(2, 1, 1),\n  /* 111  */ V(2, 1, 1),\n\n  /* 0101 ... */\n  /* 0    */ V(0, 2, 1),\t/* 72 */\n  /* 1    */ V(2, 0, 1),\n\n  /* 0000 0000 ... */\n  /* 00   */ V(7, 7, 2),\t/* 74 */\n  /* 01   */ V(6, 7, 2),\n  /* 10   */ V(7, 6, 2),\n  /* 11   */ V(7, 5, 2),\n\n  /* 0000 0001 ... */\n  /* 000  */ V(6, 6, 2),\t/* 78 */\n  /* 001  */ V(6, 6, 2),\n  /* 010  */ V(4, 7, 2),\n  /* 011  */ V(4, 7, 2),\n  /* 100  */ V(7, 4, 2),\n  /* 101  */ V(7, 4, 2),\n  /* 110  */ V(5, 7, 3),\n  /* 111  */ V(5, 5, 3),\n\n  /* 0000 0010 ... */\n  /* 00   */ V(5, 6, 2),\t/* 86 */\n  /* 01   */ V(6, 5, 2),\n  /* 10   */ V(3, 7, 1),\n  /* 11   */ V(3, 7, 1),\n\n  /* 0000 0011 ... */\n  /* 0    */ V(7, 3, 1),\t/* 90 */\n  /* 1    */ V(4, 6, 1),\n\n  /* 0000 0100 ... */\n  /* 00   */ V(4, 5, 2),\t/* 92 */\n  /* 01   */ V(5, 4, 2),\n  /* 10   */ V(3, 5, 2),\n  /* 11   */ V(5, 3, 2),\n\n  /* 0000 0111 ... */\n  /* 0    */ V(6, 4, 1),\t/* 96 */\n  /* 1    */ V(0, 7, 1),\n\n  /* 0000 1111 ... */\n  /* 0    */ V(4, 4, 1),\t/* 98 */\n  /* 1    */ V(2, 5, 1),\n\n  /* 0001 0000 ... */\n  /* 0    */ V(5, 2, 1),\t/* 100 */\n  /* 1    */ V(0, 5, 1),\n\n  /* 0001 1101 ... */\n  /* 0    */ V(4, 3, 1),\t/* 102 */\n  /* 1    */ V(3, 3, 1)\n];\n\nconst hufftab12 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ PTR(64, 2),\n  /* 0100 */ PTR(68, 3),\n  /* 0101 */ PTR(76, 1),\n  /* 0110 */ V(1, 2, 4),\n  /* 0111 */ V(2, 1, 4),\n  /* 1000 */ PTR(78, 1),\n  /* 1001 */ V(0, 0, 4),\n  /* 1010 */ V(1, 1, 3),\n  /* 1011 */ V(1, 1, 3),\n  /* 1100 */ V(0, 1, 3),\n  /* 1101 */ V(0, 1, 3),\n  /* 1110 */ V(1, 0, 3),\n  /* 1111 */ V(1, 0, 3),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(80, 2),\t/* 16 */\n  /* 0001 */ PTR(84, 1),\n  /* 0010 */ PTR(86, 1),\n  /* 0011 */ PTR(88, 1),\n  /* 0100 */ V(5, 6, 4),\n  /* 0101 */ V(3, 7, 4),\n  /* 0110 */ PTR(90, 1),\n  /* 0111 */ V(2, 7, 4),\n  /* 1000 */ V(7, 2, 4),\n  /* 1001 */ V(4, 6, 4),\n  /* 1010 */ V(6, 4, 4),\n  /* 1011 */ V(1, 7, 4),\n  /* 1100 */ V(7, 1, 4),\n  /* 1101 */ PTR(92, 1),\n  /* 1110 */ V(3, 6, 4),\n  /* 1111 */ V(6, 3, 4),\n\n  /* 0001 ... */\n  /* 0000 */ V(4, 5, 4),\t/* 32 */\n  /* 0001 */ V(5, 4, 4),\n  /* 0010 */ V(4, 4, 4),\n  /* 0011 */ PTR(94, 1),\n  /* 0100 */ V(2, 6, 3),\n  /* 0101 */ V(2, 6, 3),\n  /* 0110 */ V(6, 2, 3),\n  /* 0111 */ V(6, 2, 3),\n  /* 1000 */ V(6, 1, 3),\n  /* 1001 */ V(6, 1, 3),\n  /* 1010 */ V(1, 6, 4),\n  /* 1011 */ V(6, 0, 4),\n  /* 1100 */ V(3, 5, 4),\n  /* 1101 */ V(5, 3, 4),\n  /* 1110 */ V(2, 5, 4),\n  /* 1111 */ V(5, 2, 4),\n\n  /* 0010 ... */\n  /* 0000 */ V(1, 5, 3),\t/* 48 */\n  /* 0001 */ V(1, 5, 3),\n  /* 0010 */ V(5, 1, 3),\n  /* 0011 */ V(5, 1, 3),\n  /* 0100 */ V(3, 4, 3),\n  /* 0101 */ V(3, 4, 3),\n  /* 0110 */ V(4, 3, 3),\n  /* 0111 */ V(4, 3, 3),\n  /* 1000 */ V(5, 0, 4),\n  /* 1001 */ V(0, 4, 4),\n  /* 1010 */ V(2, 4, 3),\n  /* 1011 */ V(2, 4, 3),\n  /* 1100 */ V(4, 2, 3),\n  /* 1101 */ V(4, 2, 3),\n  /* 1110 */ V(1, 4, 3),\n  /* 1111 */ V(1, 4, 3),\n\n  /* 0011 ... */\n  /* 00   */ V(3, 3, 2),\t/* 64 */\n  /* 01   */ V(4, 1, 2),\n  /* 10   */ V(2, 3, 2),\n  /* 11   */ V(3, 2, 2),\n\n  /* 0100 ... */\n  /* 000  */ V(4, 0, 3),\t/* 68 */\n  /* 001  */ V(0, 3, 3),\n  /* 010  */ V(3, 0, 2),\n  /* 011  */ V(3, 0, 2),\n  /* 100  */ V(1, 3, 1),\n  /* 101  */ V(1, 3, 1),\n  /* 110  */ V(1, 3, 1),\n  /* 111  */ V(1, 3, 1),\n\n  /* 0101 ... */\n  /* 0    */ V(3, 1, 1),\t/* 76 */\n  /* 1    */ V(2, 2, 1),\n\n  /* 1000 ... */\n  /* 0    */ V(0, 2, 1),\t/* 78 */\n  /* 1    */ V(2, 0, 1),\n\n  /* 0000 0000 ... */\n  /* 00   */ V(7, 7, 2),\t/* 80 */\n  /* 01   */ V(6, 7, 2),\n  /* 10   */ V(7, 6, 1),\n  /* 11   */ V(7, 6, 1),\n\n  /* 0000 0001 ... */\n  /* 0    */ V(5, 7, 1),\t/* 84 */\n  /* 1    */ V(7, 5, 1),\n\n  /* 0000 0010 ... */\n  /* 0    */ V(6, 6, 1),\t/* 86 */\n  /* 1    */ V(4, 7, 1),\n\n  /* 0000 0011 ... */\n  /* 0    */ V(7, 4, 1),\t/* 88 */\n  /* 1    */ V(6, 5, 1),\n\n  /* 0000 0110 ... */\n  /* 0    */ V(7, 3, 1),\t/* 90 */\n  /* 1    */ V(5, 5, 1),\n\n  /* 0000 1101 ... */\n  /* 0    */ V(0, 7, 1),\t/* 92 */\n  /* 1    */ V(7, 0, 1),\n\n  /* 0001 0011 ... */\n  /* 0    */ V(0, 6, 1),\t/* 94 */\n  /* 1    */ V(0, 5, 1)\n];\n\nconst hufftab13 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ PTR(64, 2),\n  /* 0100 */ V(1, 1, 4),\n  /* 0101 */ V(0, 1, 4),\n  /* 0110 */ V(1, 0, 3),\n  /* 0111 */ V(1, 0, 3),\n  /* 1000 */ V(0, 0, 1),\n  /* 1001 */ V(0, 0, 1),\n  /* 1010 */ V(0, 0, 1),\n  /* 1011 */ V(0, 0, 1),\n  /* 1100 */ V(0, 0, 1),\n  /* 1101 */ V(0, 0, 1),\n  /* 1110 */ V(0, 0, 1),\n  /* 1111 */ V(0, 0, 1),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(68, 4),\t/* 16 */\n  /* 0001 */ PTR(84, 4),\n  /* 0010 */ PTR(100, 4),\n  /* 0011 */ PTR(116, 4),\n  /* 0100 */ PTR(132, 4),\n  /* 0101 */ PTR(148, 4),\n  /* 0110 */ PTR(164, 3),\n  /* 0111 */ PTR(172, 3),\n  /* 1000 */ PTR(180, 3),\n  /* 1001 */ PTR(188, 3),\n  /* 1010 */ PTR(196, 3),\n  /* 1011 */ PTR(204, 3),\n  /* 1100 */ PTR(212, 1),\n  /* 1101 */ PTR(214, 2),\n  /* 1110 */ PTR(218, 3),\n  /* 1111 */ PTR(226, 1),\n\n  /* 0001 ... */\n  /* 0000 */ PTR(228, 2),\t/* 32 */\n  /* 0001 */ PTR(232, 2),\n  /* 0010 */ PTR(236, 2),\n  /* 0011 */ PTR(240, 2),\n  /* 0100 */ V(8, 1, 4),\n  /* 0101 */ PTR(244, 1),\n  /* 0110 */ PTR(246, 1),\n  /* 0111 */ PTR(248, 1),\n  /* 1000 */ PTR(250, 2),\n  /* 1001 */ PTR(254, 1),\n  /* 1010 */ V(1, 5, 4),\n  /* 1011 */ V(5, 1, 4),\n  /* 1100 */ PTR(256, 1),\n  /* 1101 */ PTR(258, 1),\n  /* 1110 */ PTR(260, 1),\n  /* 1111 */ V(1, 4, 4),\n\n  /* 0010 ... */\n  /* 0000 */ V(4, 1, 3),\t/* 48 */\n  /* 0001 */ V(4, 1, 3),\n  /* 0010 */ V(0, 4, 4),\n  /* 0011 */ V(4, 0, 4),\n  /* 0100 */ V(2, 3, 4),\n  /* 0101 */ V(3, 2, 4),\n  /* 0110 */ V(1, 3, 3),\n  /* 0111 */ V(1, 3, 3),\n  /* 1000 */ V(3, 1, 3),\n  /* 1001 */ V(3, 1, 3),\n  /* 1010 */ V(0, 3, 3),\n  /* 1011 */ V(0, 3, 3),\n  /* 1100 */ V(3, 0, 3),\n  /* 1101 */ V(3, 0, 3),\n  /* 1110 */ V(2, 2, 3),\n  /* 1111 */ V(2, 2, 3),\n\n  /* 0011 ... */\n  /* 00   */ V(1, 2, 2),\t/* 64 */\n  /* 01   */ V(2, 1, 2),\n  /* 10   */ V(0, 2, 2),\n  /* 11   */ V(2, 0, 2),\n\n  /* 0000 0000 ... */\n  /* 0000 */ PTR(262, 4),\t/* 68 */\n  /* 0001 */ PTR(278, 4),\n  /* 0010 */ PTR(294, 4),\n  /* 0011 */ PTR(310, 3),\n  /* 0100 */ PTR(318, 2),\n  /* 0101 */ PTR(322, 2),\n  /* 0110 */ PTR(326, 3),\n  /* 0111 */ PTR(334, 2),\n  /* 1000 */ PTR(338, 1),\n  /* 1001 */ PTR(340, 2),\n  /* 1010 */ PTR(344, 2),\n  /* 1011 */ PTR(348, 2),\n  /* 1100 */ PTR(352, 2),\n  /* 1101 */ PTR(356, 2),\n  /* 1110 */ V(1, 15, 4),\n  /* 1111 */ V(15, 1, 4),\n\n  /* 0000 0001 ... */\n  /* 0000 */ V(15, 0, 4),\t/* 84 */\n  /* 0001 */ PTR(360, 1),\n  /* 0010 */ PTR(362, 1),\n  /* 0011 */ PTR(364, 1),\n  /* 0100 */ V(14, 2, 4),\n  /* 0101 */ PTR(366, 1),\n  /* 0110 */ V(1, 14, 4),\n  /* 0111 */ V(14, 1, 4),\n  /* 1000 */ PTR(368, 1),\n  /* 1001 */ PTR(370, 1),\n  /* 1010 */ PTR(372, 1),\n  /* 1011 */ PTR(374, 1),\n  /* 1100 */ PTR(376, 1),\n  /* 1101 */ PTR(378, 1),\n  /* 1110 */ V(12, 6, 4),\n  /* 1111 */ V(3, 13, 4),\n\n  /* 0000 0010 ... */\n  /* 0000 */ PTR(380, 1),\t/* 100 */\n  /* 0001 */ V(2, 13, 4),\n  /* 0010 */ V(13, 2, 4),\n  /* 0011 */ V(1, 13, 4),\n  /* 0100 */ V(11, 7, 4),\n  /* 0101 */ PTR(382, 1),\n  /* 0110 */ PTR(384, 1),\n  /* 0111 */ V(12, 3, 4),\n  /* 1000 */ PTR(386, 1),\n  /* 1001 */ V(4, 11, 4),\n  /* 1010 */ V(13, 1, 3),\n  /* 1011 */ V(13, 1, 3),\n  /* 1100 */ V(0, 13, 4),\n  /* 1101 */ V(13, 0, 4),\n  /* 1110 */ V(8, 10, 4),\n  /* 1111 */ V(10, 8, 4),\n\n  /* 0000 0011 ... */\n  /* 0000 */ V(4, 12, 4),\t/* 116 */\n  /* 0001 */ V(12, 4, 4),\n  /* 0010 */ V(6, 11, 4),\n  /* 0011 */ V(11, 6, 4),\n  /* 0100 */ V(3, 12, 3),\n  /* 0101 */ V(3, 12, 3),\n  /* 0110 */ V(2, 12, 3),\n  /* 0111 */ V(2, 12, 3),\n  /* 1000 */ V(12, 2, 3),\n  /* 1001 */ V(12, 2, 3),\n  /* 1010 */ V(5, 11, 3),\n  /* 1011 */ V(5, 11, 3),\n  /* 1100 */ V(11, 5, 4),\n  /* 1101 */ V(8, 9, 4),\n  /* 1110 */ V(1, 12, 3),\n  /* 1111 */ V(1, 12, 3),\n\n  /* 0000 0100 ... */\n  /* 0000 */ V(12, 1, 3),\t/* 132 */\n  /* 0001 */ V(12, 1, 3),\n  /* 0010 */ V(9, 8, 4),\n  /* 0011 */ V(0, 12, 4),\n  /* 0100 */ V(12, 0, 3),\n  /* 0101 */ V(12, 0, 3),\n  /* 0110 */ V(11, 4, 4),\n  /* 0111 */ V(6, 10, 4),\n  /* 1000 */ V(10, 6, 4),\n  /* 1001 */ V(7, 9, 4),\n  /* 1010 */ V(3, 11, 3),\n  /* 1011 */ V(3, 11, 3),\n  /* 1100 */ V(11, 3, 3),\n  /* 1101 */ V(11, 3, 3),\n  /* 1110 */ V(8, 8, 4),\n  /* 1111 */ V(5, 10, 4),\n\n  /* 0000 0101 ... */\n  /* 0000 */ V(2, 11, 3),\t/* 148 */\n  /* 0001 */ V(2, 11, 3),\n  /* 0010 */ V(10, 5, 4),\n  /* 0011 */ V(6, 9, 4),\n  /* 0100 */ V(10, 4, 3),\n  /* 0101 */ V(10, 4, 3),\n  /* 0110 */ V(7, 8, 4),\n  /* 0111 */ V(8, 7, 4),\n  /* 1000 */ V(9, 4, 3),\n  /* 1001 */ V(9, 4, 3),\n  /* 1010 */ V(7, 7, 4),\n  /* 1011 */ V(7, 6, 4),\n  /* 1100 */ V(11, 2, 2),\n  /* 1101 */ V(11, 2, 2),\n  /* 1110 */ V(11, 2, 2),\n  /* 1111 */ V(11, 2, 2),\n\n  /* 0000 0110 ... */\n  /* 000  */ V(1, 11, 2),\t/* 164 */\n  /* 001  */ V(1, 11, 2),\n  /* 010  */ V(11, 1, 2),\n  /* 011  */ V(11, 1, 2),\n  /* 100  */ V(0, 11, 3),\n  /* 101  */ V(11, 0, 3),\n  /* 110  */ V(9, 6, 3),\n  /* 111  */ V(4, 10, 3),\n\n  /* 0000 0111 ... */\n  /* 000  */ V(3, 10, 3),\t/* 172 */\n  /* 001  */ V(10, 3, 3),\n  /* 010  */ V(5, 9, 3),\n  /* 011  */ V(9, 5, 3),\n  /* 100  */ V(2, 10, 2),\n  /* 101  */ V(2, 10, 2),\n  /* 110  */ V(10, 2, 2),\n  /* 111  */ V(10, 2, 2),\n\n  /* 0000 1000 ... */\n  /* 000  */ V(1, 10, 2),\t/* 180 */\n  /* 001  */ V(1, 10, 2),\n  /* 010  */ V(10, 1, 2),\n  /* 011  */ V(10, 1, 2),\n  /* 100  */ V(0, 10, 3),\n  /* 101  */ V(6, 8, 3),\n  /* 110  */ V(10, 0, 2),\n  /* 111  */ V(10, 0, 2),\n\n  /* 0000 1001 ... */\n  /* 000  */ V(8, 6, 3),\t/* 188 */\n  /* 001  */ V(4, 9, 3),\n  /* 010  */ V(9, 3, 2),\n  /* 011  */ V(9, 3, 2),\n  /* 100  */ V(3, 9, 3),\n  /* 101  */ V(5, 8, 3),\n  /* 110  */ V(8, 5, 3),\n  /* 111  */ V(6, 7, 3),\n\n  /* 0000 1010 ... */\n  /* 000  */ V(2, 9, 2),\t/* 196 */\n  /* 001  */ V(2, 9, 2),\n  /* 010  */ V(9, 2, 2),\n  /* 011  */ V(9, 2, 2),\n  /* 100  */ V(5, 7, 3),\n  /* 101  */ V(7, 5, 3),\n  /* 110  */ V(3, 8, 2),\n  /* 111  */ V(3, 8, 2),\n\n  /* 0000 1011 ... */\n  /* 000  */ V(8, 3, 2),\t/* 204 */\n  /* 001  */ V(8, 3, 2),\n  /* 010  */ V(6, 6, 3),\n  /* 011  */ V(4, 7, 3),\n  /* 100  */ V(7, 4, 3),\n  /* 101  */ V(5, 6, 3),\n  /* 110  */ V(6, 5, 3),\n  /* 111  */ V(7, 3, 3),\n\n  /* 0000 1100 ... */\n  /* 0    */ V(1, 9, 1),\t/* 212 */\n  /* 1    */ V(9, 1, 1),\n\n  /* 0000 1101 ... */\n  /* 00   */ V(0, 9, 2),\t/* 214 */\n  /* 01   */ V(9, 0, 2),\n  /* 10   */ V(4, 8, 2),\n  /* 11   */ V(8, 4, 2),\n\n  /* 0000 1110 ... */\n  /* 000  */ V(7, 2, 2),\t/* 218 */\n  /* 001  */ V(7, 2, 2),\n  /* 010  */ V(4, 6, 3),\n  /* 011  */ V(6, 4, 3),\n  /* 100  */ V(2, 8, 1),\n  /* 101  */ V(2, 8, 1),\n  /* 110  */ V(2, 8, 1),\n  /* 111  */ V(2, 8, 1),\n\n  /* 0000 1111 ... */\n  /* 0    */ V(8, 2, 1),\t/* 226 */\n  /* 1    */ V(1, 8, 1),\n\n  /* 0001 0000 ... */\n  /* 00   */ V(3, 7, 2),\t/* 228 */\n  /* 01   */ V(2, 7, 2),\n  /* 10   */ V(1, 7, 1),\n  /* 11   */ V(1, 7, 1),\n\n  /* 0001 0001 ... */\n  /* 00   */ V(7, 1, 1),\t/* 232 */\n  /* 01   */ V(7, 1, 1),\n  /* 10   */ V(5, 5, 2),\n  /* 11   */ V(0, 7, 2),\n\n  /* 0001 0010 ... */\n  /* 00   */ V(7, 0, 2),\t/* 236 */\n  /* 01   */ V(3, 6, 2),\n  /* 10   */ V(6, 3, 2),\n  /* 11   */ V(4, 5, 2),\n\n  /* 0001 0011 ... */\n  /* 00   */ V(5, 4, 2),\t/* 240 */\n  /* 01   */ V(2, 6, 2),\n  /* 10   */ V(6, 2, 2),\n  /* 11   */ V(3, 5, 2),\n\n  /* 0001 0101 ... */\n  /* 0    */ V(0, 8, 1),\t/* 244 */\n  /* 1    */ V(8, 0, 1),\n\n  /* 0001 0110 ... */\n  /* 0    */ V(1, 6, 1),\t/* 246 */\n  /* 1    */ V(6, 1, 1),\n\n  /* 0001 0111 ... */\n  /* 0    */ V(0, 6, 1),\t/* 248 */\n  /* 1    */ V(6, 0, 1),\n\n  /* 0001 1000 ... */\n  /* 00   */ V(5, 3, 2),\t/* 250 */\n  /* 01   */ V(4, 4, 2),\n  /* 10   */ V(2, 5, 1),\n  /* 11   */ V(2, 5, 1),\n\n  /* 0001 1001 ... */\n  /* 0    */ V(5, 2, 1),\t/* 254 */\n  /* 1    */ V(0, 5, 1),\n\n  /* 0001 1100 ... */\n  /* 0    */ V(3, 4, 1),\t/* 256 */\n  /* 1    */ V(4, 3, 1),\n\n  /* 0001 1101 ... */\n  /* 0    */ V(5, 0, 1),\t/* 258 */\n  /* 1    */ V(2, 4, 1),\n\n  /* 0001 1110 ... */\n  /* 0    */ V(4, 2, 1),\t/* 260 */\n  /* 1    */ V(3, 3, 1),\n\n  /* 0000 0000 0000 ... */\n  /* 0000 */ PTR(388, 3),\t/* 262 */\n  /* 0001 */ V(15, 15, 4),\n  /* 0010 */ V(14, 15, 4),\n  /* 0011 */ V(13, 15, 4),\n  /* 0100 */ V(14, 14, 4),\n  /* 0101 */ V(12, 15, 4),\n  /* 0110 */ V(13, 14, 4),\n  /* 0111 */ V(11, 15, 4),\n  /* 1000 */ V(15, 11, 4),\n  /* 1001 */ V(12, 14, 4),\n  /* 1010 */ V(13, 12, 4),\n  /* 1011 */ PTR(396, 1),\n  /* 1100 */ V(14, 12, 3),\n  /* 1101 */ V(14, 12, 3),\n  /* 1110 */ V(13, 13, 3),\n  /* 1111 */ V(13, 13, 3),\n\n  /* 0000 0000 0001 ... */\n  /* 0000 */ V(15, 10, 4),\t/* 278 */\n  /* 0001 */ V(12, 13, 4),\n  /* 0010 */ V(11, 14, 3),\n  /* 0011 */ V(11, 14, 3),\n  /* 0100 */ V(14, 11, 3),\n  /* 0101 */ V(14, 11, 3),\n  /* 0110 */ V(9, 15, 3),\n  /* 0111 */ V(9, 15, 3),\n  /* 1000 */ V(15, 9, 3),\n  /* 1001 */ V(15, 9, 3),\n  /* 1010 */ V(14, 10, 3),\n  /* 1011 */ V(14, 10, 3),\n  /* 1100 */ V(11, 13, 3),\n  /* 1101 */ V(11, 13, 3),\n  /* 1110 */ V(13, 11, 3),\n  /* 1111 */ V(13, 11, 3),\n\n  /* 0000 0000 0010 ... */\n  /* 0000 */ V(8, 15, 3),\t/* 294 */\n  /* 0001 */ V(8, 15, 3),\n  /* 0010 */ V(15, 8, 3),\n  /* 0011 */ V(15, 8, 3),\n  /* 0100 */ V(12, 12, 3),\n  /* 0101 */ V(12, 12, 3),\n  /* 0110 */ V(10, 14, 4),\n  /* 0111 */ V(9, 14, 4),\n  /* 1000 */ V(8, 14, 3),\n  /* 1001 */ V(8, 14, 3),\n  /* 1010 */ V(7, 15, 4),\n  /* 1011 */ V(7, 14, 4),\n  /* 1100 */ V(15, 7, 2),\n  /* 1101 */ V(15, 7, 2),\n  /* 1110 */ V(15, 7, 2),\n  /* 1111 */ V(15, 7, 2),\n\n  /* 0000 0000 0011 ... */\n  /* 000  */ V(13, 10, 2),\t/* 310 */\n  /* 001  */ V(13, 10, 2),\n  /* 010  */ V(10, 13, 3),\n  /* 011  */ V(11, 12, 3),\n  /* 100  */ V(12, 11, 3),\n  /* 101  */ V(15, 6, 3),\n  /* 110  */ V(6, 15, 2),\n  /* 111  */ V(6, 15, 2),\n\n  /* 0000 0000 0100 ... */\n  /* 00   */ V(14, 8, 2),\t/* 318 */\n  /* 01   */ V(5, 15, 2),\n  /* 10   */ V(9, 13, 2),\n  /* 11   */ V(13, 9, 2),\n\n  /* 0000 0000 0101 ... */\n  /* 00   */ V(15, 5, 2),\t/* 322 */\n  /* 01   */ V(14, 7, 2),\n  /* 10   */ V(10, 12, 2),\n  /* 11   */ V(11, 11, 2),\n\n  /* 0000 0000 0110 ... */\n  /* 000  */ V(4, 15, 2),\t/* 326 */\n  /* 001  */ V(4, 15, 2),\n  /* 010  */ V(15, 4, 2),\n  /* 011  */ V(15, 4, 2),\n  /* 100  */ V(12, 10, 3),\n  /* 101  */ V(14, 6, 3),\n  /* 110  */ V(15, 3, 2),\n  /* 111  */ V(15, 3, 2),\n\n  /* 0000 0000 0111 ... */\n  /* 00   */ V(3, 15, 1),\t/* 334 */\n  /* 01   */ V(3, 15, 1),\n  /* 10   */ V(8, 13, 2),\n  /* 11   */ V(13, 8, 2),\n\n  /* 0000 0000 1000 ... */\n  /* 0    */ V(2, 15, 1),\t/* 338 */\n  /* 1    */ V(15, 2, 1),\n\n  /* 0000 0000 1001 ... */\n  /* 00   */ V(6, 14, 2),\t/* 340 */\n  /* 01   */ V(9, 12, 2),\n  /* 10   */ V(0, 15, 1),\n  /* 11   */ V(0, 15, 1),\n\n  /* 0000 0000 1010 ... */\n  /* 00   */ V(12, 9, 2),\t/* 344 */\n  /* 01   */ V(5, 14, 2),\n  /* 10   */ V(10, 11, 1),\n  /* 11   */ V(10, 11, 1),\n\n  /* 0000 0000 1011 ... */\n  /* 00   */ V(7, 13, 2),\t/* 348 */\n  /* 01   */ V(13, 7, 2),\n  /* 10   */ V(4, 14, 1),\n  /* 11   */ V(4, 14, 1),\n\n  /* 0000 0000 1100 ... */\n  /* 00   */ V(12, 8, 2),\t/* 352 */\n  /* 01   */ V(13, 6, 2),\n  /* 10   */ V(3, 14, 1),\n  /* 11   */ V(3, 14, 1),\n\n  /* 0000 0000 1101 ... */\n  /* 00   */ V(11, 9, 1),\t/* 356 */\n  /* 01   */ V(11, 9, 1),\n  /* 10   */ V(9, 11, 2),\n  /* 11   */ V(10, 10, 2),\n\n  /* 0000 0001 0001 ... */\n  /* 0    */ V(11, 10, 1),\t/* 360 */\n  /* 1    */ V(14, 5, 1),\n\n  /* 0000 0001 0010 ... */\n  /* 0    */ V(14, 4, 1),\t/* 362 */\n  /* 1    */ V(8, 12, 1),\n\n  /* 0000 0001 0011 ... */\n  /* 0    */ V(6, 13, 1),\t/* 364 */\n  /* 1    */ V(14, 3, 1),\n\n  /* 0000 0001 0101 ... */\n  /* 0    */ V(2, 14, 1),\t/* 366 */\n  /* 1    */ V(0, 14, 1),\n\n  /* 0000 0001 1000 ... */\n  /* 0    */ V(14, 0, 1),\t/* 368 */\n  /* 1    */ V(5, 13, 1),\n\n  /* 0000 0001 1001 ... */\n  /* 0    */ V(13, 5, 1),\t/* 370 */\n  /* 1    */ V(7, 12, 1),\n\n  /* 0000 0001 1010 ... */\n  /* 0    */ V(12, 7, 1),\t/* 372 */\n  /* 1    */ V(4, 13, 1),\n\n  /* 0000 0001 1011 ... */\n  /* 0    */ V(8, 11, 1),\t/* 374 */\n  /* 1    */ V(11, 8, 1),\n\n  /* 0000 0001 1100 ... */\n  /* 0    */ V(13, 4, 1),\t/* 376 */\n  /* 1    */ V(9, 10, 1),\n\n  /* 0000 0001 1101 ... */\n  /* 0    */ V(10, 9, 1),\t/* 378 */\n  /* 1    */ V(6, 12, 1),\n\n  /* 0000 0010 0000 ... */\n  /* 0    */ V(13, 3, 1),\t/* 380 */\n  /* 1    */ V(7, 11, 1),\n\n  /* 0000 0010 0101 ... */\n  /* 0    */ V(5, 12, 1),\t/* 382 */\n  /* 1    */ V(12, 5, 1),\n\n  /* 0000 0010 0110 ... */\n  /* 0    */ V(9, 9, 1),\t/* 384 */\n  /* 1    */ V(7, 10, 1),\n\n  /* 0000 0010 1000 ... */\n  /* 0    */ V(10, 7, 1),\t/* 386 */\n  /* 1    */ V(9, 7, 1),\n\n  /* 0000 0000 0000 0000 ... */\n  /* 000  */ V(15, 14, 3),\t/* 388 */\n  /* 001  */ V(15, 12, 3),\n  /* 010  */ V(15, 13, 2),\n  /* 011  */ V(15, 13, 2),\n  /* 100  */ V(14, 13, 1),\n  /* 101  */ V(14, 13, 1),\n  /* 110  */ V(14, 13, 1),\n  /* 111  */ V(14, 13, 1),\n\n  /* 0000 0000 0000 1011 ... */\n  /* 0    */ V(10, 15, 1),\t/* 396 */\n  /* 1    */ V(14, 9, 1)\n];\n\nconst hufftab15 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ PTR(64, 4),\n  /* 0100 */ PTR(80, 4),\n  /* 0101 */ PTR(96, 3),\n  /* 0110 */ PTR(104, 3),\n  /* 0111 */ PTR(112, 2),\n  /* 1000 */ PTR(116, 1),\n  /* 1001 */ PTR(118, 1),\n  /* 1010 */ V(1, 1, 3),\n  /* 1011 */ V(1, 1, 3),\n  /* 1100 */ V(0, 1, 4),\n  /* 1101 */ V(1, 0, 4),\n  /* 1110 */ V(0, 0, 3),\n  /* 1111 */ V(0, 0, 3),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(120, 4),\t/* 16 */\n  /* 0001 */ PTR(136, 4),\n  /* 0010 */ PTR(152, 4),\n  /* 0011 */ PTR(168, 4),\n  /* 0100 */ PTR(184, 4),\n  /* 0101 */ PTR(200, 3),\n  /* 0110 */ PTR(208, 3),\n  /* 0111 */ PTR(216, 4),\n  /* 1000 */ PTR(232, 3),\n  /* 1001 */ PTR(240, 3),\n  /* 1010 */ PTR(248, 3),\n  /* 1011 */ PTR(256, 3),\n  /* 1100 */ PTR(264, 2),\n  /* 1101 */ PTR(268, 3),\n  /* 1110 */ PTR(276, 3),\n  /* 1111 */ PTR(284, 2),\n\n  /* 0001 ... */\n  /* 0000 */ PTR(288, 2),\t/* 32 */\n  /* 0001 */ PTR(292, 2),\n  /* 0010 */ PTR(296, 2),\n  /* 0011 */ PTR(300, 2),\n  /* 0100 */ PTR(304, 2),\n  /* 0101 */ PTR(308, 2),\n  /* 0110 */ PTR(312, 2),\n  /* 0111 */ PTR(316, 2),\n  /* 1000 */ PTR(320, 1),\n  /* 1001 */ PTR(322, 1),\n  /* 1010 */ PTR(324, 1),\n  /* 1011 */ PTR(326, 2),\n  /* 1100 */ PTR(330, 1),\n  /* 1101 */ PTR(332, 1),\n  /* 1110 */ PTR(334, 2),\n  /* 1111 */ PTR(338, 1),\n\n  /* 0010 ... */\n  /* 0000 */ PTR(340, 1),\t/* 48 */\n  /* 0001 */ PTR(342, 1),\n  /* 0010 */ V(9, 1, 4),\n  /* 0011 */ PTR(344, 1),\n  /* 0100 */ PTR(346, 1),\n  /* 0101 */ PTR(348, 1),\n  /* 0110 */ PTR(350, 1),\n  /* 0111 */ PTR(352, 1),\n  /* 1000 */ V(2, 8, 4),\n  /* 1001 */ V(8, 2, 4),\n  /* 1010 */ V(1, 8, 4),\n  /* 1011 */ V(8, 1, 4),\n  /* 1100 */ PTR(354, 1),\n  /* 1101 */ PTR(356, 1),\n  /* 1110 */ PTR(358, 1),\n  /* 1111 */ PTR(360, 1),\n\n  /* 0011 ... */\n  /* 0000 */ V(2, 7, 4),\t/* 64 */\n  /* 0001 */ V(7, 2, 4),\n  /* 0010 */ V(6, 4, 4),\n  /* 0011 */ V(1, 7, 4),\n  /* 0100 */ V(5, 5, 4),\n  /* 0101 */ V(7, 1, 4),\n  /* 0110 */ PTR(362, 1),\n  /* 0111 */ V(3, 6, 4),\n  /* 1000 */ V(6, 3, 4),\n  /* 1001 */ V(4, 5, 4),\n  /* 1010 */ V(5, 4, 4),\n  /* 1011 */ V(2, 6, 4),\n  /* 1100 */ V(6, 2, 4),\n  /* 1101 */ V(1, 6, 4),\n  /* 1110 */ PTR(364, 1),\n  /* 1111 */ V(3, 5, 4),\n\n  /* 0100 ... */\n  /* 0000 */ V(6, 1, 3),\t/* 80 */\n  /* 0001 */ V(6, 1, 3),\n  /* 0010 */ V(5, 3, 4),\n  /* 0011 */ V(4, 4, 4),\n  /* 0100 */ V(2, 5, 3),\n  /* 0101 */ V(2, 5, 3),\n  /* 0110 */ V(5, 2, 3),\n  /* 0111 */ V(5, 2, 3),\n  /* 1000 */ V(1, 5, 3),\n  /* 1001 */ V(1, 5, 3),\n  /* 1010 */ V(5, 1, 3),\n  /* 1011 */ V(5, 1, 3),\n  /* 1100 */ V(0, 5, 4),\n  /* 1101 */ V(5, 0, 4),\n  /* 1110 */ V(3, 4, 3),\n  /* 1111 */ V(3, 4, 3),\n\n  /* 0101 ... */\n  /* 000  */ V(4, 3, 3),\t/* 96 */\n  /* 001  */ V(2, 4, 3),\n  /* 010  */ V(4, 2, 3),\n  /* 011  */ V(3, 3, 3),\n  /* 100  */ V(4, 1, 2),\n  /* 101  */ V(4, 1, 2),\n  /* 110  */ V(1, 4, 3),\n  /* 111  */ V(0, 4, 3),\n\n  /* 0110 ... */\n  /* 000  */ V(2, 3, 2),\t/* 104 */\n  /* 001  */ V(2, 3, 2),\n  /* 010  */ V(3, 2, 2),\n  /* 011  */ V(3, 2, 2),\n  /* 100  */ V(4, 0, 3),\n  /* 101  */ V(0, 3, 3),\n  /* 110  */ V(1, 3, 2),\n  /* 111  */ V(1, 3, 2),\n\n  /* 0111 ... */\n  /* 00   */ V(3, 1, 2),\t/* 112 */\n  /* 01   */ V(3, 0, 2),\n  /* 10   */ V(2, 2, 1),\n  /* 11   */ V(2, 2, 1),\n\n  /* 1000 ... */\n  /* 0    */ V(1, 2, 1),\t/* 116 */\n  /* 1    */ V(2, 1, 1),\n\n  /* 1001 ... */\n  /* 0    */ V(0, 2, 1),\t/* 118 */\n  /* 1    */ V(2, 0, 1),\n\n  /* 0000 0000 ... */\n  /* 0000 */ PTR(366, 1),\t/* 120 */\n  /* 0001 */ PTR(368, 1),\n  /* 0010 */ V(14, 14, 4),\n  /* 0011 */ PTR(370, 1),\n  /* 0100 */ PTR(372, 1),\n  /* 0101 */ PTR(374, 1),\n  /* 0110 */ V(15, 11, 4),\n  /* 0111 */ PTR(376, 1),\n  /* 1000 */ V(13, 13, 4),\n  /* 1001 */ V(10, 15, 4),\n  /* 1010 */ V(15, 10, 4),\n  /* 1011 */ V(11, 14, 4),\n  /* 1100 */ V(14, 11, 4),\n  /* 1101 */ V(12, 13, 4),\n  /* 1110 */ V(13, 12, 4),\n  /* 1111 */ V(9, 15, 4),\n\n  /* 0000 0001 ... */\n  /* 0000 */ V(15, 9, 4),\t/* 136 */\n  /* 0001 */ V(14, 10, 4),\n  /* 0010 */ V(11, 13, 4),\n  /* 0011 */ V(13, 11, 4),\n  /* 0100 */ V(8, 15, 4),\n  /* 0101 */ V(15, 8, 4),\n  /* 0110 */ V(12, 12, 4),\n  /* 0111 */ V(9, 14, 4),\n  /* 1000 */ V(14, 9, 4),\n  /* 1001 */ V(7, 15, 4),\n  /* 1010 */ V(15, 7, 4),\n  /* 1011 */ V(10, 13, 4),\n  /* 1100 */ V(13, 10, 4),\n  /* 1101 */ V(11, 12, 4),\n  /* 1110 */ V(6, 15, 4),\n  /* 1111 */ PTR(378, 1),\n\n  /* 0000 0010 ... */\n  /* 0000 */ V(12, 11, 3),\t/* 152 */\n  /* 0001 */ V(12, 11, 3),\n  /* 0010 */ V(15, 6, 3),\n  /* 0011 */ V(15, 6, 3),\n  /* 0100 */ V(8, 14, 4),\n  /* 0101 */ V(14, 8, 4),\n  /* 0110 */ V(5, 15, 4),\n  /* 0111 */ V(9, 13, 4),\n  /* 1000 */ V(15, 5, 3),\n  /* 1001 */ V(15, 5, 3),\n  /* 1010 */ V(7, 14, 3),\n  /* 1011 */ V(7, 14, 3),\n  /* 1100 */ V(14, 7, 3),\n  /* 1101 */ V(14, 7, 3),\n  /* 1110 */ V(10, 12, 3),\n  /* 1111 */ V(10, 12, 3),\n\n  /* 0000 0011 ... */\n  /* 0000 */ V(12, 10, 3),\t/* 168 */\n  /* 0001 */ V(12, 10, 3),\n  /* 0010 */ V(11, 11, 3),\n  /* 0011 */ V(11, 11, 3),\n  /* 0100 */ V(13, 9, 4),\n  /* 0101 */ V(8, 13, 4),\n  /* 0110 */ V(4, 15, 3),\n  /* 0111 */ V(4, 15, 3),\n  /* 1000 */ V(15, 4, 3),\n  /* 1001 */ V(15, 4, 3),\n  /* 1010 */ V(3, 15, 3),\n  /* 1011 */ V(3, 15, 3),\n  /* 1100 */ V(15, 3, 3),\n  /* 1101 */ V(15, 3, 3),\n  /* 1110 */ V(13, 8, 3),\n  /* 1111 */ V(13, 8, 3),\n\n  /* 0000 0100 ... */\n  /* 0000 */ V(14, 6, 3),\t/* 184 */\n  /* 0001 */ V(14, 6, 3),\n  /* 0010 */ V(2, 15, 3),\n  /* 0011 */ V(2, 15, 3),\n  /* 0100 */ V(15, 2, 3),\n  /* 0101 */ V(15, 2, 3),\n  /* 0110 */ V(6, 14, 4),\n  /* 0111 */ V(15, 0, 4),\n  /* 1000 */ V(1, 15, 3),\n  /* 1001 */ V(1, 15, 3),\n  /* 1010 */ V(15, 1, 3),\n  /* 1011 */ V(15, 1, 3),\n  /* 1100 */ V(9, 12, 3),\n  /* 1101 */ V(9, 12, 3),\n  /* 1110 */ V(12, 9, 3),\n  /* 1111 */ V(12, 9, 3),\n\n  /* 0000 0101 ... */\n  /* 000  */ V(5, 14, 3),\t/* 200 */\n  /* 001  */ V(10, 11, 3),\n  /* 010  */ V(11, 10, 3),\n  /* 011  */ V(14, 5, 3),\n  /* 100  */ V(7, 13, 3),\n  /* 101  */ V(13, 7, 3),\n  /* 110  */ V(4, 14, 3),\n  /* 111  */ V(14, 4, 3),\n\n  /* 0000 0110 ... */\n  /* 000  */ V(8, 12, 3),\t/* 208 */\n  /* 001  */ V(12, 8, 3),\n  /* 010  */ V(3, 14, 3),\n  /* 011  */ V(6, 13, 3),\n  /* 100  */ V(13, 6, 3),\n  /* 101  */ V(14, 3, 3),\n  /* 110  */ V(9, 11, 3),\n  /* 111  */ V(11, 9, 3),\n\n  /* 0000 0111 ... */\n  /* 0000 */ V(2, 14, 3),\t/* 216 */\n  /* 0001 */ V(2, 14, 3),\n  /* 0010 */ V(10, 10, 3),\n  /* 0011 */ V(10, 10, 3),\n  /* 0100 */ V(14, 2, 3),\n  /* 0101 */ V(14, 2, 3),\n  /* 0110 */ V(1, 14, 3),\n  /* 0111 */ V(1, 14, 3),\n  /* 1000 */ V(14, 1, 3),\n  /* 1001 */ V(14, 1, 3),\n  /* 1010 */ V(0, 14, 4),\n  /* 1011 */ V(14, 0, 4),\n  /* 1100 */ V(5, 13, 3),\n  /* 1101 */ V(5, 13, 3),\n  /* 1110 */ V(13, 5, 3),\n  /* 1111 */ V(13, 5, 3),\n\n  /* 0000 1000 ... */\n  /* 000  */ V(7, 12, 3),\t/* 232 */\n  /* 001  */ V(12, 7, 3),\n  /* 010  */ V(4, 13, 3),\n  /* 011  */ V(8, 11, 3),\n  /* 100  */ V(13, 4, 2),\n  /* 101  */ V(13, 4, 2),\n  /* 110  */ V(11, 8, 3),\n  /* 111  */ V(9, 10, 3),\n\n  /* 0000 1001 ... */\n  /* 000  */ V(10, 9, 3),\t/* 240 */\n  /* 001  */ V(6, 12, 3),\n  /* 010  */ V(12, 6, 3),\n  /* 011  */ V(3, 13, 3),\n  /* 100  */ V(13, 3, 2),\n  /* 101  */ V(13, 3, 2),\n  /* 110  */ V(13, 2, 2),\n  /* 111  */ V(13, 2, 2),\n\n  /* 0000 1010 ... */\n  /* 000  */ V(2, 13, 3),\t/* 248 */\n  /* 001  */ V(0, 13, 3),\n  /* 010  */ V(1, 13, 2),\n  /* 011  */ V(1, 13, 2),\n  /* 100  */ V(7, 11, 2),\n  /* 101  */ V(7, 11, 2),\n  /* 110  */ V(11, 7, 2),\n  /* 111  */ V(11, 7, 2),\n\n  /* 0000 1011 ... */\n  /* 000  */ V(13, 1, 2),\t/* 256 */\n  /* 001  */ V(13, 1, 2),\n  /* 010  */ V(5, 12, 3),\n  /* 011  */ V(13, 0, 3),\n  /* 100  */ V(12, 5, 2),\n  /* 101  */ V(12, 5, 2),\n  /* 110  */ V(8, 10, 2),\n  /* 111  */ V(8, 10, 2),\n\n  /* 0000 1100 ... */\n  /* 00   */ V(10, 8, 2),\t/* 264 */\n  /* 01   */ V(4, 12, 2),\n  /* 10   */ V(12, 4, 2),\n  /* 11   */ V(6, 11, 2),\n\n  /* 0000 1101 ... */\n  /* 000  */ V(11, 6, 2),\t/* 268 */\n  /* 001  */ V(11, 6, 2),\n  /* 010  */ V(9, 9, 3),\n  /* 011  */ V(0, 12, 3),\n  /* 100  */ V(3, 12, 2),\n  /* 101  */ V(3, 12, 2),\n  /* 110  */ V(12, 3, 2),\n  /* 111  */ V(12, 3, 2),\n\n  /* 0000 1110 ... */\n  /* 000  */ V(7, 10, 2),\t/* 276 */\n  /* 001  */ V(7, 10, 2),\n  /* 010  */ V(10, 7, 2),\n  /* 011  */ V(10, 7, 2),\n  /* 100  */ V(10, 6, 2),\n  /* 101  */ V(10, 6, 2),\n  /* 110  */ V(12, 0, 3),\n  /* 111  */ V(0, 11, 3),\n\n  /* 0000 1111 ... */\n  /* 00   */ V(12, 2, 1),\t/* 284 */\n  /* 01   */ V(12, 2, 1),\n  /* 10   */ V(2, 12, 2),\n  /* 11   */ V(5, 11, 2),\n\n  /* 0001 0000 ... */\n  /* 00   */ V(11, 5, 2),\t/* 288 */\n  /* 01   */ V(1, 12, 2),\n  /* 10   */ V(8, 9, 2),\n  /* 11   */ V(9, 8, 2),\n\n  /* 0001 0001 ... */\n  /* 00   */ V(12, 1, 2),\t/* 292 */\n  /* 01   */ V(4, 11, 2),\n  /* 10   */ V(11, 4, 2),\n  /* 11   */ V(6, 10, 2),\n\n  /* 0001 0010 ... */\n  /* 00   */ V(3, 11, 2),\t/* 296 */\n  /* 01   */ V(7, 9, 2),\n  /* 10   */ V(11, 3, 1),\n  /* 11   */ V(11, 3, 1),\n\n  /* 0001 0011 ... */\n  /* 00   */ V(9, 7, 2),\t/* 300 */\n  /* 01   */ V(8, 8, 2),\n  /* 10   */ V(2, 11, 2),\n  /* 11   */ V(5, 10, 2),\n\n  /* 0001 0100 ... */\n  /* 00   */ V(11, 2, 1),\t/* 304 */\n  /* 01   */ V(11, 2, 1),\n  /* 10   */ V(10, 5, 2),\n  /* 11   */ V(1, 11, 2),\n\n  /* 0001 0101 ... */\n  /* 00   */ V(11, 1, 1),\t/* 308 */\n  /* 01   */ V(11, 1, 1),\n  /* 10   */ V(11, 0, 2),\n  /* 11   */ V(6, 9, 2),\n\n  /* 0001 0110 ... */\n  /* 00   */ V(9, 6, 2),\t/* 312 */\n  /* 01   */ V(4, 10, 2),\n  /* 10   */ V(10, 4, 2),\n  /* 11   */ V(7, 8, 2),\n\n  /* 0001 0111 ... */\n  /* 00   */ V(8, 7, 2),\t/* 316 */\n  /* 01   */ V(3, 10, 2),\n  /* 10   */ V(10, 3, 1),\n  /* 11   */ V(10, 3, 1),\n\n  /* 0001 1000 ... */\n  /* 0    */ V(5, 9, 1),\t/* 320 */\n  /* 1    */ V(9, 5, 1),\n\n  /* 0001 1001 ... */\n  /* 0    */ V(2, 10, 1),\t/* 322 */\n  /* 1    */ V(10, 2, 1),\n\n  /* 0001 1010 ... */\n  /* 0    */ V(1, 10, 1),\t/* 324 */\n  /* 1    */ V(10, 1, 1),\n\n  /* 0001 1011 ... */\n  /* 00   */ V(0, 10, 2),\t/* 326 */\n  /* 01   */ V(10, 0, 2),\n  /* 10   */ V(6, 8, 1),\n  /* 11   */ V(6, 8, 1),\n\n  /* 0001 1100 ... */\n  /* 0    */ V(8, 6, 1),\t/* 330 */\n  /* 1    */ V(4, 9, 1),\n\n  /* 0001 1101 ... */\n  /* 0    */ V(9, 4, 1),\t/* 332 */\n  /* 1    */ V(3, 9, 1),\n\n  /* 0001 1110 ... */\n  /* 00   */ V(9, 3, 1),\t/* 334 */\n  /* 01   */ V(9, 3, 1),\n  /* 10   */ V(7, 7, 2),\n  /* 11   */ V(0, 9, 2),\n\n  /* 0001 1111 ... */\n  /* 0    */ V(5, 8, 1),\t/* 338 */\n  /* 1    */ V(8, 5, 1),\n\n  /* 0010 0000 ... */\n  /* 0    */ V(2, 9, 1),\t/* 340 */\n  /* 1    */ V(6, 7, 1),\n\n  /* 0010 0001 ... */\n  /* 0    */ V(7, 6, 1),\t/* 342 */\n  /* 1    */ V(9, 2, 1),\n\n  /* 0010 0011 ... */\n  /* 0    */ V(1, 9, 1),\t/* 344 */\n  /* 1    */ V(9, 0, 1),\n\n  /* 0010 0100 ... */\n  /* 0    */ V(4, 8, 1),\t/* 346 */\n  /* 1    */ V(8, 4, 1),\n\n  /* 0010 0101 ... */\n  /* 0    */ V(5, 7, 1),\t/* 348 */\n  /* 1    */ V(7, 5, 1),\n\n  /* 0010 0110 ... */\n  /* 0    */ V(3, 8, 1),\t/* 350 */\n  /* 1    */ V(8, 3, 1),\n\n  /* 0010 0111 ... */\n  /* 0    */ V(6, 6, 1),\t/* 352 */\n  /* 1    */ V(4, 7, 1),\n\n  /* 0010 1100 ... */\n  /* 0    */ V(7, 4, 1),\t/* 354 */\n  /* 1    */ V(0, 8, 1),\n\n  /* 0010 1101 ... */\n  /* 0    */ V(8, 0, 1),\t/* 356 */\n  /* 1    */ V(5, 6, 1),\n\n  /* 0010 1110 ... */\n  /* 0    */ V(6, 5, 1),\t/* 358 */\n  /* 1    */ V(3, 7, 1),\n\n  /* 0010 1111 ... */\n  /* 0    */ V(7, 3, 1),\t/* 360 */\n  /* 1    */ V(4, 6, 1),\n\n  /* 0011 0110 ... */\n  /* 0    */ V(0, 7, 1),\t/* 362 */\n  /* 1    */ V(7, 0, 1),\n\n  /* 0011 1110 ... */\n  /* 0    */ V(0, 6, 1),\t/* 364 */\n  /* 1    */ V(6, 0, 1),\n\n  /* 0000 0000 0000 ... */\n  /* 0    */ V(15, 15, 1),\t/* 366 */\n  /* 1    */ V(14, 15, 1),\n\n  /* 0000 0000 0001 ... */\n  /* 0    */ V(15, 14, 1),\t/* 368 */\n  /* 1    */ V(13, 15, 1),\n\n  /* 0000 0000 0011 ... */\n  /* 0    */ V(15, 13, 1),\t/* 370 */\n  /* 1    */ V(12, 15, 1),\n\n  /* 0000 0000 0100 ... */\n  /* 0    */ V(15, 12, 1),\t/* 372 */\n  /* 1    */ V(13, 14, 1),\n\n  /* 0000 0000 0101 ... */\n  /* 0    */ V(14, 13, 1),\t/* 374 */\n  /* 1    */ V(11, 15, 1),\n\n  /* 0000 0000 0111 ... */\n  /* 0    */ V(12, 14, 1),\t/* 376 */\n  /* 1    */ V(14, 12, 1),\n\n  /* 0000 0001 1111 ... */\n  /* 0    */ V(10, 14, 1),\t/* 378 */\n  /* 1    */ V(0, 15, 1)\n];\n\nconst hufftab16 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ PTR(64, 2),\n  /* 0100 */ V(1, 1, 4),\n  /* 0101 */ V(0, 1, 4),\n  /* 0110 */ V(1, 0, 3),\n  /* 0111 */ V(1, 0, 3),\n  /* 1000 */ V(0, 0, 1),\n  /* 1001 */ V(0, 0, 1),\n  /* 1010 */ V(0, 0, 1),\n  /* 1011 */ V(0, 0, 1),\n  /* 1100 */ V(0, 0, 1),\n  /* 1101 */ V(0, 0, 1),\n  /* 1110 */ V(0, 0, 1),\n  /* 1111 */ V(0, 0, 1),\n\n  /* 0000 ... */\n  /* 0000 */ PTR(68, 3),\t/* 16 */\n  /* 0001 */ PTR(76, 3),\n  /* 0010 */ PTR(84, 2),\n  /* 0011 */ V(15, 15, 4),\n  /* 0100 */ PTR(88, 2),\n  /* 0101 */ PTR(92, 1),\n  /* 0110 */ PTR(94, 4),\n  /* 0111 */ V(15, 2, 4),\n  /* 1000 */ PTR(110, 1),\n  /* 1001 */ V(1, 15, 4),\n  /* 1010 */ V(15, 1, 4),\n  /* 1011 */ PTR(112, 4),\n  /* 1100 */ PTR(128, 4),\n  /* 1101 */ PTR(144, 4),\n  /* 1110 */ PTR(160, 4),\n  /* 1111 */ PTR(176, 4),\n\n  /* 0001 ... */\n  /* 0000 */ PTR(192, 4),\t/* 32 */\n  /* 0001 */ PTR(208, 3),\n  /* 0010 */ PTR(216, 3),\n  /* 0011 */ PTR(224, 3),\n  /* 0100 */ PTR(232, 3),\n  /* 0101 */ PTR(240, 3),\n  /* 0110 */ PTR(248, 3),\n  /* 0111 */ PTR(256, 3),\n  /* 1000 */ PTR(264, 2),\n  /* 1001 */ PTR(268, 2),\n  /* 1010 */ PTR(272, 1),\n  /* 1011 */ PTR(274, 2),\n  /* 1100 */ PTR(278, 2),\n  /* 1101 */ PTR(282, 1),\n  /* 1110 */ V(5, 1, 4),\n  /* 1111 */ PTR(284, 1),\n\n  /* 0010 ... */\n  /* 0000 */ PTR(286, 1),\t/* 48 */\n  /* 0001 */ PTR(288, 1),\n  /* 0010 */ PTR(290, 1),\n  /* 0011 */ V(1, 4, 4),\n  /* 0100 */ V(4, 1, 4),\n  /* 0101 */ PTR(292, 1),\n  /* 0110 */ V(2, 3, 4),\n  /* 0111 */ V(3, 2, 4),\n  /* 1000 */ V(1, 3, 3),\n  /* 1001 */ V(1, 3, 3),\n  /* 1010 */ V(3, 1, 3),\n  /* 1011 */ V(3, 1, 3),\n  /* 1100 */ V(0, 3, 4),\n  /* 1101 */ V(3, 0, 4),\n  /* 1110 */ V(2, 2, 3),\n  /* 1111 */ V(2, 2, 3),\n\n  /* 0011 ... */\n  /* 00   */ V(1, 2, 2),\t/* 64 */\n  /* 01   */ V(2, 1, 2),\n  /* 10   */ V(0, 2, 2),\n  /* 11   */ V(2, 0, 2),\n\n  /* 0000 0000 ... */\n  /* 000  */ V(14, 15, 3),\t/* 68 */\n  /* 001  */ V(15, 14, 3),\n  /* 010  */ V(13, 15, 3),\n  /* 011  */ V(15, 13, 3),\n  /* 100  */ V(12, 15, 3),\n  /* 101  */ V(15, 12, 3),\n  /* 110  */ V(11, 15, 3),\n  /* 111  */ V(15, 11, 3),\n\n  /* 0000 0001 ... */\n  /* 000  */ V(10, 15, 2),\t/* 76 */\n  /* 001  */ V(10, 15, 2),\n  /* 010  */ V(15, 10, 3),\n  /* 011  */ V(9, 15, 3),\n  /* 100  */ V(15, 9, 3),\n  /* 101  */ V(15, 8, 3),\n  /* 110  */ V(8, 15, 2),\n  /* 111  */ V(8, 15, 2),\n\n  /* 0000 0010 ... */\n  /* 00   */ V(7, 15, 2),\t/* 84 */\n  /* 01   */ V(15, 7, 2),\n  /* 10   */ V(6, 15, 2),\n  /* 11   */ V(15, 6, 2),\n\n  /* 0000 0100 ... */\n  /* 00   */ V(5, 15, 2),\t/* 88 */\n  /* 01   */ V(15, 5, 2),\n  /* 10   */ V(4, 15, 1),\n  /* 11   */ V(4, 15, 1),\n\n  /* 0000 0101 ... */\n  /* 0    */ V(15, 4, 1),\t/* 92 */\n  /* 1    */ V(15, 3, 1),\n\n  /* 0000 0110 ... */\n  /* 0000 */ V(15, 0, 1),\t/* 94 */\n  /* 0001 */ V(15, 0, 1),\n  /* 0010 */ V(15, 0, 1),\n  /* 0011 */ V(15, 0, 1),\n  /* 0100 */ V(15, 0, 1),\n  /* 0101 */ V(15, 0, 1),\n  /* 0110 */ V(15, 0, 1),\n  /* 0111 */ V(15, 0, 1),\n  /* 1000 */ V(3, 15, 2),\n  /* 1001 */ V(3, 15, 2),\n  /* 1010 */ V(3, 15, 2),\n  /* 1011 */ V(3, 15, 2),\n  /* 1100 */ PTR(294, 4),\n  /* 1101 */ PTR(310, 3),\n  /* 1110 */ PTR(318, 3),\n  /* 1111 */ PTR(326, 3),\n\n  /* 0000 1000 ... */\n  /* 0    */ V(2, 15, 1),\t/* 110 */\n  /* 1    */ V(0, 15, 1),\n\n  /* 0000 1011 ... */\n  /* 0000 */ PTR(334, 2),\t/* 112 */\n  /* 0001 */ PTR(338, 2),\n  /* 0010 */ PTR(342, 2),\n  /* 0011 */ PTR(346, 1),\n  /* 0100 */ PTR(348, 2),\n  /* 0101 */ PTR(352, 2),\n  /* 0110 */ PTR(356, 1),\n  /* 0111 */ PTR(358, 2),\n  /* 1000 */ PTR(362, 2),\n  /* 1001 */ PTR(366, 2),\n  /* 1010 */ PTR(370, 2),\n  /* 1011 */ V(14, 3, 4),\n  /* 1100 */ PTR(374, 1),\n  /* 1101 */ PTR(376, 1),\n  /* 1110 */ PTR(378, 1),\n  /* 1111 */ PTR(380, 1),\n\n  /* 0000 1100 ... */\n  /* 0000 */ PTR(382, 1),\t/* 128 */\n  /* 0001 */ PTR(384, 1),\n  /* 0010 */ PTR(386, 1),\n  /* 0011 */ V(0, 13, 4),\n  /* 0100 */ PTR(388, 1),\n  /* 0101 */ PTR(390, 1),\n  /* 0110 */ PTR(392, 1),\n  /* 0111 */ V(3, 12, 4),\n  /* 1000 */ PTR(394, 1),\n  /* 1001 */ V(1, 12, 4),\n  /* 1010 */ V(12, 0, 4),\n  /* 1011 */ PTR(396, 1),\n  /* 1100 */ V(14, 2, 3),\n  /* 1101 */ V(14, 2, 3),\n  /* 1110 */ V(2, 14, 4),\n  /* 1111 */ V(1, 14, 4),\n\n  /* 0000 1101 ... */\n  /* 0000 */ V(13, 3, 4),\t/* 144 */\n  /* 0001 */ V(2, 13, 4),\n  /* 0010 */ V(13, 2, 4),\n  /* 0011 */ V(13, 1, 4),\n  /* 0100 */ V(3, 11, 4),\n  /* 0101 */ PTR(398, 1),\n  /* 0110 */ V(1, 13, 3),\n  /* 0111 */ V(1, 13, 3),\n  /* 1000 */ V(12, 4, 4),\n  /* 1001 */ V(6, 11, 4),\n  /* 1010 */ V(12, 3, 4),\n  /* 1011 */ V(10, 7, 4),\n  /* 1100 */ V(2, 12, 3),\n  /* 1101 */ V(2, 12, 3),\n  /* 1110 */ V(12, 2, 4),\n  /* 1111 */ V(11, 5, 4),\n\n  /* 0000 1110 ... */\n  /* 0000 */ V(12, 1, 4),\t/* 160 */\n  /* 0001 */ V(0, 12, 4),\n  /* 0010 */ V(4, 11, 4),\n  /* 0011 */ V(11, 4, 4),\n  /* 0100 */ V(6, 10, 4),\n  /* 0101 */ V(10, 6, 4),\n  /* 0110 */ V(11, 3, 3),\n  /* 0111 */ V(11, 3, 3),\n  /* 1000 */ V(5, 10, 4),\n  /* 1001 */ V(10, 5, 4),\n  /* 1010 */ V(2, 11, 3),\n  /* 1011 */ V(2, 11, 3),\n  /* 1100 */ V(11, 2, 3),\n  /* 1101 */ V(11, 2, 3),\n  /* 1110 */ V(1, 11, 3),\n  /* 1111 */ V(1, 11, 3),\n\n  /* 0000 1111 ... */\n  /* 0000 */ V(11, 1, 3),\t/* 176 */\n  /* 0001 */ V(11, 1, 3),\n  /* 0010 */ V(0, 11, 4),\n  /* 0011 */ V(11, 0, 4),\n  /* 0100 */ V(6, 9, 4),\n  /* 0101 */ V(9, 6, 4),\n  /* 0110 */ V(4, 10, 4),\n  /* 0111 */ V(10, 4, 4),\n  /* 1000 */ V(7, 8, 4),\n  /* 1001 */ V(8, 7, 4),\n  /* 1010 */ V(10, 3, 3),\n  /* 1011 */ V(10, 3, 3),\n  /* 1100 */ V(3, 10, 4),\n  /* 1101 */ V(5, 9, 4),\n  /* 1110 */ V(2, 10, 3),\n  /* 1111 */ V(2, 10, 3),\n\n  /* 0001 0000 ... */\n  /* 0000 */ V(9, 5, 4),\t/* 192 */\n  /* 0001 */ V(6, 8, 4),\n  /* 0010 */ V(10, 1, 3),\n  /* 0011 */ V(10, 1, 3),\n  /* 0100 */ V(8, 6, 4),\n  /* 0101 */ V(7, 7, 4),\n  /* 0110 */ V(9, 4, 3),\n  /* 0111 */ V(9, 4, 3),\n  /* 1000 */ V(4, 9, 4),\n  /* 1001 */ V(5, 7, 4),\n  /* 1010 */ V(6, 7, 3),\n  /* 1011 */ V(6, 7, 3),\n  /* 1100 */ V(10, 2, 2),\n  /* 1101 */ V(10, 2, 2),\n  /* 1110 */ V(10, 2, 2),\n  /* 1111 */ V(10, 2, 2),\n\n  /* 0001 0001 ... */\n  /* 000  */ V(1, 10, 2),\t/* 208 */\n  /* 001  */ V(1, 10, 2),\n  /* 010  */ V(0, 10, 3),\n  /* 011  */ V(10, 0, 3),\n  /* 100  */ V(3, 9, 3),\n  /* 101  */ V(9, 3, 3),\n  /* 110  */ V(5, 8, 3),\n  /* 111  */ V(8, 5, 3),\n\n  /* 0001 0010 ... */\n  /* 000  */ V(2, 9, 2),\t/* 216 */\n  /* 001  */ V(2, 9, 2),\n  /* 010  */ V(9, 2, 2),\n  /* 011  */ V(9, 2, 2),\n  /* 100  */ V(7, 6, 3),\n  /* 101  */ V(0, 9, 3),\n  /* 110  */ V(1, 9, 2),\n  /* 111  */ V(1, 9, 2),\n\n  /* 0001 0011 ... */\n  /* 000  */ V(9, 1, 2),\t/* 224 */\n  /* 001  */ V(9, 1, 2),\n  /* 010  */ V(9, 0, 3),\n  /* 011  */ V(4, 8, 3),\n  /* 100  */ V(8, 4, 3),\n  /* 101  */ V(7, 5, 3),\n  /* 110  */ V(3, 8, 3),\n  /* 111  */ V(8, 3, 3),\n\n  /* 0001 0100 ... */\n  /* 000  */ V(6, 6, 3),\t/* 232 */\n  /* 001  */ V(2, 8, 3),\n  /* 010  */ V(8, 2, 2),\n  /* 011  */ V(8, 2, 2),\n  /* 100  */ V(4, 7, 3),\n  /* 101  */ V(7, 4, 3),\n  /* 110  */ V(1, 8, 2),\n  /* 111  */ V(1, 8, 2),\n\n  /* 0001 0101 ... */\n  /* 000  */ V(8, 1, 2),\t/* 240 */\n  /* 001  */ V(8, 1, 2),\n  /* 010  */ V(8, 0, 2),\n  /* 011  */ V(8, 0, 2),\n  /* 100  */ V(0, 8, 3),\n  /* 101  */ V(5, 6, 3),\n  /* 110  */ V(3, 7, 2),\n  /* 111  */ V(3, 7, 2),\n\n  /* 0001 0110 ... */\n  /* 000  */ V(7, 3, 2),\t/* 248 */\n  /* 001  */ V(7, 3, 2),\n  /* 010  */ V(6, 5, 3),\n  /* 011  */ V(4, 6, 3),\n  /* 100  */ V(2, 7, 2),\n  /* 101  */ V(2, 7, 2),\n  /* 110  */ V(7, 2, 2),\n  /* 111  */ V(7, 2, 2),\n\n  /* 0001 0111 ... */\n  /* 000  */ V(6, 4, 3),\t/* 256 */\n  /* 001  */ V(5, 5, 3),\n  /* 010  */ V(0, 7, 2),\n  /* 011  */ V(0, 7, 2),\n  /* 100  */ V(1, 7, 1),\n  /* 101  */ V(1, 7, 1),\n  /* 110  */ V(1, 7, 1),\n  /* 111  */ V(1, 7, 1),\n\n  /* 0001 1000 ... */\n  /* 00   */ V(7, 1, 1),\t/* 264  */\n  /* 01   */ V(7, 1, 1),\n  /* 10   */ V(7, 0, 2),\n  /* 11   */ V(3, 6, 2),\n\n  /* 0001 1001 ... */\n  /* 00   */ V(6, 3, 2),\t/* 268 */\n  /* 01   */ V(4, 5, 2),\n  /* 10   */ V(5, 4, 2),\n  /* 11   */ V(2, 6, 2),\n\n  /* 0001 1010 ... */\n  /* 0    */ V(6, 2, 1),\t/* 272 */\n  /* 1    */ V(1, 6, 1),\n\n  /* 0001 1011 ... */\n  /* 00   */ V(6, 1, 1),\t/* 274 */\n  /* 01   */ V(6, 1, 1),\n  /* 10   */ V(0, 6, 2),\n  /* 11   */ V(6, 0, 2),\n\n  /* 0001 1100 ... */\n  /* 00   */ V(5, 3, 1),\t/* 278 */\n  /* 01   */ V(5, 3, 1),\n  /* 10   */ V(3, 5, 2),\n  /* 11   */ V(4, 4, 2),\n\n  /* 0001 1101 ... */\n  /* 0    */ V(2, 5, 1),\t/* 282 */\n  /* 1    */ V(5, 2, 1),\n\n  /* 0001 1111 ... */\n  /* 0    */ V(1, 5, 1),\t/* 284 */\n  /* 1    */ V(0, 5, 1),\n\n  /* 0010 0000 ... */\n  /* 0    */ V(3, 4, 1),\t/* 286 */\n  /* 1    */ V(4, 3, 1),\n\n  /* 0010 0001 ... */\n  /* 0    */ V(5, 0, 1),\t/* 288 */\n  /* 1    */ V(2, 4, 1),\n\n  /* 0010 0010 ... */\n  /* 0    */ V(4, 2, 1),\t/* 290 */\n  /* 1    */ V(3, 3, 1),\n\n  /* 0010 0101 ... */\n  /* 0    */ V(0, 4, 1),\t/* 292 */\n  /* 1    */ V(4, 0, 1),\n\n  /* 0000 0110 1100 ... */\n  /* 0000 */ V(12, 14, 4),\t/* 294 */\n  /* 0001 */ PTR(400, 1),\n  /* 0010 */ V(13, 14, 3),\n  /* 0011 */ V(13, 14, 3),\n  /* 0100 */ V(14, 9, 3),\n  /* 0101 */ V(14, 9, 3),\n  /* 0110 */ V(14, 10, 4),\n  /* 0111 */ V(13, 9, 4),\n  /* 1000 */ V(14, 14, 2),\n  /* 1001 */ V(14, 14, 2),\n  /* 1010 */ V(14, 14, 2),\n  /* 1011 */ V(14, 14, 2),\n  /* 1100 */ V(14, 13, 3),\n  /* 1101 */ V(14, 13, 3),\n  /* 1110 */ V(14, 11, 3),\n  /* 1111 */ V(14, 11, 3),\n\n  /* 0000 0110 1101 ... */\n  /* 000  */ V(11, 14, 2),\t/* 310 */\n  /* 001  */ V(11, 14, 2),\n  /* 010  */ V(12, 13, 2),\n  /* 011  */ V(12, 13, 2),\n  /* 100  */ V(13, 12, 3),\n  /* 101  */ V(13, 11, 3),\n  /* 110  */ V(10, 14, 2),\n  /* 111  */ V(10, 14, 2),\n\n  /* 0000 0110 1110 ... */\n  /* 000  */ V(12, 12, 2),\t/* 318 */\n  /* 001  */ V(12, 12, 2),\n  /* 010  */ V(10, 13, 3),\n  /* 011  */ V(13, 10, 3),\n  /* 100  */ V(7, 14, 3),\n  /* 101  */ V(10, 12, 3),\n  /* 110  */ V(12, 10, 2),\n  /* 111  */ V(12, 10, 2),\n\n  /* 0000 0110 1111 ... */\n  /* 000  */ V(12, 9, 3),\t/* 326 */\n  /* 001  */ V(7, 13, 3),\n  /* 010  */ V(5, 14, 2),\n  /* 011  */ V(5, 14, 2),\n  /* 100  */ V(11, 13, 1),\n  /* 101  */ V(11, 13, 1),\n  /* 110  */ V(11, 13, 1),\n  /* 111  */ V(11, 13, 1),\n\n  /* 0000 1011 0000 ... */\n  /* 00   */ V(9, 14, 1),\t/* 334 */\n  /* 01   */ V(9, 14, 1),\n  /* 10   */ V(11, 12, 2),\n  /* 11   */ V(12, 11, 2),\n\n  /* 0000 1011 0001 ... */\n  /* 00   */ V(8, 14, 2),\t/* 338 */\n  /* 01   */ V(14, 8, 2),\n  /* 10   */ V(9, 13, 2),\n  /* 11   */ V(14, 7, 2),\n\n  /* 0000 1011 0010 ... */\n  /* 00   */ V(11, 11, 2),\t/* 342 */\n  /* 01   */ V(8, 13, 2),\n  /* 10   */ V(13, 8, 2),\n  /* 11   */ V(6, 14, 2),\n\n  /* 0000 1011 0011 ... */\n  /* 0    */ V(14, 6, 1),\t/* 346 */\n  /* 1    */ V(9, 12, 1),\n\n  /* 0000 1011 0100 ... */\n  /* 00   */ V(10, 11, 2),\t/* 348 */\n  /* 01   */ V(11, 10, 2),\n  /* 10   */ V(14, 5, 2),\n  /* 11   */ V(13, 7, 2),\n\n  /* 0000 1011 0101 ... */\n  /* 00   */ V(4, 14, 1),\t/* 352 */\n  /* 01   */ V(4, 14, 1),\n  /* 10   */ V(14, 4, 2),\n  /* 11   */ V(8, 12, 2),\n\n  /* 0000 1011 0110 ... */\n  /* 0    */ V(12, 8, 1),\t/* 356 */\n  /* 1    */ V(3, 14, 1),\n\n  /* 0000 1011 0111 ... */\n  /* 00   */ V(6, 13, 1),\t/* 358 */\n  /* 01   */ V(6, 13, 1),\n  /* 10   */ V(13, 6, 2),\n  /* 11   */ V(9, 11, 2),\n\n  /* 0000 1011 1000 ... */\n  /* 00   */ V(11, 9, 2),\t/* 362 */\n  /* 01   */ V(10, 10, 2),\n  /* 10   */ V(14, 1, 1),\n  /* 11   */ V(14, 1, 1),\n\n  /* 0000 1011 1001 ... */\n  /* 00   */ V(13, 4, 1),\t/* 366 */\n  /* 01   */ V(13, 4, 1),\n  /* 10   */ V(11, 8, 2),\n  /* 11   */ V(10, 9, 2),\n\n  /* 0000 1011 1010 ... */\n  /* 00   */ V(7, 11, 1),\t/* 370 */\n  /* 01   */ V(7, 11, 1),\n  /* 10   */ V(11, 7, 2),\n  /* 11   */ V(13, 0, 2),\n\n  /* 0000 1011 1100 ... */\n  /* 0    */ V(0, 14, 1),\t/* 374 */\n  /* 1    */ V(14, 0, 1),\n\n  /* 0000 1011 1101 ... */\n  /* 0    */ V(5, 13, 1),\t/* 376 */\n  /* 1    */ V(13, 5, 1),\n\n  /* 0000 1011 1110 ... */\n  /* 0    */ V(7, 12, 1),\t/* 378 */\n  /* 1    */ V(12, 7, 1),\n\n  /* 0000 1011 1111 ... */\n  /* 0    */ V(4, 13, 1),\t/* 380 */\n  /* 1    */ V(8, 11, 1),\n\n  /* 0000 1100 0000 ... */\n  /* 0    */ V(9, 10, 1),\t/* 382 */\n  /* 1    */ V(6, 12, 1),\n\n  /* 0000 1100 0001 ... */\n  /* 0    */ V(12, 6, 1),\t/* 384 */\n  /* 1    */ V(3, 13, 1),\n\n  /* 0000 1100 0010 ... */\n  /* 0    */ V(5, 12, 1),\t/* 386 */\n  /* 1    */ V(12, 5, 1),\n\n  /* 0000 1100 0100 ... */\n  /* 0    */ V(8, 10, 1),\t/* 388 */\n  /* 1    */ V(10, 8, 1),\n\n  /* 0000 1100 0101 ... */\n  /* 0    */ V(9, 9, 1),\t/* 390 */\n  /* 1    */ V(4, 12, 1),\n\n  /* 0000 1100 0110 ... */\n  /* 0    */ V(11, 6, 1),\t/* 392 */\n  /* 1    */ V(7, 10, 1),\n\n  /* 0000 1100 1000 ... */\n  /* 0    */ V(5, 11, 1),\t/* 394 */\n  /* 1    */ V(8, 9, 1),\n\n  /* 0000 1100 1011 ... */\n  /* 0    */ V(9, 8, 1),\t/* 396 */\n  /* 1    */ V(7, 9, 1),\n\n  /* 0000 1101 0101 ... */\n  /* 0    */ V(9, 7, 1),\t/* 398 */\n  /* 1    */ V(8, 8, 1),\n\n  /* 0000 0110 1100 0001 ... */\n  /* 0    */ V(14, 12, 1),\t/* 400 */\n  /* 1    */ V(13, 13, 1)\n];\n\nconst hufftab24 = [\n  /* 0000 */ PTR(16, 4),\n  /* 0001 */ PTR(32, 4),\n  /* 0010 */ PTR(48, 4),\n  /* 0011 */ V(15, 15, 4),\n  /* 0100 */ PTR(64, 4),\n  /* 0101 */ PTR(80, 4),\n  /* 0110 */ PTR(96, 4),\n  /* 0111 */ PTR(112, 4),\n  /* 1000 */ PTR(128, 4),\n  /* 1001 */ PTR(144, 4),\n  /* 1010 */ PTR(160, 3),\n  /* 1011 */ PTR(168, 2),\n  /* 1100 */ V(1, 1, 4),\n  /* 1101 */ V(0, 1, 4),\n  /* 1110 */ V(1, 0, 4),\n  /* 1111 */ V(0, 0, 4),\n\n  /* 0000 ... */\n  /* 0000 */ V(14, 15, 4),\t/* 16 */\n  /* 0001 */ V(15, 14, 4),\n  /* 0010 */ V(13, 15, 4),\n  /* 0011 */ V(15, 13, 4),\n  /* 0100 */ V(12, 15, 4),\n  /* 0101 */ V(15, 12, 4),\n  /* 0110 */ V(11, 15, 4),\n  /* 0111 */ V(15, 11, 4),\n  /* 1000 */ V(15, 10, 3),\n  /* 1001 */ V(15, 10, 3),\n  /* 1010 */ V(10, 15, 4),\n  /* 1011 */ V(9, 15, 4),\n  /* 1100 */ V(15, 9, 3),\n  /* 1101 */ V(15, 9, 3),\n  /* 1110 */ V(15, 8, 3),\n  /* 1111 */ V(15, 8, 3),\n\n  /* 0001 ... */\n  /* 0000 */ V(8, 15, 4),\t/* 32 */\n  /* 0001 */ V(7, 15, 4),\n  /* 0010 */ V(15, 7, 3),\n  /* 0011 */ V(15, 7, 3),\n  /* 0100 */ V(6, 15, 3),\n  /* 0101 */ V(6, 15, 3),\n  /* 0110 */ V(15, 6, 3),\n  /* 0111 */ V(15, 6, 3),\n  /* 1000 */ V(5, 15, 3),\n  /* 1001 */ V(5, 15, 3),\n  /* 1010 */ V(15, 5, 3),\n  /* 1011 */ V(15, 5, 3),\n  /* 1100 */ V(4, 15, 3),\n  /* 1101 */ V(4, 15, 3),\n  /* 1110 */ V(15, 4, 3),\n  /* 1111 */ V(15, 4, 3),\n\n  /* 0010 ... */\n  /* 0000 */ V(3, 15, 3),\t/* 48 */\n  /* 0001 */ V(3, 15, 3),\n  /* 0010 */ V(15, 3, 3),\n  /* 0011 */ V(15, 3, 3),\n  /* 0100 */ V(2, 15, 3),\n  /* 0101 */ V(2, 15, 3),\n  /* 0110 */ V(15, 2, 3),\n  /* 0111 */ V(15, 2, 3),\n  /* 1000 */ V(15, 1, 3),\n  /* 1001 */ V(15, 1, 3),\n  /* 1010 */ V(1, 15, 4),\n  /* 1011 */ V(15, 0, 4),\n  /* 1100 */ PTR(172, 3),\n  /* 1101 */ PTR(180, 3),\n  /* 1110 */ PTR(188, 3),\n  /* 1111 */ PTR(196, 3),\n\n  /* 0100 ... */\n  /* 0000 */ PTR(204, 4),\t/* 64 */\n  /* 0001 */ PTR(220, 3),\n  /* 0010 */ PTR(228, 3),\n  /* 0011 */ PTR(236, 3),\n  /* 0100 */ PTR(244, 2),\n  /* 0101 */ PTR(248, 2),\n  /* 0110 */ PTR(252, 2),\n  /* 0111 */ PTR(256, 2),\n  /* 1000 */ PTR(260, 2),\n  /* 1001 */ PTR(264, 2),\n  /* 1010 */ PTR(268, 2),\n  /* 1011 */ PTR(272, 2),\n  /* 1100 */ PTR(276, 2),\n  /* 1101 */ PTR(280, 3),\n  /* 1110 */ PTR(288, 2),\n  /* 1111 */ PTR(292, 2),\n\n  /* 0101 ... */\n  /* 0000 */ PTR(296, 2),\t/* 80 */\n  /* 0001 */ PTR(300, 3),\n  /* 0010 */ PTR(308, 2),\n  /* 0011 */ PTR(312, 3),\n  /* 0100 */ PTR(320, 1),\n  /* 0101 */ PTR(322, 2),\n  /* 0110 */ PTR(326, 2),\n  /* 0111 */ PTR(330, 1),\n  /* 1000 */ PTR(332, 2),\n  /* 1001 */ PTR(336, 1),\n  /* 1010 */ PTR(338, 1),\n  /* 1011 */ PTR(340, 1),\n  /* 1100 */ PTR(342, 1),\n  /* 1101 */ PTR(344, 1),\n  /* 1110 */ PTR(346, 1),\n  /* 1111 */ PTR(348, 1),\n\n  /* 0110 ... */\n  /* 0000 */ PTR(350, 1),\t/* 96 */\n  /* 0001 */ PTR(352, 1),\n  /* 0010 */ PTR(354, 1),\n  /* 0011 */ PTR(356, 1),\n  /* 0100 */ PTR(358, 1),\n  /* 0101 */ PTR(360, 1),\n  /* 0110 */ PTR(362, 1),\n  /* 0111 */ PTR(364, 1),\n  /* 1000 */ PTR(366, 1),\n  /* 1001 */ PTR(368, 1),\n  /* 1010 */ PTR(370, 2),\n  /* 1011 */ PTR(374, 1),\n  /* 1100 */ PTR(376, 2),\n  /* 1101 */ V(7, 3, 4),\n  /* 1110 */ PTR(380, 1),\n  /* 1111 */ V(7, 2, 4),\n\n  /* 0111 ... */\n  /* 0000 */ V(4, 6, 4),\t/* 112 */\n  /* 0001 */ V(6, 4, 4),\n  /* 0010 */ V(5, 5, 4),\n  /* 0011 */ V(7, 1, 4),\n  /* 0100 */ V(3, 6, 4),\n  /* 0101 */ V(6, 3, 4),\n  /* 0110 */ V(4, 5, 4),\n  /* 0111 */ V(5, 4, 4),\n  /* 1000 */ V(2, 6, 4),\n  /* 1001 */ V(6, 2, 4),\n  /* 1010 */ V(1, 6, 4),\n  /* 1011 */ V(6, 1, 4),\n  /* 1100 */ PTR(382, 1),\n  /* 1101 */ V(3, 5, 4),\n  /* 1110 */ V(5, 3, 4),\n  /* 1111 */ V(4, 4, 4),\n\n  /* 1000 ... */\n  /* 0000 */ V(2, 5, 4),\t/* 128 */\n  /* 0001 */ V(5, 2, 4),\n  /* 0010 */ V(1, 5, 4),\n  /* 0011 */ PTR(384, 1),\n  /* 0100 */ V(5, 1, 3),\n  /* 0101 */ V(5, 1, 3),\n  /* 0110 */ V(3, 4, 4),\n  /* 0111 */ V(4, 3, 4),\n  /* 1000 */ V(2, 4, 3),\n  /* 1001 */ V(2, 4, 3),\n  /* 1010 */ V(4, 2, 3),\n  /* 1011 */ V(4, 2, 3),\n  /* 1100 */ V(3, 3, 3),\n  /* 1101 */ V(3, 3, 3),\n  /* 1110 */ V(1, 4, 3),\n  /* 1111 */ V(1, 4, 3),\n\n  /* 1001 ... */\n  /* 0000 */ V(4, 1, 3),\t/* 144 */\n  /* 0001 */ V(4, 1, 3),\n  /* 0010 */ V(0, 4, 4),\n  /* 0011 */ V(4, 0, 4),\n  /* 0100 */ V(2, 3, 3),\n  /* 0101 */ V(2, 3, 3),\n  /* 0110 */ V(3, 2, 3),\n  /* 0111 */ V(3, 2, 3),\n  /* 1000 */ V(1, 3, 2),\n  /* 1001 */ V(1, 3, 2),\n  /* 1010 */ V(1, 3, 2),\n  /* 1011 */ V(1, 3, 2),\n  /* 1100 */ V(3, 1, 2),\n  /* 1101 */ V(3, 1, 2),\n  /* 1110 */ V(3, 1, 2),\n  /* 1111 */ V(3, 1, 2),\n\n  /* 1010 ... */\n  /* 000  */ V(0, 3, 3),\t/* 160 */\n  /* 001  */ V(3, 0, 3),\n  /* 010  */ V(2, 2, 2),\n  /* 011  */ V(2, 2, 2),\n  /* 100  */ V(1, 2, 1),\n  /* 101  */ V(1, 2, 1),\n  /* 110  */ V(1, 2, 1),\n  /* 111  */ V(1, 2, 1),\n\n  /* 1011 ... */\n  /* 00   */ V(2, 1, 1),\t/* 168 */\n  /* 01   */ V(2, 1, 1),\n  /* 10   */ V(0, 2, 2),\n  /* 11   */ V(2, 0, 2),\n\n  /* 0010 1100 ... */\n  /* 000  */ V(0, 15, 1),\t/* 172 */\n  /* 001  */ V(0, 15, 1),\n  /* 010  */ V(0, 15, 1),\n  /* 011  */ V(0, 15, 1),\n  /* 100  */ V(14, 14, 3),\n  /* 101  */ V(13, 14, 3),\n  /* 110  */ V(14, 13, 3),\n  /* 111  */ V(12, 14, 3),\n\n  /* 0010 1101 ... */\n  /* 000  */ V(14, 12, 3),\t/* 180 */\n  /* 001  */ V(13, 13, 3),\n  /* 010  */ V(11, 14, 3),\n  /* 011  */ V(14, 11, 3),\n  /* 100  */ V(12, 13, 3),\n  /* 101  */ V(13, 12, 3),\n  /* 110  */ V(10, 14, 3),\n  /* 111  */ V(14, 10, 3),\n\n  /* 0010 1110 ... */\n  /* 000  */ V(11, 13, 3),\t/* 188 */\n  /* 001  */ V(13, 11, 3),\n  /* 010  */ V(12, 12, 3),\n  /* 011  */ V(9, 14, 3),\n  /* 100  */ V(14, 9, 3),\n  /* 101  */ V(10, 13, 3),\n  /* 110  */ V(13, 10, 3),\n  /* 111  */ V(11, 12, 3),\n\n  /* 0010 1111 ... */\n  /* 000  */ V(12, 11, 3),\t/* 196 */\n  /* 001  */ V(8, 14, 3),\n  /* 010  */ V(14, 8, 3),\n  /* 011  */ V(9, 13, 3),\n  /* 100  */ V(13, 9, 3),\n  /* 101  */ V(7, 14, 3),\n  /* 110  */ V(14, 7, 3),\n  /* 111  */ V(10, 12, 3),\n\n  /* 0100 0000 ... */\n  /* 0000 */ V(12, 10, 3),\t/* 204 */\n  /* 0001 */ V(12, 10, 3),\n  /* 0010 */ V(11, 11, 3),\n  /* 0011 */ V(11, 11, 3),\n  /* 0100 */ V(8, 13, 3),\n  /* 0101 */ V(8, 13, 3),\n  /* 0110 */ V(13, 8, 3),\n  /* 0111 */ V(13, 8, 3),\n  /* 1000 */ V(0, 14, 4),\n  /* 1001 */ V(14, 0, 4),\n  /* 1010 */ V(0, 13, 3),\n  /* 1011 */ V(0, 13, 3),\n  /* 1100 */ V(14, 6, 2),\n  /* 1101 */ V(14, 6, 2),\n  /* 1110 */ V(14, 6, 2),\n  /* 1111 */ V(14, 6, 2),\n\n  /* 0100 0001 ... */\n  /* 000  */ V(6, 14, 3),\t/* 220 */\n  /* 001  */ V(9, 12, 3),\n  /* 010  */ V(12, 9, 2),\n  /* 011  */ V(12, 9, 2),\n  /* 100  */ V(5, 14, 2),\n  /* 101  */ V(5, 14, 2),\n  /* 110  */ V(11, 10, 2),\n  /* 111  */ V(11, 10, 2),\n\n  /* 0100 0010 ... */\n  /* 000  */ V(14, 5, 2),\t/* 228 */\n  /* 001  */ V(14, 5, 2),\n  /* 010  */ V(10, 11, 3),\n  /* 011  */ V(7, 13, 3),\n  /* 100  */ V(13, 7, 2),\n  /* 101  */ V(13, 7, 2),\n  /* 110  */ V(14, 4, 2),\n  /* 111  */ V(14, 4, 2),\n\n  /* 0100 0011 ... */\n  /* 000  */ V(8, 12, 2),\t/* 236 */\n  /* 001  */ V(8, 12, 2),\n  /* 010  */ V(12, 8, 2),\n  /* 011  */ V(12, 8, 2),\n  /* 100  */ V(4, 14, 3),\n  /* 101  */ V(2, 14, 3),\n  /* 110  */ V(3, 14, 2),\n  /* 111  */ V(3, 14, 2),\n\n  /* 0100 0100 ... */\n  /* 00   */ V(6, 13, 2),\t/* 244 */\n  /* 01   */ V(13, 6, 2),\n  /* 10   */ V(14, 3, 2),\n  /* 11   */ V(9, 11, 2),\n\n  /* 0100 0101 ... */\n  /* 00   */ V(11, 9, 2),\t/* 248 */\n  /* 01   */ V(10, 10, 2),\n  /* 10   */ V(14, 2, 2),\n  /* 11   */ V(1, 14, 2),\n\n  /* 0100 0110 ... */\n  /* 00   */ V(14, 1, 2),\t/* 252 */\n  /* 01   */ V(5, 13, 2),\n  /* 10   */ V(13, 5, 2),\n  /* 11   */ V(7, 12, 2),\n\n  /* 0100 0111 ... */\n  /* 00   */ V(12, 7, 2),\t/* 256 */\n  /* 01   */ V(4, 13, 2),\n  /* 10   */ V(8, 11, 2),\n  /* 11   */ V(11, 8, 2),\n\n  /* 0100 1000 ... */\n  /* 00   */ V(13, 4, 2),\t/* 260 */\n  /* 01   */ V(9, 10, 2),\n  /* 10   */ V(10, 9, 2),\n  /* 11   */ V(6, 12, 2),\n\n  /* 0100 1001 ... */\n  /* 00   */ V(12, 6, 2),\t/* 264 */\n  /* 01   */ V(3, 13, 2),\n  /* 10   */ V(13, 3, 2),\n  /* 11   */ V(2, 13, 2),\n\n  /* 0100 1010 ... */\n  /* 00   */ V(13, 2, 2),\t/* 268 */\n  /* 01   */ V(1, 13, 2),\n  /* 10   */ V(7, 11, 2),\n  /* 11   */ V(11, 7, 2),\n\n  /* 0100 1011 ... */\n  /* 00   */ V(13, 1, 2),\t/* 272 */\n  /* 01   */ V(5, 12, 2),\n  /* 10   */ V(12, 5, 2),\n  /* 11   */ V(8, 10, 2),\n\n  /* 0100 1100 ... */\n  /* 00   */ V(10, 8, 2),\t/* 276 */\n  /* 01   */ V(9, 9, 2),\n  /* 10   */ V(4, 12, 2),\n  /* 11   */ V(12, 4, 2),\n\n  /* 0100 1101 ... */\n  /* 000  */ V(6, 11, 2),\t/* 280 */\n  /* 001  */ V(6, 11, 2),\n  /* 010  */ V(11, 6, 2),\n  /* 011  */ V(11, 6, 2),\n  /* 100  */ V(13, 0, 3),\n  /* 101  */ V(0, 12, 3),\n  /* 110  */ V(3, 12, 2),\n  /* 111  */ V(3, 12, 2),\n\n  /* 0100 1110 ... */\n  /* 00   */ V(12, 3, 2),\t/* 288 */\n  /* 01   */ V(7, 10, 2),\n  /* 10   */ V(10, 7, 2),\n  /* 11   */ V(2, 12, 2),\n\n  /* 0100 1111 ... */\n  /* 00   */ V(12, 2, 2),\t/* 292 */\n  /* 01   */ V(5, 11, 2),\n  /* 10   */ V(11, 5, 2),\n  /* 11   */ V(1, 12, 2),\n\n  /* 0101 0000 ... */\n  /* 00   */ V(8, 9, 2),\t/* 296 */\n  /* 01   */ V(9, 8, 2),\n  /* 10   */ V(12, 1, 2),\n  /* 11   */ V(4, 11, 2),\n\n  /* 0101 0001 ... */\n  /* 000  */ V(12, 0, 3),\t/* 300 */\n  /* 001  */ V(0, 11, 3),\n  /* 010  */ V(3, 11, 2),\n  /* 011  */ V(3, 11, 2),\n  /* 100  */ V(11, 0, 3),\n  /* 101  */ V(0, 10, 3),\n  /* 110  */ V(1, 10, 2),\n  /* 111  */ V(1, 10, 2),\n\n  /* 0101 0010 ... */\n  /* 00   */ V(11, 4, 1),\t/* 308 */\n  /* 01   */ V(11, 4, 1),\n  /* 10   */ V(6, 10, 2),\n  /* 11   */ V(10, 6, 2),\n\n  /* 0101 0011 ... */\n  /* 000  */ V(7, 9, 2),\t/* 312 */\n  /* 001  */ V(7, 9, 2),\n  /* 010  */ V(9, 7, 2),\n  /* 011  */ V(9, 7, 2),\n  /* 100  */ V(10, 0, 3),\n  /* 101  */ V(0, 9, 3),\n  /* 110  */ V(9, 0, 2),\n  /* 111  */ V(9, 0, 2),\n\n  /* 0101 0100 ... */\n  /* 0    */ V(11, 3, 1),\t/* 320 */\n  /* 1    */ V(8, 8, 1),\n\n  /* 0101 0101 ... */\n  /* 00   */ V(2, 11, 2),\t/* 322 */\n  /* 01   */ V(5, 10, 2),\n  /* 10   */ V(11, 2, 1),\n  /* 11   */ V(11, 2, 1),\n\n  /* 0101 0110 ... */\n  /* 00   */ V(10, 5, 2),\t/* 326 */\n  /* 01   */ V(1, 11, 2),\n  /* 10   */ V(11, 1, 2),\n  /* 11   */ V(6, 9, 2),\n\n  /* 0101 0111 ... */\n  /* 0    */ V(9, 6, 1),\t/* 330 */\n  /* 1    */ V(10, 4, 1),\n\n  /* 0101 1000 ... */\n  /* 00   */ V(4, 10, 2),\t/* 332 */\n  /* 01   */ V(7, 8, 2),\n  /* 10   */ V(8, 7, 1),\n  /* 11   */ V(8, 7, 1),\n\n  /* 0101 1001 ... */\n  /* 0    */ V(3, 10, 1),\t/* 336 */\n  /* 1    */ V(10, 3, 1),\n\n  /* 0101 1010 ... */\n  /* 0    */ V(5, 9, 1),\t/* 338 */\n  /* 1    */ V(9, 5, 1),\n\n  /* 0101 1011 ... */\n  /* 0    */ V(2, 10, 1),\t/* 340 */\n  /* 1    */ V(10, 2, 1),\n\n  /* 0101 1100 ... */\n  /* 0    */ V(10, 1, 1),\t/* 342 */\n  /* 1    */ V(6, 8, 1),\n\n  /* 0101 1101 ... */\n  /* 0    */ V(8, 6, 1),\t/* 344 */\n  /* 1    */ V(7, 7, 1),\n\n  /* 0101 1110 ... */\n  /* 0    */ V(4, 9, 1),\t/* 346 */\n  /* 1    */ V(9, 4, 1),\n\n  /* 0101 1111 ... */\n  /* 0    */ V(3, 9, 1),\t/* 348 */\n  /* 1    */ V(9, 3, 1),\n\n  /* 0110 0000 ... */\n  /* 0    */ V(5, 8, 1),\t/* 350 */\n  /* 1    */ V(8, 5, 1),\n\n  /* 0110 0001 ... */\n  /* 0    */ V(2, 9, 1),\t/* 352 */\n  /* 1    */ V(6, 7, 1),\n\n  /* 0110 0010 ... */\n  /* 0    */ V(7, 6, 1),\t/* 354 */\n  /* 1    */ V(9, 2, 1),\n\n  /* 0110 0011 ... */\n  /* 0    */ V(1, 9, 1),\t/* 356 */\n  /* 1    */ V(9, 1, 1),\n\n  /* 0110 0100 ... */\n  /* 0    */ V(4, 8, 1),\t/* 358 */\n  /* 1    */ V(8, 4, 1),\n\n  /* 0110 0101 ... */\n  /* 0    */ V(5, 7, 1),\t/* 360 */\n  /* 1    */ V(7, 5, 1),\n\n  /* 0110 0110 ... */\n  /* 0    */ V(3, 8, 1),\t/* 362 */\n  /* 1    */ V(8, 3, 1),\n\n  /* 0110 0111 ... */\n  /* 0    */ V(6, 6, 1),\t/* 364 */\n  /* 1    */ V(2, 8, 1),\n\n  /* 0110 1000 ... */\n  /* 0    */ V(8, 2, 1),\t/* 366 */\n  /* 1    */ V(1, 8, 1),\n\n  /* 0110 1001 ... */\n  /* 0    */ V(4, 7, 1),\t/* 368 */\n  /* 1    */ V(7, 4, 1),\n\n  /* 0110 1010 ... */\n  /* 00   */ V(8, 1, 1),\t/* 370 */\n  /* 01   */ V(8, 1, 1),\n  /* 10   */ V(0, 8, 2),\n  /* 11   */ V(8, 0, 2),\n\n  /* 0110 1011 ... */\n  /* 0    */ V(5, 6, 1),\t/* 374 */\n  /* 1    */ V(6, 5, 1),\n\n  /* 0110 1100 ... */\n  /* 00   */ V(1, 7, 1),\t/* 376 */\n  /* 01   */ V(1, 7, 1),\n  /* 10   */ V(0, 7, 2),\n  /* 11   */ V(7, 0, 2),\n\n  /* 0110 1110 ... */\n  /* 0    */ V(3, 7, 1),\t/* 380  */\n  /* 1    */ V(2, 7, 1),\n\n  /* 0111 1100 ... */\n  /* 0    */ V(0, 6, 1),\t/* 382 */\n  /* 1    */ V(6, 0, 1),\n\n  /* 1000 0011 ... */\n  /* 0    */ V(0, 5, 1),\t/* 384 */\n  /* 1    */ V(5, 0, 1)\n];\n\n/* hufftable constructor */\nfunction MP3Hufftable(table, linbits, startbits) {\n    this.table = table;\n    this.linbits = linbits;\n    this.startbits = startbits;\n};\n\n/* external tables */\nexports.huff_quad_table = [ hufftabA, hufftabB ];\nexports.huff_pair_table = [\n  /*  0 */ new MP3Hufftable(hufftab0,   0, 0),\n  /*  1 */ new MP3Hufftable(hufftab1,   0, 3),\n  /*  2 */ new MP3Hufftable(hufftab2,   0, 3),\n  /*  3 */ new MP3Hufftable(hufftab3,   0, 3),\n  /*  4 */ null, //new MP3Hufftable(0 /* not used */),\n  /*  5 */ new MP3Hufftable(hufftab5,   0, 3),\n  /*  6 */ new MP3Hufftable(hufftab6,   0, 4),\n  /*  7 */ new MP3Hufftable(hufftab7,   0, 4),\n  /*  8 */ new MP3Hufftable(hufftab8,   0, 4),\n  /*  9 */ new MP3Hufftable(hufftab9,   0, 4),\n  /* 10 */ new MP3Hufftable(hufftab10,  0, 4),\n  /* 11 */ new MP3Hufftable(hufftab11,  0, 4),\n  /* 12 */ new MP3Hufftable(hufftab12,  0, 4),\n  /* 13 */ new MP3Hufftable(hufftab13,  0, 4),\n  /* 14 */ null, //new MP3Hufftable(0 /* not used */),\n  /* 15 */ new MP3Hufftable(hufftab15,  0, 4),\n  /* 16 */ new MP3Hufftable(hufftab16,  1, 4),\n  /* 17 */ new MP3Hufftable(hufftab16,  2, 4),\n  /* 18 */ new MP3Hufftable(hufftab16,  3, 4),\n  /* 19 */ new MP3Hufftable(hufftab16,  4, 4),\n  /* 20 */ new MP3Hufftable(hufftab16,  6, 4),\n  /* 21 */ new MP3Hufftable(hufftab16,  8, 4),\n  /* 22 */ new MP3Hufftable(hufftab16, 10, 4),\n  /* 23 */ new MP3Hufftable(hufftab16, 13, 4),\n  /* 24 */ new MP3Hufftable(hufftab24,  4, 4),\n  /* 25 */ new MP3Hufftable(hufftab24,  5, 4),\n  /* 26 */ new MP3Hufftable(hufftab24,  6, 4),\n  /* 27 */ new MP3Hufftable(hufftab24,  7, 4),\n  /* 28 */ new MP3Hufftable(hufftab24,  8, 4),\n  /* 29 */ new MP3Hufftable(hufftab24,  9, 4),\n  /* 30 */ new MP3Hufftable(hufftab24, 11, 4),\n  /* 31 */ new MP3Hufftable(hufftab24, 13, 4)\n];\n","function IMDCT() {\n    this.tmp_imdct36 = new Float64Array(18);\n    this.tmp_dctIV = new Float64Array(18);\n    this.tmp_sdctII = new Float64Array(9);\n}\n\n// perform X[18]->x[36] IMDCT using Szu-Wei Lee's fast algorithm\nIMDCT.prototype.imdct36 = function(x, y) {\n    var tmp = this.tmp_imdct36;\n\n    /* DCT-IV */\n    this.dctIV(x, tmp);\n\n    // convert 18-point DCT-IV to 36-point IMDCT\n    for (var i =  0; i <  9; ++i) {\n        y[i] =  tmp[9 + i];\n    }\n    for (var i =  9; i < 27; ++i) {\n        y[i] = -tmp[36 - (9 + i) - 1];\n    }\n    for (var i = 27; i < 36; ++i) {\n        y[i] = -tmp[i - 27];\n    }\n};\n\nvar dctIV_scale = [];\nfor(i = 0; i < 18; i++) {\n    dctIV_scale[i] = 2 * Math.cos(Math.PI * (2 * i + 1) / (4 * 18));\n}\n\nIMDCT.prototype.dctIV = function(y, X) {\n    var tmp = this.tmp_dctIV;\n\n    // scaling\n    for (var i = 0; i < 18; ++i) {\n        tmp[i] = y[i] * dctIV_scale[i];\n    }\n\n    // SDCT-II\n    this.sdctII(tmp, X);\n\n    // scale reduction and output accumulation\n    X[0] /= 2;\n    for (var i = 1; i < 18; ++i) {\n        X[i] = X[i] / 2 - X[i - 1];\n    }\n};\n\nvar sdctII_scale = [];\nfor (var i = 0; i < 9; ++i) {\n    sdctII_scale[i] = 2 * Math.cos(Math.PI * (2 * i + 1) / (2 * 18));\n}\n\nIMDCT.prototype.sdctII = function(x, X) {\n    // divide the 18-point SDCT-II into two 9-point SDCT-IIs\n    var tmp = this.tmp_sdctII;\n\n    // even input butterfly\n    for (var i = 0; i < 9; ++i) {\n        tmp[i] = x[i] + x[18 - i - 1];\n    }\n\n    fastsdct(tmp, X, 0);\n\n    // odd input butterfly and scaling\n    for (var i = 0; i < 9; ++i) {\n        tmp[i] = (x[i] - x[18 - i - 1]) * sdctII_scale[i];\n    }\n\n    fastsdct(tmp, X, 1);\n\n    // output accumulation\n    for (var i = 3; i < 18; i += 2) {\n        X[i] -= X[i - 2];\n    }\n};\n\nvar c0 = 2 * Math.cos( 1 * Math.PI / 18);\nvar c1 = 2 * Math.cos( 3 * Math.PI / 18);\nvar c2 = 2 * Math.cos( 4 * Math.PI / 18);\nvar c3 = 2 * Math.cos( 5 * Math.PI / 18);\nvar c4 = 2 * Math.cos( 7 * Math.PI / 18);\nvar c5 = 2 * Math.cos( 8 * Math.PI / 18);\nvar c6 = 2 * Math.cos(16 * Math.PI / 18);\n\nfunction fastsdct(x, y, offset) {\n    var a0,  a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10, a11, a12;\n    var a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25;\n    var m0,  m1,  m2,  m3,  m4,  m5,  m6,  m7;\n\n    a0 = x[3] + x[5];\n    a1 = x[3] - x[5];\n    a2 = x[6] + x[2];\n    a3 = x[6] - x[2];\n    a4 = x[1] + x[7];\n    a5 = x[1] - x[7];\n    a6 = x[8] + x[0];\n    a7 = x[8] - x[0];\n\n    a8  = a0  + a2;\n    a9  = a0  - a2;\n    a10 = a0  - a6;\n    a11 = a2  - a6;\n    a12 = a8  + a6;\n    a13 = a1  - a3;\n    a14 = a13 + a7;\n    a15 = a3  + a7;\n    a16 = a1  - a7;\n    a17 = a1  + a3;\n\n    m0 = a17 * -c3;\n    m1 = a16 * -c0;\n    m2 = a15 * -c4;\n    m3 = a14 * -c1;\n    m4 = a5  * -c1;\n    m5 = a11 * -c6;\n    m6 = a10 * -c5;\n    m7 = a9  * -c2;\n\n    a18 =     x[4] + a4;\n    a19 = 2 * x[4] - a4;\n    a20 = a19 + m5;\n    a21 = a19 - m5;\n    a22 = a19 + m6;\n    a23 = m4  + m2;\n    a24 = m4  - m2;\n    a25 = m4  + m1;\n\n    // output to every other slot for convenience\n    y[offset +  0] = a18 + a12;\n    y[offset +  2] = m0  - a25;\n    y[offset +  4] = m7  - a20;\n    y[offset +  6] = m3;\n    y[offset +  8] = a21 - m6;\n    y[offset + 10] = a24 - m1;\n    y[offset + 12] = a12 - 2 * a18;\n    y[offset + 14] = a23 + m0;\n    y[offset + 16] = a22 + m7;\n}\n\nIMDCT.S = [\n  /*  0 */  [ 0.608761429,\n              -0.923879533,\n              -0.130526192,\n               0.991444861,\n              -0.382683432,\n              -0.793353340 ],\n\n  /*  6 */  [ -0.793353340,\n               0.382683432,\n               0.991444861,\n               0.130526192,\n              -0.923879533,\n              -0.608761429 ],\n\n  /*  1 */  [  0.382683432,\n              -0.923879533,\n               0.923879533,\n              -0.382683432,\n              -0.382683432,\n               0.923879533 ],\n\n  /*  7 */  [ -0.923879533,\n              -0.382683432,\n               0.382683432,\n               0.923879533,\n               0.923879533,\n               0.382683432 ],\n\n  /*  2 */  [  0.130526192,\n              -0.382683432,\n               0.608761429,\n              -0.793353340,\n               0.923879533,\n              -0.991444861 ],\n\n  /*  8 */  [ -0.991444861,\n              -0.923879533,\n              -0.793353340,\n              -0.608761429,\n              -0.382683432,\n              -0.130526192 ]\n];\n\nmodule.exports = IMDCT;\n","var AV = require('av');\nvar tables = require('./tables');\nvar MP3FrameHeader = require('./header');\nvar MP3Frame = require('./frame');\nvar huffman = require('./huffman');\nvar IMDCT = require('./imdct');\nvar utils = require('./utils');\n\nfunction MP3SideInfo() {\n    this.main_data_begin = null;\n    this.private_bits = null;\n    this.gr = [new MP3Granule(), new MP3Granule()];\n    this.scfsi = new Uint8Array(2);\n}\n\nfunction MP3Granule() {\n    this.ch = [new MP3Channel(), new MP3Channel()];\n}\n\nfunction MP3Channel() {\n    // from side info\n    this.part2_3_length    = null;\n    this.big_values        = null;\n    this.global_gain       = null;\n    this.scalefac_compress = null;\n    \n    this.flags         = null;\n    this.block_type    = null;\n    this.table_select  = new Uint8Array(3);\n    this.subblock_gain = new Uint8Array(3);\n    this.region0_count = null;\n    this.region1_count = null;\n    \n    // from main_data\n    this.scalefac = new Uint8Array(39);\n}\n\nfunction Layer3() {\n    this.imdct = new IMDCT();\n    this.si = new MP3SideInfo();\n    \n    // preallocate reusable typed arrays for performance\n    this.xr = [new Float64Array(576), new Float64Array(576)];\n    this._exponents = new Int32Array(39);\n    this.reqcache = new Float64Array(16);\n    this.modes = new Int16Array(39);\n    this.output = new Float64Array(36);\n    \n    this.tmp = utils.makeArray([32, 3, 6]);\n    this.tmp2 = new Float64Array(32 * 3 * 6);\n}\n\nMP3Frame.layers[3] = Layer3;\n\nLayer3.prototype.decode = function(stream, frame) {\n    var header = frame.header;\n    var next_md_begin = 0;\n    var md_len = 0;\n    \n    var nch = header.nchannels();\n    var si_len = (header.flags & MP3FrameHeader.FLAGS.LSF_EXT) ? (nch === 1 ? 9 : 17) : (nch === 1 ? 17 : 32);\n        \n    // check frame sanity\n    if (stream.next_frame - stream.nextByte() < si_len) {\n        stream.md_len = 0;\n        throw new Error('Bad frame length');\n    }\n    \n    // check CRC word\n    if (header.flags & MP3FrameHeader.FLAGS.PROTECTION) {\n        // TODO: crc check\n    }\n    \n    // decode frame side information\n    var sideInfo = this.sideInfo(stream, nch, header.flags & MP3FrameHeader.FLAGS.LSF_EXT);        \n    var si = sideInfo.si;\n    var data_bitlen = sideInfo.data_bitlen;\n    var priv_bitlen = sideInfo.priv_bitlen;\n    \n    header.flags        |= priv_bitlen;\n    header.private_bits |= si.private_bits;\n    \n    // find main_data of next frame\n    var peek = stream.copy();\n    peek.seek(stream.next_frame * 8);\n    \n    var nextHeader = peek.read(16);    \n    if ((nextHeader & 0xffe6) === 0xffe2) { // syncword | layer\n        if ((nextHeader & 1) === 0) // protection bit\n            peek.advance(16); // crc check\n            \n        peek.advance(16); // skip the rest of the header\n        next_md_begin = peek.read((nextHeader & 8) ? 9 : 8);\n    }\n    \n    // find main_data of this frame\n    var frame_space = stream.next_frame - stream.nextByte();\n    \n    if (next_md_begin > si.main_data_begin + frame_space)\n        next_md_begin = 0;\n        \n    var md_len = si.main_data_begin + frame_space - next_md_begin;\n    var frame_used = 0;\n    var ptr;\n    \n    if (si.main_data_begin === 0) {\n        ptr = stream.stream;\n        stream.md_len = 0;\n        frame_used = md_len;\n    } else {\n        if (si.main_data_begin > stream.md_len) {\n            throw new Error('bad main_data_begin pointer');\n        } else {\n            var old_md_len = stream.md_len;\n            \n            if (md_len > si.main_data_begin) {\n                if (stream.md_len + md_len - si.main_data_begin > MP3FrameHeader.BUFFER_MDLEN) {\n                    throw new Error(\"Assertion failed: (stream.md_len + md_len - si.main_data_begin <= MAD_MP3FrameHeader.BUFFER_MDLEN)\");\n                }\n                \n                frame_used = md_len - si.main_data_begin;\n                this.memcpy(stream.main_data, stream.md_len, stream.stream.stream, stream.nextByte(), frame_used);\n                stream.md_len += frame_used;\n            }\n            \n            ptr = new AV.Bitstream(AV.Stream.fromBuffer(new AV.Buffer(stream.main_data)));\n            ptr.advance((old_md_len - si.main_data_begin) * 8);\n        }\n    }\n    \n    var frame_free = frame_space - frame_used;\n    \n    // decode main_data\n    this.decodeMainData(ptr, frame, si, nch);\n    \n    // preload main_data buffer with up to 511 bytes for next frame(s)\n    if (frame_free >= next_md_begin) {\n        this.memcpy(stream.main_data, 0, stream.stream.stream, stream.next_frame - next_md_begin, next_md_begin);\n        stream.md_len = next_md_begin;\n    } else {\n        if (md_len < si.main_data_begin) {\n            var extra = si.main_data_begin - md_len;\n            if (extra + frame_free > next_md_begin)\n                extra = next_md_begin - frame_free;\n\n            if (extra < stream.md_len) {\n                this.memcpy(stream.main_data, 0, stream.main_data, stream.md_len - extra, extra);\n                stream.md_len = extra;\n            }\n        } else {\n            stream.md_len = 0;\n        }\n        \n        this.memcpy(stream.main_data, stream.md_len, stream.stream.stream, stream.next_frame - frame_free, frame_free);\n        stream.md_len += frame_free;\n    }\n};\n\nLayer3.prototype.memcpy = function(dst, dstOffset, pSrc, srcOffset, length) {\n    var subarr;\n    if (pSrc.subarray)\n        subarr = pSrc.subarray(srcOffset, srcOffset + length);\n    else\n        subarr = pSrc.peekBuffer(srcOffset - pSrc.offset, length).data;\n\n    // oh my, memcpy actually exists in JavaScript?\n    dst.set(subarr, dstOffset);\n    return dst;\n};\n\nLayer3.prototype.sideInfo = function(stream, nch, lsf) {\n    var si = this.si;\n    var data_bitlen = 0;\n    var priv_bitlen = lsf ? ((nch === 1) ? 1 : 2) : ((nch === 1) ? 5 : 3);\n    \n    si.main_data_begin = stream.read(lsf ? 8 : 9);\n    si.private_bits    = stream.read(priv_bitlen);\n\n    var ngr = 1;\n    if (!lsf) {\n        ngr = 2;\n        for (var ch = 0; ch < nch; ++ch)\n            si.scfsi[ch] = stream.read(4);\n    }\n    \n    for (var gr = 0; gr < ngr; gr++) {\n        var granule = si.gr[gr];\n        \n        for (var ch = 0; ch < nch; ch++) {\n            var channel = granule.ch[ch];\n            \n            channel.part2_3_length    = stream.read(12);\n            channel.big_values        = stream.read(9);\n            channel.global_gain       = stream.read(8);\n            channel.scalefac_compress = stream.read(lsf ? 9 : 4);\n\n            data_bitlen += channel.part2_3_length;\n\n            if (channel.big_values > 288)\n                throw new Error('bad big_values count');\n\n            channel.flags = 0;\n\n            // window_switching_flag\n            if (stream.read(1)) {\n                channel.block_type = stream.read(2);\n\n                if (channel.block_type === 0)\n                    throw new Error('reserved block_type');\n\n                if (!lsf && channel.block_type === 2 && si.scfsi[ch])\n                    throw new Error('bad scalefactor selection info');\n\n                channel.region0_count = 7;\n                channel.region1_count = 36;\n\n                if (stream.read(1))\n                    channel.flags |= tables.MIXED_BLOCK_FLAG;\n                else if (channel.block_type === 2)\n                    channel.region0_count = 8;\n\n                for (var i = 0; i < 2; i++)\n                    channel.table_select[i] = stream.read(5);\n\n                for (var i = 0; i < 3; i++)\n                    channel.subblock_gain[i] = stream.read(3);\n            } else {\n                channel.block_type = 0;\n\n                for (var i = 0; i < 3; i++)\n                    channel.table_select[i] = stream.read(5);\n\n                channel.region0_count = stream.read(4);\n                channel.region1_count = stream.read(3);\n            }\n\n            // [preflag,] scalefac_scale, count1table_select\n            channel.flags |= stream.read(lsf ? 2 : 3);\n        }\n    }\n    \n    return {\n        si: si,\n        data_bitlen: data_bitlen,\n        priv_bitlen: priv_bitlen\n    };\n};\n\nLayer3.prototype.decodeMainData = function(stream, frame, si, nch) {\n    var header = frame.header;\n    var sfreq = header.samplerate;\n\n    if (header.flags & MP3FrameHeader.FLAGS.MPEG_2_5_EXT)\n        sfreq *= 2;\n\n    // 48000 => 0, 44100 => 1, 32000 => 2,\n    // 24000 => 3, 22050 => 4, 16000 => 5\n    var sfreqi = ((sfreq >>  7) & 0x000f) + ((sfreq >> 15) & 0x0001) - 8;\n\n    if (header.flags & MP3FrameHeader.FLAGS.MPEG_2_5_EXT)\n        sfreqi += 3;\n        \n    // scalefactors, Huffman decoding, requantization\n    var ngr = (header.flags & MP3FrameHeader.FLAGS.LSF_EXT) ? 1 : 2;\n    var xr = this.xr;\n    \n    for (var gr = 0; gr < ngr; ++gr) {\n        var granule = si.gr[gr];\n        var sfbwidth = [];\n        var l = 0;\n        \n        for (var ch = 0; ch < nch; ++ch) {\n            var channel = granule.ch[ch];\n            var part2_length;\n            \n            sfbwidth[ch] = tables.SFBWIDTH_TABLE[sfreqi].l;\n            if (channel.block_type === 2) {\n                sfbwidth[ch] = (channel.flags & tables.MIXED_BLOCK_FLAG) ? tables.SFBWIDTH_TABLE[sfreqi].m : tables.SFBWIDTH_TABLE[sfreqi].s;\n            }\n\n            if (header.flags & MP3FrameHeader.FLAGS.LSF_EXT) {\n                part2_length = this.scalefactors_lsf(stream, channel, ch === 0 ? 0 : si.gr[1].ch[1], header.mode_extension);\n            } else {\n                part2_length = this.scalefactors(stream, channel, si.gr[0].ch[ch], gr === 0 ? 0 : si.scfsi[ch]);\n            }\n\n            this.huffmanDecode(stream, xr[ch], channel, sfbwidth[ch], part2_length);\n        }\n        \n        // joint stereo processing\n        if (header.mode === MP3FrameHeader.MODE.JOINT_STEREO && header.mode_extension !== 0)\n            this.stereo(xr, si.gr, gr, header, sfbwidth[0]);\n        \n        // reordering, alias reduction, IMDCT, overlap-add, frequency inversion\n        for (var ch = 0; ch < nch; ch++) {\n            var channel = granule.ch[ch];\n            var sample = frame.sbsample[ch].slice(18 * gr);\n            \n            var sb, l = 0, i, sblimit;\n            var output = this.output;\n            \n            if (channel.block_type === 2) {\n                this.reorder(xr[ch], channel, sfbwidth[ch]);\n\n                /*\n                 * According to ISO/IEC 11172-3, \"Alias reduction is not applied for\n                 * granules with block_type === 2 (short block).\" However, other\n                 * sources suggest alias reduction should indeed be performed on the\n                 * lower two subbands of mixed blocks. Most other implementations do\n                 * this, so by default we will too.\n                 */\n                if (channel.flags & tables.MIXED_BLOCK_FLAG)\n                    this.aliasreduce(xr[ch], 36);\n            } else {\n                this.aliasreduce(xr[ch], 576);\n            }\n            \n            // subbands 0-1\n            if (channel.block_type !== 2 || (channel.flags & tables.MIXED_BLOCK_FLAG)) {\n                var block_type = channel.block_type;\n                if (channel.flags & tables.MIXED_BLOCK_FLAG)\n                    block_type = 0;\n\n                // long blocks\n                for (var sb = 0; sb < 2; ++sb, l += 18) {\n                    this.imdct_l(xr[ch].subarray(l, l + 18), output, block_type);\n                    this.overlap(output, frame.overlap[ch][sb], sample, sb);\n                }\n            } else {\n                // short blocks\n                for (var sb = 0; sb < 2; ++sb, l += 18) {\n                    this.imdct_s(xr[ch].subarray(l, l + 18), output);\n                    this.overlap(output, frame.overlap[ch][sb], sample, sb);\n                }\n            }\n            \n            this.freqinver(sample, 1);\n\n            // (nonzero) subbands 2-31\n            var i = 576;\n            while (i > 36 && xr[ch][i - 1] === 0) {\n                --i;\n            }\n            \n            sblimit = 32 - (((576 - i) / 18) << 0);\n\n            if (channel.block_type !== 2) {\n                // long blocks\n                for (var sb = 2; sb < sblimit; ++sb, l += 18) {\n                    this.imdct_l(xr[ch].subarray(l, l + 18), output, channel.block_type);\n                    this.overlap(output, frame.overlap[ch][sb], sample, sb);\n\n                    if (sb & 1)\n                        this.freqinver(sample, sb);\n                }\n            } else {\n                // short blocks\n                for (var sb = 2; sb < sblimit; ++sb, l += 18) {\n                    this.imdct_s(xr[ch].subarray(l, l + 18), output);\n                    this.overlap(output, frame.overlap[ch][sb], sample, sb);\n\n                    if (sb & 1)\n                        this.freqinver(sample, sb);\n                }\n            }\n            \n            // remaining (zero) subbands\n            for (var sb = sblimit; sb < 32; ++sb) {\n                this.overlap_z(frame.overlap[ch][sb], sample, sb);\n\n                if (sb & 1)\n                    this.freqinver(sample, sb);\n            }\n        }\n    }\n};\n\nLayer3.prototype.scalefactors = function(stream, channel, gr0ch, scfsi) {\n    var start = stream.offset();\n    var slen1 = tables.SFLEN_TABLE[channel.scalefac_compress].slen1;\n    var slen2 = tables.SFLEN_TABLE[channel.scalefac_compress].slen2;\n    var sfbi;\n    \n    if (channel.block_type === 2) {\n        sfbi = 0;\n\n        var nsfb = (channel.flags & tables.MIXED_BLOCK_FLAG) ? 8 + 3 * 3 : 6 * 3;\n        while (nsfb--)\n            channel.scalefac[sfbi++] = stream.read(slen1);\n\n        nsfb = 6 * 3;\n        while (nsfb--)\n            channel.scalefac[sfbi++] = stream.read(slen2);\n\n        nsfb = 1 * 3;\n        while (nsfb--)\n            channel.scalefac[sfbi++] = 0;\n    } else {\n        if (scfsi & 0x8) {\n            for (var sfbi = 0; sfbi < 6; ++sfbi)\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\n        } else {\n            for (var sfbi = 0; sfbi < 6; ++sfbi)\n                channel.scalefac[sfbi] = stream.read(slen1);\n        }\n\n        if (scfsi & 0x4) {\n            for (var sfbi = 6; sfbi < 11; ++sfbi)\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\n        } else {\n            for (var sfbi = 6; sfbi < 11; ++sfbi)\n                channel.scalefac[sfbi] = stream.read(slen1);\n        }\n\n        if (scfsi & 0x2) {\n            for (var sfbi = 11; sfbi < 16; ++sfbi)\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\n        } else {\n            for (var sfbi = 11; sfbi < 16; ++sfbi)\n                channel.scalefac[sfbi] = stream.read(slen2);\n        }\n\n        if (scfsi & 0x1) {\n            for (var sfbi = 16; sfbi < 21; ++sfbi)\n                channel.scalefac[sfbi] = gr0ch.scalefac[sfbi];\n        } else {\n            for (var sfbi = 16; sfbi < 21; ++sfbi)\n                channel.scalefac[sfbi] = stream.read(slen2);\n        }\n\n        channel.scalefac[21] = 0;\n    }\n    \n    return stream.offset() - start;\n};\n\nLayer3.prototype.scalefactors_lsf = function(stream, channel, gr1ch, mode_extension) {\n    var start = stream.offset();\n    var scalefac_compress = channel.scalefac_compress;\n    var index = channel.block_type === 2 ? (channel.flags & tables.MIXED_BLOCK_FLAG ? 2 : 1) : 0;\n    var slen = new Int32Array(4);\n    var nsfb;\n    \n    if (!((mode_extension & tables.I_STEREO) && gr1ch)) {\n        if (scalefac_compress < 400) {\n            slen[0] = (scalefac_compress >>> 4) / 5;\n            slen[1] = (scalefac_compress >>> 4) % 5;\n            slen[2] = (scalefac_compress % 16) >>> 2;\n            slen[3] =  scalefac_compress %  4;\n        \n            nsfb = tables.NSFB_TABLE[0][index];\n        } else if (scalefac_compress < 500) {\n            scalefac_compress -= 400;\n\n            slen[0] = (scalefac_compress >>> 2) / 5;\n            slen[1] = (scalefac_compress >>> 2) % 5;\n            slen[2] =  scalefac_compress % 4;\n            slen[3] = 0;\n\n            nsfb = tables.NSFB_TABLE[1][index];\n        } else {\n            scalefac_compress -= 500;\n\n            slen[0] = scalefac_compress / 3;\n            slen[1] = scalefac_compress % 3;\n            slen[2] = 0;\n            slen[3] = 0;\n\n            channel.flags |= tables.PREFLAG;\n            nsfb = tables.NSFB_TABLE[2][index];\n        }\n        \n        var n = 0;\n        for (var part = 0; part < 4; part++) {\n            for (var i = 0; i < nsfb[part]; i++) {\n                channel.scalefac[n++] = stream.read(slen[part]);\n            }\n        }\n        \n        while (n < 39) {\n            channel.scalefac[n++] = 0;\n        }\n    } else {  // (mode_extension & tables.I_STEREO) && gr1ch (i.e. ch == 1)\n        scalefac_compress >>>= 1;\n        \n        if (scalefac_compress < 180) {\n            slen[0] =  scalefac_compress / 36;\n            slen[1] = (scalefac_compress % 36) / 6;\n            slen[2] = (scalefac_compress % 36) % 6;\n            slen[3] = 0;\n\n            nsfb = tables.NSFB_TABLE[3][index];\n        } else if (scalefac_compress < 244) {\n            scalefac_compress -= 180;\n\n            slen[0] = (scalefac_compress % 64) >>> 4;\n            slen[1] = (scalefac_compress % 16) >>> 2;\n            slen[2] =  scalefac_compress %  4;\n            slen[3] = 0;\n\n            nsfb = tables.NSFB_TABLE[4][index];\n        } else {\n            scalefac_compress -= 244;\n\n            slen[0] = scalefac_compress / 3;\n            slen[1] = scalefac_compress % 3;\n            slen[2] = 0;\n            slen[3] = 0;\n\n            nsfb = tables.NSFB_TABLE[5][index];\n        }\n        \n        var n = 0;\n        for (var part = 0; part < 4; ++part) {\n            var max = (1 << slen[part]) - 1;\n            for (var i = 0; i < nsfb[part]; ++i) {\n                var is_pos = stream.read(slen[part]);\n\n                channel.scalefac[n] = is_pos;\n                gr1ch.scalefac[n++] = is_pos === max ? 1 : 0;\n            }\n        }\n        \n        while (n < 39) {\n            channel.scalefac[n] = 0;\n            gr1ch.scalefac[n++] = 0;  // apparently not illegal\n        }\n    }\n    \n    return stream.offset() - start;\n};\n\nLayer3.prototype.huffmanDecode = function(stream, xr, channel, sfbwidth, part2_length) {\n    var exponents = this._exponents;\n    var sfbwidthptr = 0;\n    \n    var bits_left = channel.part2_3_length - part2_length;    \n    if (bits_left < 0)\n        throw new Error('bad audio data length');\n    \n    this.exponents(channel, sfbwidth, exponents);\n    \n    var peek = stream.copy();\n    stream.advance(bits_left);\n    \n    /* align bit reads to byte boundaries */\n    var cachesz  = 8 - peek.bitPosition;\n    cachesz += ((32 - 1 - 24) + (24 - cachesz)) & ~7;\n    \n    var bitcache = peek.read(cachesz);\n    bits_left -= cachesz;\n\n    var xrptr = 0;\n    \n    // big_values\n    var region = 0;\n    var reqcache = this.reqcache;\n    \n    var sfbound = xrptr + sfbwidth[sfbwidthptr++];\n    var rcount  = channel.region0_count + 1;\n    \n    var entry = huffman.huff_pair_table[channel.table_select[region]];\n    var table     = entry.table;\n    var linbits   = entry.linbits;\n    var startbits = entry.startbits;\n    \n    if (typeof table === 'undefined')\n        throw new Error('bad Huffman table select');\n        \n    var expptr = 0;\n    var exp = exponents[expptr++];\n    var reqhits = 0;\n    var big_values = channel.big_values;\n    \n    while (big_values-- && cachesz + bits_left > 0) {\n         if (xrptr === sfbound) {\n             sfbound += sfbwidth[sfbwidthptr++];\n\n             // change table if region boundary\n             if (--rcount === 0) {\n                 if (region === 0)\n                     rcount = channel.region1_count + 1;\n                 else\n                     rcount = 0; // all remaining\n\n                 entry     = huffman.huff_pair_table[channel.table_select[++region]];\n                 table     = entry.table;\n                 linbits   = entry.linbits;\n                 startbits = entry.startbits;\n\n                 if (typeof table === 'undefined')\n                     throw new Error('bad Huffman table select');\n             }\n\n             if (exp !== exponents[expptr]) {\n                 exp = exponents[expptr];\n                 reqhits = 0;\n             }\n\n             ++expptr;\n         }\n         \n         if (cachesz < 21) {\n             var bits   = ((32 - 1 - 21) + (21 - cachesz)) & ~7;\n             bitcache   = (bitcache << bits) | peek.read(bits);\n             cachesz   += bits;\n             bits_left -= bits;\n         }\n         \n         var clumpsz = startbits;\n         var pair = table[ (((bitcache) >> ((cachesz) - (clumpsz))) & ((1 << (clumpsz)) - 1))];\n         \n         while (!pair.final) {\n             cachesz -= clumpsz;\n             clumpsz = pair.ptr.bits;\n             pair    = table[pair.ptr.offset + (((bitcache) >> ((cachesz) - (clumpsz))) & ((1 << (clumpsz)) - 1))];\n         }\n         \n         cachesz -= pair.value.hlen;\n         \n         if (linbits) {\n             var value = pair.value.x;\n             var x_final = false;\n             \n             switch (value) {\n                 case 0:\n                     xr[xrptr] = 0;\n                     break;\n\n                 case 15:\n                     if (cachesz < linbits + 2) {\n                         bitcache   = (bitcache << 16) | peek.read(16);\n                         cachesz   += 16;\n                         bits_left -= 16;\n                     }\n\n                     value += (((bitcache) >> ((cachesz) - (linbits))) & ((1 << (linbits)) - 1));\n                     cachesz -= linbits;\n\n                     requantized = this.requantize(value, exp);\n                     x_final = true; // simulating goto, yay\n                     break;\n\n                 default:\n                     if (reqhits & (1 << value)) {\n                         requantized = reqcache[value];\n                     } else {\n                         reqhits |= (1 << value);\n                         requantized = reqcache[value] = this.requantize(value, exp);\n                     }\n                     \n                     x_final = true;\n             }\n             \n             if(x_final) {\n                 xr[xrptr] = ((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized;\n             }\n             \n             value = pair.value.y;\n             var y_final = false;\n             \n             switch (value) {\n                 case 0:\n                     xr[xrptr + 1] = 0;\n                     break;\n\n                 case 15:\n                     if (cachesz < linbits + 1) {\n                         bitcache   = (bitcache << 16) | peek.read(16);\n                         cachesz   += 16;\n                         bits_left -= 16;\n                     }\n\n                     value += (((bitcache) >> ((cachesz) - (linbits))) & ((1 << (linbits)) - 1));\n                     cachesz -= linbits;\n\n                     requantized = this.requantize(value, exp);\n                     y_final = true;\n                     break; // simulating goto, yayzor\n\n                 default:\n                     if (reqhits & (1 << value)) {\n                         requantized = reqcache[value];\n                     } else {\n                         reqhits |= (1 << value);\n                         reqcache[value] = this.requantize(value, exp);\n                         requantized = reqcache[value];\n                     }\n                     \n                     y_final = true;\n             }\n             \n             if(y_final) {\n                 xr[xrptr + 1] = ((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized;\n             }\n             \n         } else {\n             var value = pair.value.x;\n\n             if (value === 0) {\n                 xr[xrptr] = 0;\n             } else {\n                 if (reqhits & (1 << value))\n                     requantized = reqcache[value];\n                 else {\n                     reqhits |= (1 << value);\n                     requantized = reqcache[value] = this.requantize(value, exp);\n                 }\n\n                 xr[xrptr] = ((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized;\n             }\n\n             value = pair.value.y;\n\n             if (value === 0) {\n                 xr[xrptr + 1] = 0;\n             } else {\n                 if (reqhits & (1 << value))\n                     requantized = reqcache[value];\n                 else {\n                     reqhits |= (1 << value);\n                     requantized = reqcache[value] = this.requantize(value, exp);\n                 }\n\n                 xr[xrptr + 1] = ((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized;\n             }\n         }\n\n         xrptr += 2;\n    }\n    \n    if (cachesz + bits_left < 0)\n        throw new Error('Huffman data overrun');\n    \n    // count1    \n    var table = huffman.huff_quad_table[channel.flags & tables.COUNT1TABLE_SELECT];\n    var requantized = this.requantize(1, exp);\n    \n    while (cachesz + bits_left > 0 && xrptr <= 572) {\n        if (cachesz < 10) {\n            bitcache   = (bitcache << 16) | peek.read(16);\n            cachesz   += 16;\n            bits_left -= 16;\n        }\n        \n        var quad = table[(((bitcache) >> ((cachesz) - (4))) & ((1 << (4)) - 1))];\n        \n        // quad tables guaranteed to have at most one extra lookup\n        if (!quad.final) {\n            cachesz -= 4;\n            quad = table[quad.ptr.offset + (((bitcache) >> ((cachesz) - (quad.ptr.bits))) & ((1 << (quad.ptr.bits)) - 1))];\n        }\n        \n        cachesz -= quad.value.hlen;\n\n        if (xrptr === sfbound) {\n            sfbound += sfbwidth[sfbwidthptr++];\n\n            if (exp !== exponents[expptr]) {\n                exp = exponents[expptr];\n                requantized = this.requantize(1, exp);\n            }\n\n            ++expptr;\n        }\n        \n        // v (0..1)\n        xr[xrptr] = quad.value.v ? (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\n\n        // w (0..1)\n        xr[xrptr + 1] = quad.value.w ? (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\n\n        xrptr += 2;\n        if (xrptr === sfbound) {\n            sfbound += sfbwidth[sfbwidthptr++];\n\n            if (exp !== exponents[expptr]) {\n                exp = exponents[expptr];\n                requantized = this.requantize(1, exp);\n            }\n\n            ++expptr;\n        }\n        \n        // x (0..1)\n        xr[xrptr] = quad.value.x ? (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\n\n        // y (0..1)\n        xr[xrptr + 1] = quad.value.y ? (((bitcache) & (1 << ((cachesz--) - 1))) ? -requantized : requantized) : 0;\n\n        xrptr += 2;\n        \n        if (cachesz + bits_left < 0) {\n            // technically the bitstream is misformatted, but apparently\n            // some encoders are just a bit sloppy with stuffing bits\n            xrptr -= 4;\n        }\n    }\n    \n    if (-bits_left > MP3FrameHeader.BUFFER_GUARD * 8) {\n        throw new Error(\"assertion failed: (-bits_left <= MP3FrameHeader.BUFFER_GUARD * CHAR_BIT)\");\n    }\n    \n    // rzero\n    while (xrptr < 576) {\n        xr[xrptr]     = 0;\n        xr[xrptr + 1] = 0;\n        xrptr += 2;\n    }\n};\n\nLayer3.prototype.requantize = function(value, exp) {\n    // usual (x >> 0) tricks to make sure frac and exp stay integers\n    var frac = (exp % 4) >> 0;  // assumes sign(frac) === sign(exp)\n    exp = (exp / 4) >> 0;\n\n    var requantized = Math.pow(value, 4.0 / 3.0);\n    requantized *= Math.pow(2.0, (exp / 4.0));\n    \n    if (frac) {\n        requantized *= Math.pow(2.0, (frac / 4.0));\n    }\n    \n    if (exp < 0) {\n        requantized /= Math.pow(2.0, -exp * (3.0 / 4.0));\n    }\n\n    return requantized;\n};\n\nLayer3.prototype.exponents = function(channel, sfbwidth, exponents) {\n    var gain = channel.global_gain - 210;\n    var scalefac_multiplier = (channel.flags & tables.SCALEFAC_SCALE) ? 2 : 1;\n    \n    if (channel.block_type === 2) {\n        var sfbi = 0, l = 0;\n        \n        if (channel.flags & tables.MIXED_BLOCK_FLAG) {\n            var premask = (channel.flags & tables.PREFLAG) ? ~0 : 0;\n            \n            // long block subbands 0-1\n            while (l < 36) {\n                exponents[sfbi] = gain - ((channel.scalefac[sfbi] + (tables.PRETAB[sfbi] & premask)) << scalefac_multiplier);\n                l += sfbwidth[sfbi++];\n            }\n        }\n        \n        // this is probably wrong for 8000 Hz short/mixed blocks\n        var gain0 = gain - 8 * channel.subblock_gain[0];\n        var gain1 = gain - 8 * channel.subblock_gain[1];\n        var gain2 = gain - 8 * channel.subblock_gain[2];\n        \n        while (l < 576) {\n            exponents[sfbi + 0] = gain0 - (channel.scalefac[sfbi + 0] << scalefac_multiplier);\n            exponents[sfbi + 1] = gain1 - (channel.scalefac[sfbi + 1] << scalefac_multiplier);\n            exponents[sfbi + 2] = gain2 - (channel.scalefac[sfbi + 2] << scalefac_multiplier);\n            \n            l += 3 * sfbwidth[sfbi];\n            sfbi += 3;\n        }\n    } else {\n        if (channel.flags & tables.PREFLAG) {\n            for (var sfbi = 0; sfbi < 22; sfbi++) {\n                exponents[sfbi] = gain - ((channel.scalefac[sfbi] + tables.PRETAB[sfbi]) << scalefac_multiplier);\n            }\n        } else {\n            for (var sfbi = 0; sfbi < 22; sfbi++) {\n                exponents[sfbi] = gain - (channel.scalefac[sfbi] << scalefac_multiplier);\n            }\n        }\n    }\n};\n\nLayer3.prototype.stereo = function(xr, granules, gr, header, sfbwidth) {\n    var granule = granules[gr];\n    var modes = this.modes;\n    var sfbi, l, n, i;\n    \n    if (granule.ch[0].block_type !== granule.ch[1].block_type || (granule.ch[0].flags & tables.MIXED_BLOCK_FLAG) !== (granule.ch[1].flags & tables.MIXED_BLOCK_FLAG))\n        throw new Error('incompatible stereo block_type');\n        \n    for (var i = 0; i < 39; i++)\n        modes[i] = header.mode_extension;\n        \n    // intensity stereo\n    if (header.mode_extension & tables.I_STEREO) {\n        var right_ch = granule.ch[1];\n        var right_xr = xr[1];\n        \n        header.flags |= MP3FrameHeader.FLAGS.I_STEREO;\n         \n        // first determine which scalefactor bands are to be processed\n        if (right_ch.block_type === 2) {\n            var lower, start, max, bound = new Uint32Array(3), w;\n\n            lower = start = max = bound[0] = bound[1] = bound[2] = 0;\n            sfbi = l = 0;\n            \n            if (right_ch.flags & tables.MIXED_BLOCK_FLAG) {\n                while (l < 36) {\n                    n = sfbwidth[sfbi++];\n\n                    for (var i = 0; i < n; ++i) {\n                        if (right_xr[i]) {\n                            lower = sfbi;\n                            break;\n                        }\n                    }\n\n                    right_xr += n;\n                    l += n;\n                }\n\n                start = sfbi;\n            }\n            \n            var w = 0;\n            while (l < 576) {\n                n = sfbwidth[sfbi++];\n\n                for (i = 0; i < n; ++i) {\n                    if (right_xr[i]) {\n                        max = bound[w] = sfbi;\n                        break;\n                    }\n                }\n\n                right_xr += n;\n                l += n;\n                w = (w + 1) % 3;\n            }\n            \n            if (max)\n                lower = start;\n\n            // long blocks\n            for (i = 0; i < lower; ++i)\n                modes[i] = header.mode_extension & ~tables.I_STEREO;\n\n            // short blocks\n            w = 0;\n            for (i = start; i < max; ++i) {\n                if (i < bound[w])\n                    modes[i] = header.mode_extension & ~tables.I_STEREO;\n\n                w = (w + 1) % 3;\n            }\n        } else {\n            var bound = 0;\n            for (sfbi = l = 0; l < 576; l += n) {\n                n = sfbwidth[sfbi++];\n\n                for (i = 0; i < n; ++i) {\n                    if (right_xr[i]) {\n                        bound = sfbi;\n                        break;\n                    }\n                }\n\n                right_xr += n;\n            }\n\n            for (i = 0; i < bound; ++i)\n                modes[i] = header.mode_extension & ~tables.I_STEREO;\n        }\n        \n        // now do the actual processing\n        if (header.flags & MP3FrameHeader.FLAGS.LSF_EXT) {\n            var illegal_pos = granules[gr + 1].ch[1].scalefac;\n\n            // intensity_scale\n            var lsf_scale = IS_Ltables.SF_TABLE[right_ch.scalefac_compress & 0x1];\n            \n            for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\n                n = sfbwidth[sfbi];\n\n                if (!(modes[sfbi] & tables.I_STEREO))\n                    continue;\n\n                if (illegal_pos[sfbi]) {\n                    modes[sfbi] &= ~tables.I_STEREO;\n                    continue;\n                }\n\n                is_pos = right_ch.scalefac[sfbi];\n                \n                for (i = 0; i < n; ++i) {\n                    var left = xr[0][l + i];\n\n                    if (is_pos === 0) {\n                        xr[1][l + i] = left;\n                    } else {\n                        var opposite = left * lsf_scale[(is_pos - 1) / 2];\n\n                        if (is_pos & 1) {\n                            xr[0][l + i] = opposite;\n                            xr[1][l + i] = left;\n                        }\n                        else {\n                            xr[1][l + i] = opposite;\n                        }\n                    }\n                }\n            }\n        } else {\n            for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\n                n = sfbwidth[sfbi];\n\n                if (!(modes[sfbi] & tables.I_STEREO))\n                    continue;\n\n                is_pos = right_ch.scalefac[sfbi];\n\n                if (is_pos >= 7) {  // illegal intensity position\n                    modes[sfbi] &= ~tables.I_STEREO;\n                    continue;\n                }\n\n                for (i = 0; i < n; ++i) {\n                    var left = xr[0][l + i];\n                    xr[0][l + i] = left * tables.IS_TABLE[is_pos];\n                    xr[1][l + i] = left * tables.IS_TABLE[6 - is_pos];\n                }\n            }\n        }\n    }\n    \n    // middle/side stereo\n    if (header.mode_extension & tables.MS_STEREO) {\n        header.flags |= tables.MS_STEREO;\n\n        var invsqrt2 = tables.ROOT_TABLE[3 + -2];\n\n        for (sfbi = l = 0; l < 576; ++sfbi, l += n) {\n            n = sfbwidth[sfbi];\n\n            if (modes[sfbi] !== tables.MS_STEREO)\n                continue;\n\n            for (i = 0; i < n; ++i) {\n                var m = xr[0][l + i];\n                var s = xr[1][l + i];\n\n                xr[0][l + i] = (m + s) * invsqrt2;  // l = (m + s) / sqrt(2)\n                xr[1][l + i] = (m - s) * invsqrt2;  // r = (m - s) / sqrt(2)\n            }\n        }\n    }\n};\n\nLayer3.prototype.aliasreduce = function(xr, lines) {\n    for (var xrPointer = 18; xrPointer < lines; xrPointer += 18) {\n        for (var i = 0; i < 8; ++i) {\n            var a = xr[xrPointer - i - 1];\n            var b = xr[xrPointer + i];\n\n            xr[xrPointer - i - 1] = a * tables.CS[i] - b * tables.CA[i];\n            xr[xrPointer + i] = b * tables.CS[i] + a * tables.CA[i];\n        }\n    }\n};\n\n// perform IMDCT and windowing for long blocks\nLayer3.prototype.imdct_l = function (X, z, block_type) {\n    // IMDCT\n    this.imdct.imdct36(X, z);\n\n    // windowing\n    switch (block_type) {\n        case 0:  // normal window\n            for (var i = 0; i < 36; ++i) z[i] = z[i] * tables.WINDOW_L[i];\n            break;\n\n        case 1:  // start block\n            for (var i =  0; i < 18; ++i) z[i] = z[i] * tables.WINDOW_L[i];\n            for (var i = 24; i < 30; ++i) z[i] = z[i] * tables.WINDOW_S[i - 18];\n            for (var i = 30; i < 36; ++i) z[i] = 0;\n            break;\n\n        case 3:  // stop block\n            for (var i =  0; i <  6; ++i) z[i] = 0;\n            for (var i =  6; i < 12; ++i) z[i] = z[i] * tables.WINDOW_S[i - 6];\n            for (var i = 18; i < 36; ++i) z[i] = z[i] * tables.WINDOW_L[i];\n            break;\n    }\n};\n\n/*\n * perform IMDCT and windowing for short blocks\n */\nLayer3.prototype.imdct_s = function (X, z) {\n    var yptr = 0;\n    var wptr;\n    var Xptr = 0;\n    \n    var y = new Float64Array(36);\n    var hi, lo;\n\n    // IMDCT\n    for (var w = 0; w < 3; ++w) {\n        var sptr = 0;\n\n        for (var i = 0; i < 3; ++i) {\n            lo = X[Xptr + 0] * IMDCT.S[sptr][0] +\n                 X[Xptr + 1] * IMDCT.S[sptr][1] +\n                 X[Xptr + 2] * IMDCT.S[sptr][2] +\n                 X[Xptr + 3] * IMDCT.S[sptr][3] +\n                 X[Xptr + 4] * IMDCT.S[sptr][4] +\n                 X[Xptr + 5] * IMDCT.S[sptr][5];\n\n\n            y[yptr + i + 0] = lo;\n            y[yptr + 5 - i] = -y[yptr + i + 0];\n\n            ++sptr;\n\n            lo = X[Xptr + 0] * IMDCT.S[sptr][0] +\n                 X[Xptr + 1] * IMDCT.S[sptr][1] +\n                 X[Xptr + 2] * IMDCT.S[sptr][2] +\n                 X[Xptr + 3] * IMDCT.S[sptr][3] +\n                 X[Xptr + 4] * IMDCT.S[sptr][4] +\n                 X[Xptr + 5] * IMDCT.S[sptr][5];\n\n            y[yptr +  i + 6] = lo;\n            y[yptr + 11 - i] = y[yptr + i + 6];\n\n            ++sptr;\n        }\n\n        yptr += 12;\n        Xptr += 6;\n    }\n\n    // windowing, overlapping and concatenation\n    yptr = 0;\n    var wptr = 0;\n\n    for (var i = 0; i < 6; ++i) {\n        z[i + 0] = 0;\n        z[i + 6] = y[yptr +  0 + 0] * tables.WINDOW_S[wptr + 0];\n\n        lo = y[yptr + 0 + 6] * tables.WINDOW_S[wptr + 6] +\n             y[yptr + 12 + 0] * tables.WINDOW_S[wptr + 0];\n\n        z[i + 12] = lo;\n\n        lo = y[yptr + 12 + 6] * tables.WINDOW_S[wptr + 6] +\n             y[yptr + 24 + 0] * tables.WINDOW_S[wptr + 0];\n\n        z[i + 18] = lo;\n        z[i + 24] = y[yptr + 24 + 6] * tables.WINDOW_S[wptr + 6];\n        z[i + 30] = 0;\n\n        ++yptr;\n        ++wptr;\n    }\n};\n\nLayer3.prototype.overlap = function (output, overlap, sample, sb) {\n    for (var i = 0; i < 18; ++i) {\n        sample[i][sb] = output[i] + overlap[i];\n        overlap[i]    = output[i + 18];\n    }\n};\n\nLayer3.prototype.freqinver = function (sample, sb) {\n    for (var i = 1; i < 18; i += 2)\n        sample[i][sb] = -sample[i][sb];\n};\n\nLayer3.prototype.overlap_z = function (overlap, sample, sb) {\n    for (var i = 0; i < 18; ++i) {\n        sample[i][sb] = overlap[i];\n        overlap[i]    = 0;\n    }\n};\n\nLayer3.prototype.reorder = function (xr, channel, sfbwidth) {\n    var sfbwidthPointer = 0;\n    var tmp = this.tmp;\n    var sbw = new Uint32Array(3);\n    var sw  = new Uint32Array(3);\n    \n    // this is probably wrong for 8000 Hz mixed blocks\n\n    var sb = 0;\n    if (channel.flags & tables.MIXED_BLOCK_FLAG) {\n        var sb = 2;\n\n        var l = 0;\n        while (l < 36)\n            l += sfbwidth[sfbwidthPointer++];\n    }\n\n    for (var w = 0; w < 3; ++w) {\n        sbw[w] = sb;\n        sw[w]  = 0;\n    }\n\n    f = sfbwidth[sfbwidthPointer++];\n    w = 0;\n\n    for (var l = 18 * sb; l < 576; ++l) {\n        if (f-- === 0) {\n            f = sfbwidth[sfbwidthPointer++] - 1;\n            w = (w + 1) % 3;\n        }\n        \n        tmp[sbw[w]][w][sw[w]++] = xr[l];\n\n        if (sw[w] === 6) {\n            sw[w] = 0;\n            ++sbw[w];\n        }\n    }\n\n    var tmp2 = this.tmp2;\n    var ptr = 0;\n    \n    for (var i = 0; i < 32; i++) {\n        for (var j = 0; j < 3; j++) {\n            for (var k = 0; k < 6; k++) {\n                tmp2[ptr++] = tmp[i][j][k];\n            }\n        }\n    }\n    \n    var len = (576 - 18 * sb); \n    for (var i = 0; i < len; i++) {\n        xr[18 * sb + i] = tmp2[sb + i];\n    }\n};\n\nmodule.exports = Layer3;\n","var AV = require('av');\nvar MP3FrameHeader = require('./header');\nvar MP3Stream = require('./stream');\nvar MP3Frame = require('./frame');\nvar MP3Synth = require('./synth');\nvar Layer1 = require('./layer1');\nvar Layer2 = require('./layer2');\nvar Layer3 = require('./layer3');\n\nvar MP3Decoder = AV.Decoder.extend(function() {\n    AV.Decoder.register('mp3', this);\n    \n    this.prototype.init = function() {\n        this.mp3_stream = new MP3Stream(this.bitstream);\n        this.frame = new MP3Frame();\n        this.synth = new MP3Synth();\n        this.seeking = false;\n    };\n    \n    this.prototype.readChunk = function() {\n        var stream = this.mp3_stream;\n        var frame = this.frame;\n        var synth = this.synth;\n\n        // if we just seeked, we may start getting errors involving the frame reservoir,\n        // so keep going until we successfully decode a frame\n        if (this.seeking) {\n            while (true) {\n                try {\n                    frame.decode(stream);\n                    break;\n                } catch (err) {\n                    if (err instanceof AV.UnderflowError)\n                        throw err;\n                }\n            }\n            \n            this.seeking = false;\n        } else {\n            frame.decode(stream);\n        }\n        \n        synth.frame(frame);\n        \n        // interleave samples\n        var data = synth.pcm.samples,\n            channels = synth.pcm.channels,\n            len = synth.pcm.length,\n            output = new Float32Array(len * channels),\n            j = 0;\n        \n        for (var k = 0; k < len; k++) {\n            for (var i = 0; i < channels; i++) {\n                output[j++] = data[i][k];\n            }\n        }\n        \n        return output;\n    };\n    \n    this.prototype.seek = function(timestamp) {\n        var offset;\n        \n        // if there was a Xing or VBRI tag with a seek table, use that\n        // otherwise guesstimate based on CBR bitrate\n        if (this.demuxer.seekPoints.length > 0) {\n            timestamp = this._super(timestamp);\n            offset = this.stream.offset;\n        } else {\n            offset = timestamp * this.format.bitrate / 8 / this.format.sampleRate;\n        }\n        \n        this.mp3_stream.reset(offset);\n        \n        // try to find 3 consecutive valid frame headers in a row\n        for (var i = 0; i < 4096; i++) {\n            var pos = offset + i;\n            for (var j = 0; j < 3; j++) {\n                this.mp3_stream.reset(pos);\n                \n                try {\n                    var header = MP3FrameHeader.decode(this.mp3_stream);\n                } catch (e) {\n                    break;\n                }\n                \n                // skip the rest of the frame\n                var size = header.framesize();\n                if (size == null)\n                    break;\n                        \n                pos += size;\n            }\n            \n            // check if we're done\n            if (j === 3)\n                break;\n        }\n        \n        // if we didn't find 3 frames, just try the first one and hope for the best\n        if (j !== 3)\n            i = 0;\n            \n        this.mp3_stream.reset(offset + i);\n        \n        // if we guesstimated, update the timestamp to another estimate of where we actually seeked to\n        if (this.demuxer.seekPoints.length === 0)\n            timestamp = this.stream.offset / (this.format.bitrate / 8) * this.format.sampleRate;\n        \n        this.seeking = true;\n        return timestamp;\n    };\n});\n\nmodule.exports = MP3Decoder;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n/********************************************************************************\n * Sample offset into the window indicating the beginning of a scalefactor\n * window band\n *\n * scalefactor window band - term for scalefactor bands within a window,\n * given in Table 4.110 to Table 4.128.\n *\n * scalefactor band - a set of spectral coefficients which are scaled by one\n * scalefactor. In case of EIGHT_SHORT_SEQUENCE and grouping a scalefactor band\n * may contain several scalefactor window bands of corresponding frequency. For\n * all other window_sequences scalefactor bands and scalefactor window bands are\n * identical.\n *******************************************************************************/\nconst SWB_OFFSET_1024_96 = new Uint16Array([\n      0,   4,   8,  12,  16,  20,  24,  28,\n     32,  36,  40,  44,  48,  52,  56,  64,\n     72,  80,  88,  96, 108, 120, 132, 144,\n    156, 172, 188, 212, 240, 276, 320, 384,\n    448, 512, 576, 640, 704, 768, 832, 896,\n    960, 1024\n]);\n\nconst SWB_OFFSET_128_96 = new Uint16Array([\n    0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128\n]);\n\nconst SWB_OFFSET_1024_64 = new Uint16Array([\n      0,   4,   8,  12,  16,  20,  24,  28,\n     32,  36,  40,  44,  48,  52,  56,  64,\n     72,  80,  88, 100, 112, 124, 140, 156,\n    172, 192, 216, 240, 268, 304, 344, 384,\n    424, 464, 504, 544, 584, 624, 664, 704,\n    744, 784, 824, 864, 904, 944, 984, 1024\n]);\n\nconst SWB_OFFSET_128_64 = new Uint16Array([\n    0, 4, 8, 12, 16, 20, 24, 32, 40, 48, 64, 92, 128\n]);\n\nconst SWB_OFFSET_1024_48 = new Uint16Array([\n      0,   4,   8,  12,  16,  20,  24,  28,\n     32,  36,  40,  48,  56,  64,  72,  80,\n     88,  96, 108, 120, 132, 144, 160, 176,\n    196, 216, 240, 264, 292, 320, 352, 384,\n    416, 448, 480, 512, 544, 576, 608, 640,\n    672, 704, 736, 768, 800, 832, 864, 896,\n    928, 1024\n]);\n\nconst SWB_OFFSET_128_48 = new Uint16Array([\n     0,   4,   8,  12,  16,  20,  28,  36,\n    44,  56,  68,  80,  96, 112, 128\n]);\n\nconst SWB_OFFSET_1024_32 = new Uint16Array([\n      0,   4,   8,  12,  16,  20,  24,  28,\n     32,  36,  40,  48,  56,  64,  72,  80,\n     88,  96, 108, 120, 132, 144, 160, 176,\n    196, 216, 240, 264, 292, 320, 352, 384,\n    416, 448, 480, 512, 544, 576, 608, 640,\n    672, 704, 736, 768, 800, 832, 864, 896,\n    928, 960, 992, 1024\n]);\n\nconst SWB_OFFSET_1024_24 = new Uint16Array([\n      0,   4,   8,  12,  16,  20,  24,  28,\n     32,  36,  40,  44,  52,  60,  68,  76,\n     84,  92, 100, 108, 116, 124, 136, 148,\n    160, 172, 188, 204, 220, 240, 260, 284,\n    308, 336, 364, 396, 432, 468, 508, 552,\n    600, 652, 704, 768, 832, 896, 960, 1024\n]);\n\nconst SWB_OFFSET_128_24 = new Uint16Array([\n     0,   4,   8,  12,  16,  20,  24,  28,\n    36,  44,  52,  64,  76,  92, 108, 128\n]);\n\nconst SWB_OFFSET_1024_16 = new Uint16Array([\n      0,   8,  16,  24,  32,  40,  48,  56,\n     64,  72,  80,  88, 100, 112, 124, 136,\n    148, 160, 172, 184, 196, 212, 228, 244,\n    260, 280, 300, 320, 344, 368, 396, 424,\n    456, 492, 532, 572, 616, 664, 716, 772,\n    832, 896, 960, 1024\n]);\n\nconst SWB_OFFSET_128_16 = new Uint16Array([\n     0,   4,   8,  12,  16,  20,  24,  28,\n    32,  40,  48,  60,  72,  88, 108, 128\n]);\n\nconst SWB_OFFSET_1024_8 = new Uint16Array([\n      0,  12,  24,  36,  48,  60,  72,  84,\n     96, 108, 120, 132, 144, 156, 172, 188,\n    204, 220, 236, 252, 268, 288, 308, 328,\n    348, 372, 396, 420, 448, 476, 508, 544,\n    580, 620, 664, 712, 764, 820, 880, 944,\n    1024\n]);\n\nconst SWB_OFFSET_128_8 = new Uint16Array([\n     0,   4,   8,  12,  16,  20,  24,  28,\n    36,  44,  52,  60,  72,  88, 108, 128\n]);\n\nexports.SWB_OFFSET_1024 = [\n    SWB_OFFSET_1024_96,\n    SWB_OFFSET_1024_96,\n    SWB_OFFSET_1024_64,\n    SWB_OFFSET_1024_48,\n    SWB_OFFSET_1024_48,\n    SWB_OFFSET_1024_32,\n    SWB_OFFSET_1024_24,\n    SWB_OFFSET_1024_24,\n    SWB_OFFSET_1024_16,\n    SWB_OFFSET_1024_16,\n    SWB_OFFSET_1024_16,\n    SWB_OFFSET_1024_8\n];\n\nexports.SWB_OFFSET_128 = [\n    SWB_OFFSET_128_96,\n    SWB_OFFSET_128_96,\n    SWB_OFFSET_128_64,\n    SWB_OFFSET_128_48,\n    SWB_OFFSET_128_48,\n    SWB_OFFSET_128_48,\n    SWB_OFFSET_128_24,\n    SWB_OFFSET_128_24,\n    SWB_OFFSET_128_16,\n    SWB_OFFSET_128_16,\n    SWB_OFFSET_128_16,\n    SWB_OFFSET_128_8\n];\n\nexports.SWB_SHORT_WINDOW_COUNT = new Uint8Array([\n    12, 12, 12, 14, 14, 14, 15, 15, 15, 15, 15, 15\n]);\n\nexports.SWB_LONG_WINDOW_COUNT = new Uint8Array([\n    41, 41, 47, 49, 49, 51, 47, 47, 43, 43, 43, 40\n]);\n\n/*\n * Scalefactor lookup table\n */\nexports.SCALEFACTOR_TABLE = (function() {\n    var table = new Float32Array(428);\n    \n    for (var i = 0; i < 428; i++) {\n        table[i] = Math.pow(2, (i - 200) / 4);\n    }\n    \n    return table;\n})();\n\n\n/**\n * Inverse quantization lookup table\n */\nexports.IQ_TABLE = (function() {\n    var table = new Float32Array(8191),\n        four_thirds = 4/3;\n        \n    for (var i = 0; i < 8191; i++) {\n        table[i] = Math.pow(i, four_thirds);\n    }\n    \n    return table;\n})();\n\nexports.SAMPLE_RATES = new Int32Array([\n    96000, 88200, 64000, 48000, 44100, 32000,\n    24000, 22050, 16000, 12000, 11025, 8000, 7350    \n]);\n","var AV = require('av');\nvar tables = require('./tables');\n\nvar ADTSDemuxer = AV.Demuxer.extend(function() {\n    AV.Demuxer.register(this);\n    \n    this.probe = function(stream) {\n        var offset = stream.offset;\n        \n        // attempt to find ADTS syncword\n        while (stream.available(2)) {\n            if ((stream.readUInt16() & 0xfff6) === 0xfff0) {\n                stream.seek(offset);\n                return true;\n            }\n        }\n        \n        stream.seek(offset);\n        return false;\n    };\n        \n    this.prototype.init = function() {\n        this.bitstream = new AV.Bitstream(this.stream);\n    };\n    \n    // Reads an ADTS header\n    // See http://wiki.multimedia.cx/index.php?title=ADTS\n    this.readHeader = function(stream) {\n        if (stream.read(12) !== 0xfff)\n            throw new Error('Invalid ADTS header.');\n            \n        var ret = {};\n        stream.advance(3); // mpeg version and layer\n        var protectionAbsent = !!stream.read(1);\n        \n        ret.profile = stream.read(2) + 1;\n        ret.samplingIndex = stream.read(4);\n        \n        stream.advance(1); // private\n        ret.chanConfig = stream.read(3);\n        stream.advance(4); // original/copy, home, copywrite, and copywrite start\n        \n        ret.frameLength = stream.read(13);\n        stream.advance(11); // fullness\n        \n        ret.numFrames = stream.read(2) + 1;\n        \n        if (!protectionAbsent)\n            stream.advance(16);\n        \n        return ret;\n    };\n    \n    this.prototype.readChunk = function() {\n        if (!this.sentHeader) {\n            var offset = this.stream.offset;\n            var header = ADTSDemuxer.readHeader(this.bitstream);\n            \n            this.emit('format', {\n                formatID: 'aac ',\n                sampleRate: tables.SAMPLE_RATES[header.samplingIndex],\n                channelsPerFrame: header.chanConfig,\n                bitsPerChannel: 16\n            });\n            \n            // generate a magic cookie from the ADTS header\n            var cookie = new Uint8Array(2);\n            cookie[0] = (header.profile << 3) | ((header.samplingIndex >> 1) & 7);\n            cookie[1] = ((header.samplingIndex & 1) << 7) | (header.chanConfig << 3);\n            this.emit('cookie', new AV.Buffer(cookie));\n            \n            this.stream.seek(offset);\n            this.sentHeader = true;\n        }\n        \n        while (this.stream.available(1)) {\n            var buffer = this.stream.readSingleBuffer(this.stream.remainingBytes());\n            this.emit('data', buffer);\n        }\n    };\n});\n\nmodule.exports = ADTSDemuxer;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n// [bit length, codeword, values...]\nconst HCB1 = [\n    [1, 0, 0, 0, 0, 0],\n    [5, 16, 1, 0, 0, 0],\n    [5, 17, -1, 0, 0, 0],\n    [5, 18, 0, 0, 0, -1],\n    [5, 19, 0, 1, 0, 0],\n    [5, 20, 0, 0, 0, 1],\n    [5, 21, 0, 0, -1, 0],\n    [5, 22, 0, 0, 1, 0],\n    [5, 23, 0, -1, 0, 0],\n    [7, 96, 1, -1, 0, 0],\n    [7, 97, -1, 1, 0, 0],\n    [7, 98, 0, 0, -1, 1],\n    [7, 99, 0, 1, -1, 0],\n    [7, 100, 0, -1, 1, 0],\n    [7, 101, 0, 0, 1, -1],\n    [7, 102, 1, 1, 0, 0],\n    [7, 103, 0, 0, -1, -1],\n    [7, 104, -1, -1, 0, 0],\n    [7, 105, 0, -1, -1, 0],\n    [7, 106, 1, 0, -1, 0],\n    [7, 107, 0, 1, 0, -1],\n    [7, 108, -1, 0, 1, 0],\n    [7, 109, 0, 0, 1, 1],\n    [7, 110, 1, 0, 1, 0],\n    [7, 111, 0, -1, 0, 1],\n    [7, 112, 0, 1, 1, 0],\n    [7, 113, 0, 1, 0, 1],\n    [7, 114, -1, 0, -1, 0],\n    [7, 115, 1, 0, 0, 1],\n    [7, 116, -1, 0, 0, -1],\n    [7, 117, 1, 0, 0, -1],\n    [7, 118, -1, 0, 0, 1],\n    [7, 119, 0, -1, 0, -1],\n    [9, 480, 1, 1, -1, 0],\n    [9, 481, -1, 1, -1, 0],\n    [9, 482, 1, -1, 1, 0],\n    [9, 483, 0, 1, 1, -1],\n    [9, 484, 0, 1, -1, 1],\n    [9, 485, 0, -1, 1, 1],\n    [9, 486, 0, -1, 1, -1],\n    [9, 487, 1, -1, -1, 0],\n    [9, 488, 1, 0, -1, 1],\n    [9, 489, 0, 1, -1, -1],\n    [9, 490, -1, 1, 1, 0],\n    [9, 491, -1, 0, 1, -1],\n    [9, 492, -1, -1, 1, 0],\n    [9, 493, 0, -1, -1, 1],\n    [9, 494, 1, -1, 0, 1],\n    [9, 495, 1, -1, 0, -1],\n    [9, 496, -1, 1, 0, -1],\n    [9, 497, -1, -1, -1, 0],\n    [9, 498, 0, -1, -1, -1],\n    [9, 499, 0, 1, 1, 1],\n    [9, 500, 1, 0, 1, -1],\n    [9, 501, 1, 1, 0, 1],\n    [9, 502, -1, 1, 0, 1],\n    [9, 503, 1, 1, 1, 0],\n    [10, 1008, -1, -1, 0, 1],\n    [10, 1009, -1, 0, -1, -1],\n    [10, 1010, 1, 1, 0, -1],\n    [10, 1011, 1, 0, -1, -1],\n    [10, 1012, -1, 0, -1, 1],\n    [10, 1013, -1, -1, 0, -1],\n    [10, 1014, -1, 0, 1, 1],\n    [10, 1015, 1, 0, 1, 1],\n    [11, 2032, 1, -1, 1, -1],\n    [11, 2033, -1, 1, -1, 1],\n    [11, 2034, -1, 1, 1, -1],\n    [11, 2035, 1, -1, -1, 1],\n    [11, 2036, 1, 1, 1, 1],\n    [11, 2037, -1, -1, 1, 1],\n    [11, 2038, 1, 1, -1, -1],\n    [11, 2039, -1, -1, 1, -1],\n    [11, 2040, -1, -1, -1, -1],\n    [11, 2041, 1, 1, -1, 1],\n    [11, 2042, 1, -1, 1, 1],\n    [11, 2043, -1, 1, 1, 1],\n    [11, 2044, -1, 1, -1, -1],\n    [11, 2045, -1, -1, -1, 1],\n    [11, 2046, 1, -1, -1, -1],\n    [11, 2047, 1, 1, 1, -1]\n];\n\nconst HCB2 = [\n    [3, 0, 0, 0, 0, 0],\n    [4, 2, 1, 0, 0, 0],\n    [5, 6, -1, 0, 0, 0],\n    [5, 7, 0, 0, 0, 1],\n    [5, 8, 0, 0, -1, 0],\n    [5, 9, 0, 0, 0, -1],\n    [5, 10, 0, -1, 0, 0],\n    [5, 11, 0, 0, 1, 0],\n    [5, 12, 0, 1, 0, 0],\n    [6, 26, 0, -1, 1, 0],\n    [6, 27, -1, 1, 0, 0],\n    [6, 28, 0, 1, -1, 0],\n    [6, 29, 0, 0, 1, -1],\n    [6, 30, 0, 1, 0, -1],\n    [6, 31, 0, 0, -1, 1],\n    [6, 32, -1, 0, 0, -1],\n    [6, 33, 1, -1, 0, 0],\n    [6, 34, 1, 0, -1, 0],\n    [6, 35, -1, -1, 0, 0],\n    [6, 36, 0, 0, -1, -1],\n    [6, 37, 1, 0, 1, 0],\n    [6, 38, 1, 0, 0, 1],\n    [6, 39, 0, -1, 0, 1],\n    [6, 40, -1, 0, 1, 0],\n    [6, 41, 0, 1, 0, 1],\n    [6, 42, 0, -1, -1, 0],\n    [6, 43, -1, 0, 0, 1],\n    [6, 44, 0, -1, 0, -1],\n    [6, 45, -1, 0, -1, 0],\n    [6, 46, 1, 1, 0, 0],\n    [6, 47, 0, 1, 1, 0],\n    [6, 48, 0, 0, 1, 1],\n    [6, 49, 1, 0, 0, -1],\n    [7, 100, 0, 1, -1, 1],\n    [7, 101, 1, 0, -1, 1],\n    [7, 102, -1, 1, -1, 0],\n    [7, 103, 0, -1, 1, -1],\n    [7, 104, 1, -1, 1, 0],\n    [7, 105, 1, 1, 0, -1],\n    [7, 106, 1, 0, 1, 1],\n    [7, 107, -1, 1, 1, 0],\n    [7, 108, 0, -1, -1, 1],\n    [7, 109, 1, 1, 1, 0],\n    [7, 110, -1, 0, 1, -1],\n    [7, 111, -1, -1, -1, 0],\n    [7, 112, -1, 0, -1, 1],\n    [7, 113, 1, -1, -1, 0],\n    [7, 114, 1, 1, -1, 0],\n    [8, 230, 1, -1, 0, 1],\n    [8, 231, -1, 1, 0, -1],\n    [8, 232, -1, -1, 1, 0],\n    [8, 233, -1, 0, 1, 1],\n    [8, 234, -1, -1, 0, 1],\n    [8, 235, -1, -1, 0, -1],\n    [8, 236, 0, -1, -1, -1],\n    [8, 237, 1, 0, 1, -1],\n    [8, 238, 1, 0, -1, -1],\n    [8, 239, 0, 1, -1, -1],\n    [8, 240, 0, 1, 1, 1],\n    [8, 241, -1, 1, 0, 1],\n    [8, 242, -1, 0, -1, -1],\n    [8, 243, 0, 1, 1, -1],\n    [8, 244, 1, -1, 0, -1],\n    [8, 245, 0, -1, 1, 1],\n    [8, 246, 1, 1, 0, 1],\n    [8, 247, 1, -1, 1, -1],\n    [8, 248, -1, 1, -1, 1],\n    [9, 498, 1, -1, -1, 1],\n    [9, 499, -1, -1, -1, -1],\n    [9, 500, -1, 1, 1, -1],\n    [9, 501, -1, 1, 1, 1],\n    [9, 502, 1, 1, 1, 1],\n    [9, 503, -1, -1, 1, -1],\n    [9, 504, 1, -1, 1, 1],\n    [9, 505, -1, 1, -1, -1],\n    [9, 506, -1, -1, 1, 1],\n    [9, 507, 1, 1, -1, -1],\n    [9, 508, 1, -1, -1, -1],\n    [9, 509, -1, -1, -1, 1],\n    [9, 510, 1, 1, -1, 1],\n    [9, 511, 1, 1, 1, -1]\n];\n\nconst HCB3 = [\n    [1, 0, 0, 0, 0, 0],\n    [4, 8, 1, 0, 0, 0],\n    [4, 9, 0, 0, 0, 1],\n    [4, 10, 0, 1, 0, 0],\n    [4, 11, 0, 0, 1, 0],\n    [5, 24, 1, 1, 0, 0],\n    [5, 25, 0, 0, 1, 1],\n    [6, 52, 0, 1, 1, 0],\n    [6, 53, 0, 1, 0, 1],\n    [6, 54, 1, 0, 1, 0],\n    [6, 55, 0, 1, 1, 1],\n    [6, 56, 1, 0, 0, 1],\n    [6, 57, 1, 1, 1, 0],\n    [7, 116, 1, 1, 1, 1],\n    [7, 117, 1, 0, 1, 1],\n    [7, 118, 1, 1, 0, 1],\n    [8, 238, 2, 0, 0, 0],\n    [8, 239, 0, 0, 0, 2],\n    [8, 240, 0, 0, 1, 2],\n    [8, 241, 2, 1, 0, 0],\n    [8, 242, 1, 2, 1, 0],\n    [9, 486, 0, 0, 2, 1],\n    [9, 487, 0, 1, 2, 1],\n    [9, 488, 1, 2, 0, 0],\n    [9, 489, 0, 1, 1, 2],\n    [9, 490, 2, 1, 1, 0],\n    [9, 491, 0, 0, 2, 0],\n    [9, 492, 0, 2, 1, 0],\n    [9, 493, 0, 1, 2, 0],\n    [9, 494, 0, 2, 0, 0],\n    [9, 495, 0, 1, 0, 2],\n    [9, 496, 2, 0, 1, 0],\n    [9, 497, 1, 2, 1, 1],\n    [9, 498, 0, 2, 1, 1],\n    [9, 499, 1, 1, 2, 0],\n    [9, 500, 1, 1, 2, 1],\n    [10, 1002, 1, 2, 0, 1],\n    [10, 1003, 1, 0, 2, 0],\n    [10, 1004, 1, 0, 2, 1],\n    [10, 1005, 0, 2, 0, 1],\n    [10, 1006, 2, 1, 1, 1],\n    [10, 1007, 1, 1, 1, 2],\n    [10, 1008, 2, 1, 0, 1],\n    [10, 1009, 1, 0, 1, 2],\n    [10, 1010, 0, 0, 2, 2],\n    [10, 1011, 0, 1, 2, 2],\n    [10, 1012, 2, 2, 1, 0],\n    [10, 1013, 1, 2, 2, 0],\n    [10, 1014, 1, 0, 0, 2],\n    [10, 1015, 2, 0, 0, 1],\n    [10, 1016, 0, 2, 2, 1],\n    [11, 2034, 2, 2, 0, 0],\n    [11, 2035, 1, 2, 2, 1],\n    [11, 2036, 1, 1, 0, 2],\n    [11, 2037, 2, 0, 1, 1],\n    [11, 2038, 1, 1, 2, 2],\n    [11, 2039, 2, 2, 1, 1],\n    [11, 2040, 0, 2, 2, 0],\n    [11, 2041, 0, 2, 1, 2],\n    [12, 4084, 1, 0, 2, 2],\n    [12, 4085, 2, 2, 0, 1],\n    [12, 4086, 2, 1, 2, 0],\n    [12, 4087, 2, 2, 2, 0],\n    [12, 4088, 0, 2, 2, 2],\n    [12, 4089, 2, 2, 2, 1],\n    [12, 4090, 2, 1, 2, 1],\n    [12, 4091, 1, 2, 1, 2],\n    [12, 4092, 1, 2, 2, 2],\n    [13, 8186, 0, 2, 0, 2],\n    [13, 8187, 2, 0, 2, 0],\n    [13, 8188, 1, 2, 0, 2],\n    [14, 16378, 2, 0, 2, 1],\n    [14, 16379, 2, 1, 1, 2],\n    [14, 16380, 2, 1, 0, 2],\n    [15, 32762, 2, 2, 2, 2],\n    [15, 32763, 2, 2, 1, 2],\n    [15, 32764, 2, 1, 2, 2],\n    [15, 32765, 2, 0, 1, 2],\n    [15, 32766, 2, 0, 0, 2],\n    [16, 65534, 2, 2, 0, 2],\n    [16, 65535, 2, 0, 2, 2]\n];\n\nconst HCB4 = [\n    [4, 0, 1, 1, 1, 1],\n    [4, 1, 0, 1, 1, 1],\n    [4, 2, 1, 1, 0, 1],\n    [4, 3, 1, 1, 1, 0],\n    [4, 4, 1, 0, 1, 1],\n    [4, 5, 1, 0, 0, 0],\n    [4, 6, 1, 1, 0, 0],\n    [4, 7, 0, 0, 0, 0],\n    [4, 8, 0, 0, 1, 1],\n    [4, 9, 1, 0, 1, 0],\n    [5, 20, 1, 0, 0, 1],\n    [5, 21, 0, 1, 1, 0],\n    [5, 22, 0, 0, 0, 1],\n    [5, 23, 0, 1, 0, 1],\n    [5, 24, 0, 0, 1, 0],\n    [5, 25, 0, 1, 0, 0],\n    [7, 104, 2, 1, 1, 1],\n    [7, 105, 1, 1, 2, 1],\n    [7, 106, 1, 2, 1, 1],\n    [7, 107, 1, 1, 1, 2],\n    [7, 108, 2, 1, 1, 0],\n    [7, 109, 2, 1, 0, 1],\n    [7, 110, 1, 2, 1, 0],\n    [7, 111, 2, 0, 1, 1],\n    [7, 112, 0, 1, 2, 1],\n    [8, 226, 0, 1, 1, 2],\n    [8, 227, 1, 1, 2, 0],\n    [8, 228, 0, 2, 1, 1],\n    [8, 229, 1, 0, 1, 2],\n    [8, 230, 1, 2, 0, 1],\n    [8, 231, 1, 1, 0, 2],\n    [8, 232, 1, 0, 2, 1],\n    [8, 233, 2, 1, 0, 0],\n    [8, 234, 2, 0, 1, 0],\n    [8, 235, 1, 2, 0, 0],\n    [8, 236, 2, 0, 0, 1],\n    [8, 237, 0, 1, 0, 2],\n    [8, 238, 0, 2, 1, 0],\n    [8, 239, 0, 0, 1, 2],\n    [8, 240, 0, 1, 2, 0],\n    [8, 241, 0, 2, 0, 1],\n    [8, 242, 1, 0, 0, 2],\n    [8, 243, 0, 0, 2, 1],\n    [8, 244, 1, 0, 2, 0],\n    [8, 245, 2, 0, 0, 0],\n    [8, 246, 0, 0, 0, 2],\n    [9, 494, 0, 2, 0, 0],\n    [9, 495, 0, 0, 2, 0],\n    [9, 496, 1, 2, 2, 1],\n    [9, 497, 2, 2, 1, 1],\n    [9, 498, 2, 1, 2, 1],\n    [9, 499, 1, 1, 2, 2],\n    [9, 500, 1, 2, 1, 2],\n    [9, 501, 2, 1, 1, 2],\n    [10, 1004, 1, 2, 2, 0],\n    [10, 1005, 2, 2, 1, 0],\n    [10, 1006, 2, 1, 2, 0],\n    [10, 1007, 0, 2, 2, 1],\n    [10, 1008, 0, 1, 2, 2],\n    [10, 1009, 2, 2, 0, 1],\n    [10, 1010, 0, 2, 1, 2],\n    [10, 1011, 2, 0, 2, 1],\n    [10, 1012, 1, 0, 2, 2],\n    [10, 1013, 2, 2, 2, 1],\n    [10, 1014, 1, 2, 0, 2],\n    [10, 1015, 2, 0, 1, 2],\n    [10, 1016, 2, 1, 0, 2],\n    [10, 1017, 1, 2, 2, 2],\n    [11, 2036, 2, 1, 2, 2],\n    [11, 2037, 2, 2, 1, 2],\n    [11, 2038, 0, 2, 2, 0],\n    [11, 2039, 2, 2, 0, 0],\n    [11, 2040, 0, 0, 2, 2],\n    [11, 2041, 2, 0, 2, 0],\n    [11, 2042, 0, 2, 0, 2],\n    [11, 2043, 2, 0, 0, 2],\n    [11, 2044, 2, 2, 2, 2],\n    [11, 2045, 0, 2, 2, 2],\n    [11, 2046, 2, 2, 2, 0],\n    [12, 4094, 2, 2, 0, 2],\n    [12, 4095, 2, 0, 2, 2]\n];\n\nconst HCB5 = [\n    [1, 0, 0, 0],\n    [4, 8, -1, 0],\n    [4, 9, 1, 0],\n    [4, 10, 0, 1],\n    [4, 11, 0, -1],\n    [5, 24, 1, -1],\n    [5, 25, -1, 1],\n    [5, 26, -1, -1],\n    [5, 27, 1, 1],\n    [7, 112, -2, 0],\n    [7, 113, 0, 2],\n    [7, 114, 2, 0],\n    [7, 115, 0, -2],\n    [8, 232, -2, -1],\n    [8, 233, 2, 1],\n    [8, 234, -1, -2],\n    [8, 235, 1, 2],\n    [8, 236, -2, 1],\n    [8, 237, 2, -1],\n    [8, 238, -1, 2],\n    [8, 239, 1, -2],\n    [8, 240, -3, 0],\n    [8, 241, 3, 0],\n    [8, 242, 0, -3],\n    [8, 243, 0, 3],\n    [9, 488, -3, -1],\n    [9, 489, 1, 3],\n    [9, 490, 3, 1],\n    [9, 491, -1, -3],\n    [9, 492, -3, 1],\n    [9, 493, 3, -1],\n    [9, 494, 1, -3],\n    [9, 495, -1, 3],\n    [9, 496, -2, 2],\n    [9, 497, 2, 2],\n    [9, 498, -2, -2],\n    [9, 499, 2, -2],\n    [10, 1000, -3, -2],\n    [10, 1001, 3, -2],\n    [10, 1002, -2, 3],\n    [10, 1003, 2, -3],\n    [10, 1004, 3, 2],\n    [10, 1005, 2, 3],\n    [10, 1006, -3, 2],\n    [10, 1007, -2, -3],\n    [10, 1008, 0, -4],\n    [10, 1009, -4, 0],\n    [10, 1010, 4, 1],\n    [10, 1011, 4, 0],\n    [11, 2024, -4, -1],\n    [11, 2025, 0, 4],\n    [11, 2026, 4, -1],\n    [11, 2027, -1, -4],\n    [11, 2028, 1, 4],\n    [11, 2029, -1, 4],\n    [11, 2030, -4, 1],\n    [11, 2031, 1, -4],\n    [11, 2032, 3, -3],\n    [11, 2033, -3, -3],\n    [11, 2034, -3, 3],\n    [11, 2035, -2, 4],\n    [11, 2036, -4, -2],\n    [11, 2037, 4, 2],\n    [11, 2038, 2, -4],\n    [11, 2039, 2, 4],\n    [11, 2040, 3, 3],\n    [11, 2041, -4, 2],\n    [12, 4084, -2, -4],\n    [12, 4085, 4, -2],\n    [12, 4086, 3, -4],\n    [12, 4087, -4, -3],\n    [12, 4088, -4, 3],\n    [12, 4089, 3, 4],\n    [12, 4090, -3, 4],\n    [12, 4091, 4, 3],\n    [12, 4092, 4, -3],\n    [12, 4093, -3, -4],\n    [13, 8188, 4, -4],\n    [13, 8189, -4, 4],\n    [13, 8190, 4, 4],\n    [13, 8191, -4, -4]\n];\n\nconst HCB6 = [\n    [4, 0, 0, 0],\n    [4, 1, 1, 0],\n    [4, 2, 0, -1],\n    [4, 3, 0, 1],\n    [4, 4, -1, 0],\n    [4, 5, 1, 1],\n    [4, 6, -1, 1],\n    [4, 7, 1, -1],\n    [4, 8, -1, -1],\n    [6, 36, 2, -1],\n    [6, 37, 2, 1],\n    [6, 38, -2, 1],\n    [6, 39, -2, -1],\n    [6, 40, -2, 0],\n    [6, 41, -1, 2],\n    [6, 42, 2, 0],\n    [6, 43, 1, -2],\n    [6, 44, 1, 2],\n    [6, 45, 0, -2],\n    [6, 46, -1, -2],\n    [6, 47, 0, 2],\n    [6, 48, 2, -2],\n    [6, 49, -2, 2],\n    [6, 50, -2, -2],\n    [6, 51, 2, 2],\n    [7, 104, -3, 1],\n    [7, 105, 3, 1],\n    [7, 106, 3, -1],\n    [7, 107, -1, 3],\n    [7, 108, -3, -1],\n    [7, 109, 1, 3],\n    [7, 110, 1, -3],\n    [7, 111, -1, -3],\n    [7, 112, 3, 0],\n    [7, 113, -3, 0],\n    [7, 114, 0, -3],\n    [7, 115, 0, 3],\n    [7, 116, 3, 2],\n    [8, 234, -3, -2],\n    [8, 235, -2, 3],\n    [8, 236, 2, 3],\n    [8, 237, 3, -2],\n    [8, 238, 2, -3],\n    [8, 239, -2, -3],\n    [8, 240, -3, 2],\n    [8, 241, 3, 3],\n    [9, 484, 3, -3],\n    [9, 485, -3, -3],\n    [9, 486, -3, 3],\n    [9, 487, 1, -4],\n    [9, 488, -1, -4],\n    [9, 489, 4, 1],\n    [9, 490, -4, 1],\n    [9, 491, -4, -1],\n    [9, 492, 1, 4],\n    [9, 493, 4, -1],\n    [9, 494, -1, 4],\n    [9, 495, 0, -4],\n    [9, 496, -4, 2],\n    [9, 497, -4, -2],\n    [9, 498, 2, 4],\n    [9, 499, -2, -4],\n    [9, 500, -4, 0],\n    [9, 501, 4, 2],\n    [9, 502, 4, -2],\n    [9, 503, -2, 4],\n    [9, 504, 4, 0],\n    [9, 505, 2, -4],\n    [9, 506, 0, 4],\n    [10, 1014, -3, -4],\n    [10, 1015, -3, 4],\n    [10, 1016, 3, -4],\n    [10, 1017, 4, -3],\n    [10, 1018, 3, 4],\n    [10, 1019, 4, 3],\n    [10, 1020, -4, 3],\n    [10, 1021, -4, -3],\n    [11, 2044, 4, 4],\n    [11, 2045, -4, 4],\n    [11, 2046, -4, -4],\n    [11, 2047, 4, -4]\n];\n\nconst HCB7 = [\n    [1, 0, 0, 0],\n    [3, 4, 1, 0],\n    [3, 5, 0, 1],\n    [4, 12, 1, 1],\n    [6, 52, 2, 1],\n    [6, 53, 1, 2],\n    [6, 54, 2, 0],\n    [6, 55, 0, 2],\n    [7, 112, 3, 1],\n    [7, 113, 1, 3],\n    [7, 114, 2, 2],\n    [7, 115, 3, 0],\n    [7, 116, 0, 3],\n    [8, 234, 2, 3],\n    [8, 235, 3, 2],\n    [8, 236, 1, 4],\n    [8, 237, 4, 1],\n    [8, 238, 1, 5],\n    [8, 239, 5, 1],\n    [8, 240, 3, 3],\n    [8, 241, 2, 4],\n    [8, 242, 0, 4],\n    [8, 243, 4, 0],\n    [9, 488, 4, 2],\n    [9, 489, 2, 5],\n    [9, 490, 5, 2],\n    [9, 491, 0, 5],\n    [9, 492, 6, 1],\n    [9, 493, 5, 0],\n    [9, 494, 1, 6],\n    [9, 495, 4, 3],\n    [9, 496, 3, 5],\n    [9, 497, 3, 4],\n    [9, 498, 5, 3],\n    [9, 499, 2, 6],\n    [9, 500, 6, 2],\n    [9, 501, 1, 7],\n    [10, 1004, 3, 6],\n    [10, 1005, 0, 6],\n    [10, 1006, 6, 0],\n    [10, 1007, 4, 4],\n    [10, 1008, 7, 1],\n    [10, 1009, 4, 5],\n    [10, 1010, 7, 2],\n    [10, 1011, 5, 4],\n    [10, 1012, 6, 3],\n    [10, 1013, 2, 7],\n    [10, 1014, 7, 3],\n    [10, 1015, 6, 4],\n    [10, 1016, 5, 5],\n    [10, 1017, 4, 6],\n    [10, 1018, 3, 7],\n    [11, 2038, 7, 0],\n    [11, 2039, 0, 7],\n    [11, 2040, 6, 5],\n    [11, 2041, 5, 6],\n    [11, 2042, 7, 4],\n    [11, 2043, 4, 7],\n    [11, 2044, 5, 7],\n    [11, 2045, 7, 5],\n    [12, 4092, 7, 6],\n    [12, 4093, 6, 6],\n    [12, 4094, 6, 7],\n    [12, 4095, 7, 7]\n];\n\nconst HCB8 = [\n    [3, 0, 1, 1],\n    [4, 2, 2, 1],\n    [4, 3, 1, 0],\n    [4, 4, 1, 2],\n    [4, 5, 0, 1],\n    [4, 6, 2, 2],\n    [5, 14, 0, 0],\n    [5, 15, 2, 0],\n    [5, 16, 0, 2],\n    [5, 17, 3, 1],\n    [5, 18, 1, 3],\n    [5, 19, 3, 2],\n    [5, 20, 2, 3],\n    [6, 42, 3, 3],\n    [6, 43, 4, 1],\n    [6, 44, 1, 4],\n    [6, 45, 4, 2],\n    [6, 46, 2, 4],\n    [6, 47, 3, 0],\n    [6, 48, 0, 3],\n    [6, 49, 4, 3],\n    [6, 50, 3, 4],\n    [6, 51, 5, 2],\n    [7, 104, 5, 1],\n    [7, 105, 2, 5],\n    [7, 106, 1, 5],\n    [7, 107, 5, 3],\n    [7, 108, 3, 5],\n    [7, 109, 4, 4],\n    [7, 110, 5, 4],\n    [7, 111, 0, 4],\n    [7, 112, 4, 5],\n    [7, 113, 4, 0],\n    [7, 114, 2, 6],\n    [7, 115, 6, 2],\n    [7, 116, 6, 1],\n    [7, 117, 1, 6],\n    [8, 236, 3, 6],\n    [8, 237, 6, 3],\n    [8, 238, 5, 5],\n    [8, 239, 5, 0],\n    [8, 240, 6, 4],\n    [8, 241, 0, 5],\n    [8, 242, 4, 6],\n    [8, 243, 7, 1],\n    [8, 244, 7, 2],\n    [8, 245, 2, 7],\n    [8, 246, 6, 5],\n    [8, 247, 7, 3],\n    [8, 248, 1, 7],\n    [8, 249, 5, 6],\n    [8, 250, 3, 7],\n    [9, 502, 6, 6],\n    [9, 503, 7, 4],\n    [9, 504, 6, 0],\n    [9, 505, 4, 7],\n    [9, 506, 0, 6],\n    [9, 507, 7, 5],\n    [9, 508, 7, 6],\n    [9, 509, 6, 7],\n    [10, 1020, 5, 7],\n    [10, 1021, 7, 0],\n    [10, 1022, 0, 7],\n    [10, 1023, 7, 7]\n];\n\nconst HCB9 = [\n    [1, 0, 0, 0],\n    [3, 4, 1, 0],\n    [3, 5, 0, 1],\n    [4, 12, 1, 1],\n    [6, 52, 2, 1],\n    [6, 53, 1, 2],\n    [6, 54, 2, 0],\n    [6, 55, 0, 2],\n    [7, 112, 3, 1],\n    [7, 113, 2, 2],\n    [7, 114, 1, 3],\n    [8, 230, 3, 0],\n    [8, 231, 0, 3],\n    [8, 232, 2, 3],\n    [8, 233, 3, 2],\n    [8, 234, 1, 4],\n    [8, 235, 4, 1],\n    [8, 236, 2, 4],\n    [8, 237, 1, 5],\n    [9, 476, 4, 2],\n    [9, 477, 3, 3],\n    [9, 478, 0, 4],\n    [9, 479, 4, 0],\n    [9, 480, 5, 1],\n    [9, 481, 2, 5],\n    [9, 482, 1, 6],\n    [9, 483, 3, 4],\n    [9, 484, 5, 2],\n    [9, 485, 6, 1],\n    [9, 486, 4, 3],\n    [10, 974, 0, 5],\n    [10, 975, 2, 6],\n    [10, 976, 5, 0],\n    [10, 977, 1, 7],\n    [10, 978, 3, 5],\n    [10, 979, 1, 8],\n    [10, 980, 8, 1],\n    [10, 981, 4, 4],\n    [10, 982, 5, 3],\n    [10, 983, 6, 2],\n    [10, 984, 7, 1],\n    [10, 985, 0, 6],\n    [10, 986, 8, 2],\n    [10, 987, 2, 8],\n    [10, 988, 3, 6],\n    [10, 989, 2, 7],\n    [10, 990, 4, 5],\n    [10, 991, 9, 1],\n    [10, 992, 1, 9],\n    [10, 993, 7, 2],\n    [11, 1988, 6, 0],\n    [11, 1989, 5, 4],\n    [11, 1990, 6, 3],\n    [11, 1991, 8, 3],\n    [11, 1992, 0, 7],\n    [11, 1993, 9, 2],\n    [11, 1994, 3, 8],\n    [11, 1995, 4, 6],\n    [11, 1996, 3, 7],\n    [11, 1997, 0, 8],\n    [11, 1998, 10, 1],\n    [11, 1999, 6, 4],\n    [11, 2000, 2, 9],\n    [11, 2001, 5, 5],\n    [11, 2002, 8, 0],\n    [11, 2003, 7, 0],\n    [11, 2004, 7, 3],\n    [11, 2005, 10, 2],\n    [11, 2006, 9, 3],\n    [11, 2007, 8, 4],\n    [11, 2008, 1, 10],\n    [11, 2009, 7, 4],\n    [11, 2010, 6, 5],\n    [11, 2011, 5, 6],\n    [11, 2012, 4, 8],\n    [11, 2013, 4, 7],\n    [11, 2014, 3, 9],\n    [11, 2015, 11, 1],\n    [11, 2016, 5, 8],\n    [11, 2017, 9, 0],\n    [11, 2018, 8, 5],\n    [12, 4038, 10, 3],\n    [12, 4039, 2, 10],\n    [12, 4040, 0, 9],\n    [12, 4041, 11, 2],\n    [12, 4042, 9, 4],\n    [12, 4043, 6, 6],\n    [12, 4044, 12, 1],\n    [12, 4045, 4, 9],\n    [12, 4046, 8, 6],\n    [12, 4047, 1, 11],\n    [12, 4048, 9, 5],\n    [12, 4049, 10, 4],\n    [12, 4050, 5, 7],\n    [12, 4051, 7, 5],\n    [12, 4052, 2, 11],\n    [12, 4053, 1, 12],\n    [12, 4054, 12, 2],\n    [12, 4055, 11, 3],\n    [12, 4056, 3, 10],\n    [12, 4057, 5, 9],\n    [12, 4058, 6, 7],\n    [12, 4059, 8, 7],\n    [12, 4060, 11, 4],\n    [12, 4061, 0, 10],\n    [12, 4062, 7, 6],\n    [12, 4063, 12, 3],\n    [12, 4064, 10, 0],\n    [12, 4065, 10, 5],\n    [12, 4066, 4, 10],\n    [12, 4067, 6, 8],\n    [12, 4068, 2, 12],\n    [12, 4069, 9, 6],\n    [12, 4070, 9, 7],\n    [12, 4071, 4, 11],\n    [12, 4072, 11, 0],\n    [12, 4073, 6, 9],\n    [12, 4074, 3, 11],\n    [12, 4075, 5, 10],\n    [13, 8152, 8, 8],\n    [13, 8153, 7, 8],\n    [13, 8154, 12, 5],\n    [13, 8155, 3, 12],\n    [13, 8156, 11, 5],\n    [13, 8157, 7, 7],\n    [13, 8158, 12, 4],\n    [13, 8159, 11, 6],\n    [13, 8160, 10, 6],\n    [13, 8161, 4, 12],\n    [13, 8162, 7, 9],\n    [13, 8163, 5, 11],\n    [13, 8164, 0, 11],\n    [13, 8165, 12, 6],\n    [13, 8166, 6, 10],\n    [13, 8167, 12, 0],\n    [13, 8168, 10, 7],\n    [13, 8169, 5, 12],\n    [13, 8170, 7, 10],\n    [13, 8171, 9, 8],\n    [13, 8172, 0, 12],\n    [13, 8173, 11, 7],\n    [13, 8174, 8, 9],\n    [13, 8175, 9, 9],\n    [13, 8176, 10, 8],\n    [13, 8177, 7, 11],\n    [13, 8178, 12, 7],\n    [13, 8179, 6, 11],\n    [13, 8180, 8, 11],\n    [13, 8181, 11, 8],\n    [13, 8182, 7, 12],\n    [13, 8183, 6, 12],\n    [14, 16368, 8, 10],\n    [14, 16369, 10, 9],\n    [14, 16370, 8, 12],\n    [14, 16371, 9, 10],\n    [14, 16372, 9, 11],\n    [14, 16373, 9, 12],\n    [14, 16374, 10, 11],\n    [14, 16375, 12, 9],\n    [14, 16376, 10, 10],\n    [14, 16377, 11, 9],\n    [14, 16378, 12, 8],\n    [14, 16379, 11, 10],\n    [14, 16380, 12, 10],\n    [14, 16381, 12, 11],\n    [15, 32764, 10, 12],\n    [15, 32765, 11, 11],\n    [15, 32766, 11, 12],\n    [15, 32767, 12, 12]\n];\n\nconst HCB10 = [\n    [4, 0, 1, 1],\n    [4, 1, 1, 2],\n    [4, 2, 2, 1],\n    [5, 6, 2, 2],\n    [5, 7, 1, 0],\n    [5, 8, 0, 1],\n    [5, 9, 1, 3],\n    [5, 10, 3, 2],\n    [5, 11, 3, 1],\n    [5, 12, 2, 3],\n    [5, 13, 3, 3],\n    [6, 28, 2, 0],\n    [6, 29, 0, 2],\n    [6, 30, 2, 4],\n    [6, 31, 4, 2],\n    [6, 32, 1, 4],\n    [6, 33, 4, 1],\n    [6, 34, 0, 0],\n    [6, 35, 4, 3],\n    [6, 36, 3, 4],\n    [6, 37, 3, 0],\n    [6, 38, 0, 3],\n    [6, 39, 4, 4],\n    [6, 40, 2, 5],\n    [6, 41, 5, 2],\n    [7, 84, 1, 5],\n    [7, 85, 5, 1],\n    [7, 86, 5, 3],\n    [7, 87, 3, 5],\n    [7, 88, 5, 4],\n    [7, 89, 4, 5],\n    [7, 90, 6, 2],\n    [7, 91, 2, 6],\n    [7, 92, 6, 3],\n    [7, 93, 4, 0],\n    [7, 94, 6, 1],\n    [7, 95, 0, 4],\n    [7, 96, 1, 6],\n    [7, 97, 3, 6],\n    [7, 98, 5, 5],\n    [7, 99, 6, 4],\n    [7, 100, 4, 6],\n    [8, 202, 6, 5],\n    [8, 203, 7, 2],\n    [8, 204, 3, 7],\n    [8, 205, 2, 7],\n    [8, 206, 5, 6],\n    [8, 207, 8, 2],\n    [8, 208, 7, 3],\n    [8, 209, 5, 0],\n    [8, 210, 7, 1],\n    [8, 211, 0, 5],\n    [8, 212, 8, 1],\n    [8, 213, 1, 7],\n    [8, 214, 8, 3],\n    [8, 215, 7, 4],\n    [8, 216, 4, 7],\n    [8, 217, 2, 8],\n    [8, 218, 6, 6],\n    [8, 219, 7, 5],\n    [8, 220, 1, 8],\n    [8, 221, 3, 8],\n    [8, 222, 8, 4],\n    [8, 223, 4, 8],\n    [8, 224, 5, 7],\n    [8, 225, 8, 5],\n    [8, 226, 5, 8],\n    [9, 454, 7, 6],\n    [9, 455, 6, 7],\n    [9, 456, 9, 2],\n    [9, 457, 6, 0],\n    [9, 458, 6, 8],\n    [9, 459, 9, 3],\n    [9, 460, 3, 9],\n    [9, 461, 9, 1],\n    [9, 462, 2, 9],\n    [9, 463, 0, 6],\n    [9, 464, 8, 6],\n    [9, 465, 9, 4],\n    [9, 466, 4, 9],\n    [9, 467, 10, 2],\n    [9, 468, 1, 9],\n    [9, 469, 7, 7],\n    [9, 470, 8, 7],\n    [9, 471, 9, 5],\n    [9, 472, 7, 8],\n    [9, 473, 10, 3],\n    [9, 474, 5, 9],\n    [9, 475, 10, 4],\n    [9, 476, 2, 10],\n    [9, 477, 10, 1],\n    [9, 478, 3, 10],\n    [9, 479, 9, 6],\n    [9, 480, 6, 9],\n    [9, 481, 8, 0],\n    [9, 482, 4, 10],\n    [9, 483, 7, 0],\n    [9, 484, 11, 2],\n    [10, 970, 7, 9],\n    [10, 971, 11, 3],\n    [10, 972, 10, 6],\n    [10, 973, 1, 10],\n    [10, 974, 11, 1],\n    [10, 975, 9, 7],\n    [10, 976, 0, 7],\n    [10, 977, 8, 8],\n    [10, 978, 10, 5],\n    [10, 979, 3, 11],\n    [10, 980, 5, 10],\n    [10, 981, 8, 9],\n    [10, 982, 11, 5],\n    [10, 983, 0, 8],\n    [10, 984, 11, 4],\n    [10, 985, 2, 11],\n    [10, 986, 7, 10],\n    [10, 987, 6, 10],\n    [10, 988, 10, 7],\n    [10, 989, 4, 11],\n    [10, 990, 1, 11],\n    [10, 991, 12, 2],\n    [10, 992, 9, 8],\n    [10, 993, 12, 3],\n    [10, 994, 11, 6],\n    [10, 995, 5, 11],\n    [10, 996, 12, 4],\n    [10, 997, 11, 7],\n    [10, 998, 12, 5],\n    [10, 999, 3, 12],\n    [10, 1000, 6, 11],\n    [10, 1001, 9, 0],\n    [10, 1002, 10, 8],\n    [10, 1003, 10, 0],\n    [10, 1004, 12, 1],\n    [10, 1005, 0, 9],\n    [10, 1006, 4, 12],\n    [10, 1007, 9, 9],\n    [10, 1008, 12, 6],\n    [10, 1009, 2, 12],\n    [10, 1010, 8, 10],\n    [11, 2022, 9, 10],\n    [11, 2023, 1, 12],\n    [11, 2024, 11, 8],\n    [11, 2025, 12, 7],\n    [11, 2026, 7, 11],\n    [11, 2027, 5, 12],\n    [11, 2028, 6, 12],\n    [11, 2029, 10, 9],\n    [11, 2030, 8, 11],\n    [11, 2031, 12, 8],\n    [11, 2032, 0, 10],\n    [11, 2033, 7, 12],\n    [11, 2034, 11, 0],\n    [11, 2035, 10, 10],\n    [11, 2036, 11, 9],\n    [11, 2037, 11, 10],\n    [11, 2038, 0, 11],\n    [11, 2039, 11, 11],\n    [11, 2040, 9, 11],\n    [11, 2041, 10, 11],\n    [11, 2042, 12, 0],\n    [11, 2043, 8, 12],\n    [12, 4088, 12, 9],\n    [12, 4089, 10, 12],\n    [12, 4090, 9, 12],\n    [12, 4091, 11, 12],\n    [12, 4092, 12, 11],\n    [12, 4093, 0, 12],\n    [12, 4094, 12, 10],\n    [12, 4095, 12, 12]\n];\n\nconst HCB11 = [\n    [4, 0, 0, 0],\n    [4, 1, 1, 1],\n    [5, 4, 16, 16],\n    [5, 5, 1, 0],\n    [5, 6, 0, 1],\n    [5, 7, 2, 1],\n    [5, 8, 1, 2],\n    [5, 9, 2, 2],\n    [6, 20, 1, 3],\n    [6, 21, 3, 1],\n    [6, 22, 3, 2],\n    [6, 23, 2, 0],\n    [6, 24, 2, 3],\n    [6, 25, 0, 2],\n    [6, 26, 3, 3],\n    [7, 54, 4, 1],\n    [7, 55, 1, 4],\n    [7, 56, 4, 2],\n    [7, 57, 2, 4],\n    [7, 58, 4, 3],\n    [7, 59, 3, 4],\n    [7, 60, 3, 0],\n    [7, 61, 0, 3],\n    [7, 62, 5, 1],\n    [7, 63, 5, 2],\n    [7, 64, 2, 5],\n    [7, 65, 4, 4],\n    [7, 66, 1, 5],\n    [7, 67, 5, 3],\n    [7, 68, 3, 5],\n    [7, 69, 5, 4],\n    [8, 140, 4, 5],\n    [8, 141, 6, 2],\n    [8, 142, 2, 6],\n    [8, 143, 6, 1],\n    [8, 144, 6, 3],\n    [8, 145, 3, 6],\n    [8, 146, 1, 6],\n    [8, 147, 4, 16],\n    [8, 148, 3, 16],\n    [8, 149, 16, 5],\n    [8, 150, 16, 3],\n    [8, 151, 16, 4],\n    [8, 152, 6, 4],\n    [8, 153, 16, 6],\n    [8, 154, 4, 0],\n    [8, 155, 4, 6],\n    [8, 156, 0, 4],\n    [8, 157, 2, 16],\n    [8, 158, 5, 5],\n    [8, 159, 5, 16],\n    [8, 160, 16, 7],\n    [8, 161, 16, 2],\n    [8, 162, 16, 8],\n    [8, 163, 2, 7],\n    [8, 164, 7, 2],\n    [8, 165, 3, 7],\n    [8, 166, 6, 5],\n    [8, 167, 5, 6],\n    [8, 168, 6, 16],\n    [8, 169, 16, 10],\n    [8, 170, 7, 3],\n    [8, 171, 7, 1],\n    [8, 172, 16, 9],\n    [8, 173, 7, 16],\n    [8, 174, 1, 16],\n    [8, 175, 1, 7],\n    [8, 176, 4, 7],\n    [8, 177, 16, 11],\n    [8, 178, 7, 4],\n    [8, 179, 16, 12],\n    [8, 180, 8, 16],\n    [8, 181, 16, 1],\n    [8, 182, 6, 6],\n    [8, 183, 9, 16],\n    [8, 184, 2, 8],\n    [8, 185, 5, 7],\n    [8, 186, 10, 16],\n    [8, 187, 16, 13],\n    [8, 188, 8, 3],\n    [8, 189, 8, 2],\n    [8, 190, 3, 8],\n    [8, 191, 5, 0],\n    [8, 192, 16, 14],\n    [8, 193, 11, 16],\n    [8, 194, 7, 5],\n    [8, 195, 4, 8],\n    [8, 196, 6, 7],\n    [8, 197, 7, 6],\n    [8, 198, 0, 5],\n    [9, 398, 8, 4],\n    [9, 399, 16, 15],\n    [9, 400, 12, 16],\n    [9, 401, 1, 8],\n    [9, 402, 8, 1],\n    [9, 403, 14, 16],\n    [9, 404, 5, 8],\n    [9, 405, 13, 16],\n    [9, 406, 3, 9],\n    [9, 407, 8, 5],\n    [9, 408, 7, 7],\n    [9, 409, 2, 9],\n    [9, 410, 8, 6],\n    [9, 411, 9, 2],\n    [9, 412, 9, 3],\n    [9, 413, 15, 16],\n    [9, 414, 4, 9],\n    [9, 415, 6, 8],\n    [9, 416, 6, 0],\n    [9, 417, 9, 4],\n    [9, 418, 5, 9],\n    [9, 419, 8, 7],\n    [9, 420, 7, 8],\n    [9, 421, 1, 9],\n    [9, 422, 10, 3],\n    [9, 423, 0, 6],\n    [9, 424, 10, 2],\n    [9, 425, 9, 1],\n    [9, 426, 9, 5],\n    [9, 427, 4, 10],\n    [9, 428, 2, 10],\n    [9, 429, 9, 6],\n    [9, 430, 3, 10],\n    [9, 431, 6, 9],\n    [9, 432, 10, 4],\n    [9, 433, 8, 8],\n    [9, 434, 10, 5],\n    [9, 435, 9, 7],\n    [9, 436, 11, 3],\n    [9, 437, 1, 10],\n    [9, 438, 7, 0],\n    [9, 439, 10, 6],\n    [9, 440, 7, 9],\n    [9, 441, 3, 11],\n    [9, 442, 5, 10],\n    [9, 443, 10, 1],\n    [9, 444, 4, 11],\n    [9, 445, 11, 2],\n    [9, 446, 13, 2],\n    [9, 447, 6, 10],\n    [9, 448, 13, 3],\n    [9, 449, 2, 11],\n    [9, 450, 16, 0],\n    [9, 451, 5, 11],\n    [9, 452, 11, 5],\n    [10, 906, 11, 4],\n    [10, 907, 9, 8],\n    [10, 908, 7, 10],\n    [10, 909, 8, 9],\n    [10, 910, 0, 16],\n    [10, 911, 4, 13],\n    [10, 912, 0, 7],\n    [10, 913, 3, 13],\n    [10, 914, 11, 6],\n    [10, 915, 13, 1],\n    [10, 916, 13, 4],\n    [10, 917, 12, 3],\n    [10, 918, 2, 13],\n    [10, 919, 13, 5],\n    [10, 920, 8, 10],\n    [10, 921, 6, 11],\n    [10, 922, 10, 8],\n    [10, 923, 10, 7],\n    [10, 924, 14, 2],\n    [10, 925, 12, 4],\n    [10, 926, 1, 11],\n    [10, 927, 4, 12],\n    [10, 928, 11, 1],\n    [10, 929, 3, 12],\n    [10, 930, 1, 13],\n    [10, 931, 12, 2],\n    [10, 932, 7, 11],\n    [10, 933, 3, 14],\n    [10, 934, 5, 12],\n    [10, 935, 5, 13],\n    [10, 936, 14, 4],\n    [10, 937, 4, 14],\n    [10, 938, 11, 7],\n    [10, 939, 14, 3],\n    [10, 940, 12, 5],\n    [10, 941, 13, 6],\n    [10, 942, 12, 6],\n    [10, 943, 8, 0],\n    [10, 944, 11, 8],\n    [10, 945, 2, 12],\n    [10, 946, 9, 9],\n    [10, 947, 14, 5],\n    [10, 948, 6, 13],\n    [10, 949, 10, 10],\n    [10, 950, 15, 2],\n    [10, 951, 8, 11],\n    [10, 952, 9, 10],\n    [10, 953, 14, 6],\n    [10, 954, 10, 9],\n    [10, 955, 5, 14],\n    [10, 956, 11, 9],\n    [10, 957, 14, 1],\n    [10, 958, 2, 14],\n    [10, 959, 6, 12],\n    [10, 960, 1, 12],\n    [10, 961, 13, 8],\n    [10, 962, 0, 8],\n    [10, 963, 13, 7],\n    [10, 964, 7, 12],\n    [10, 965, 12, 7],\n    [10, 966, 7, 13],\n    [10, 967, 15, 3],\n    [10, 968, 12, 1],\n    [10, 969, 6, 14],\n    [10, 970, 2, 15],\n    [10, 971, 15, 5],\n    [10, 972, 15, 4],\n    [10, 973, 1, 14],\n    [10, 974, 9, 11],\n    [10, 975, 4, 15],\n    [10, 976, 14, 7],\n    [10, 977, 8, 13],\n    [10, 978, 13, 9],\n    [10, 979, 8, 12],\n    [10, 980, 5, 15],\n    [10, 981, 3, 15],\n    [10, 982, 10, 11],\n    [10, 983, 11, 10],\n    [10, 984, 12, 8],\n    [10, 985, 15, 6],\n    [10, 986, 15, 7],\n    [10, 987, 8, 14],\n    [10, 988, 15, 1],\n    [10, 989, 7, 14],\n    [10, 990, 9, 0],\n    [10, 991, 0, 9],\n    [10, 992, 9, 13],\n    [10, 993, 9, 12],\n    [10, 994, 12, 9],\n    [10, 995, 14, 8],\n    [10, 996, 10, 13],\n    [10, 997, 14, 9],\n    [10, 998, 12, 10],\n    [10, 999, 6, 15],\n    [10, 1000, 7, 15],\n    [11, 2002, 9, 14],\n    [11, 2003, 15, 8],\n    [11, 2004, 11, 11],\n    [11, 2005, 11, 14],\n    [11, 2006, 1, 15],\n    [11, 2007, 10, 12],\n    [11, 2008, 10, 14],\n    [11, 2009, 13, 11],\n    [11, 2010, 13, 10],\n    [11, 2011, 11, 13],\n    [11, 2012, 11, 12],\n    [11, 2013, 8, 15],\n    [11, 2014, 14, 11],\n    [11, 2015, 13, 12],\n    [11, 2016, 12, 13],\n    [11, 2017, 15, 9],\n    [11, 2018, 14, 10],\n    [11, 2019, 10, 0],\n    [11, 2020, 12, 11],\n    [11, 2021, 9, 15],\n    [11, 2022, 0, 10],\n    [11, 2023, 12, 12],\n    [11, 2024, 11, 0],\n    [11, 2025, 12, 14],\n    [11, 2026, 10, 15],\n    [11, 2027, 13, 13],\n    [11, 2028, 0, 13],\n    [11, 2029, 14, 12],\n    [11, 2030, 15, 10],\n    [11, 2031, 15, 11],\n    [11, 2032, 11, 15],\n    [11, 2033, 14, 13],\n    [11, 2034, 13, 0],\n    [11, 2035, 0, 11],\n    [11, 2036, 13, 14],\n    [11, 2037, 15, 12],\n    [11, 2038, 15, 13],\n    [11, 2039, 12, 15],\n    [11, 2040, 14, 0],\n    [11, 2041, 14, 14],\n    [11, 2042, 13, 15],\n    [11, 2043, 12, 0],\n    [11, 2044, 14, 15],\n    [12, 4090, 0, 14],\n    [12, 4091, 0, 12],\n    [12, 4092, 15, 14],\n    [12, 4093, 15, 0],\n    [12, 4094, 0, 15],\n    [12, 4095, 15, 15]\n];\n\nconst HCB_SF = [\n    [1, 0, 60],\n    [3, 4, 59],\n    [4, 10, 61],\n    [4, 11, 58],\n    [4, 12, 62],\n    [5, 26, 57],\n    [5, 27, 63],\n    [6, 56, 56],\n    [6, 57, 64],\n    [6, 58, 55],\n    [6, 59, 65],\n    [7, 120, 66],\n    [7, 121, 54],\n    [7, 122, 67],\n    [8, 246, 53],\n    [8, 247, 68],\n    [8, 248, 52],\n    [8, 249, 69],\n    [8, 250, 51],\n    [9, 502, 70],\n    [9, 503, 50],\n    [9, 504, 49],\n    [9, 505, 71],\n    [10, 1012, 72],\n    [10, 1013, 48],\n    [10, 1014, 73],\n    [10, 1015, 47],\n    [10, 1016, 74],\n    [10, 1017, 46],\n    [11, 2036, 76],\n    [11, 2037, 75],\n    [11, 2038, 77],\n    [11, 2039, 78],\n    [11, 2040, 45],\n    [11, 2041, 43],\n    [12, 4084, 44],\n    [12, 4085, 79],\n    [12, 4086, 42],\n    [12, 4087, 41],\n    [12, 4088, 80],\n    [12, 4089, 40],\n    [13, 8180, 81],\n    [13, 8181, 39],\n    [13, 8182, 82],\n    [13, 8183, 38],\n    [13, 8184, 83],\n    [14, 16370, 37],\n    [14, 16371, 35],\n    [14, 16372, 85],\n    [14, 16373, 33],\n    [14, 16374, 36],\n    [14, 16375, 34],\n    [14, 16376, 84],\n    [14, 16377, 32],\n    [15, 32756, 87],\n    [15, 32757, 89],\n    [15, 32758, 30],\n    [15, 32759, 31],\n    [16, 65520, 86],\n    [16, 65521, 29],\n    [16, 65522, 26],\n    [16, 65523, 27],\n    [16, 65524, 28],\n    [16, 65525, 24],\n    [16, 65526, 88],\n    [17, 131054, 25],\n    [17, 131055, 22],\n    [17, 131056, 23],\n    [18, 262114, 90],\n    [18, 262115, 21],\n    [18, 262116, 19],\n    [18, 262117, 3],\n    [18, 262118, 1],\n    [18, 262119, 2],\n    [18, 262120, 0],\n    [19, 524242, 98],\n    [19, 524243, 99],\n    [19, 524244, 100],\n    [19, 524245, 101],\n    [19, 524246, 102],\n    [19, 524247, 117],\n    [19, 524248, 97],\n    [19, 524249, 91],\n    [19, 524250, 92],\n    [19, 524251, 93],\n    [19, 524252, 94],\n    [19, 524253, 95],\n    [19, 524254, 96],\n    [19, 524255, 104],\n    [19, 524256, 111],\n    [19, 524257, 112],\n    [19, 524258, 113],\n    [19, 524259, 114],\n    [19, 524260, 115],\n    [19, 524261, 116],\n    [19, 524262, 110],\n    [19, 524263, 105],\n    [19, 524264, 106],\n    [19, 524265, 107],\n    [19, 524266, 108],\n    [19, 524267, 109],\n    [19, 524268, 118],\n    [19, 524269, 6],\n    [19, 524270, 8],\n    [19, 524271, 9],\n    [19, 524272, 10],\n    [19, 524273, 5],\n    [19, 524274, 103],\n    [19, 524275, 120],\n    [19, 524276, 119],\n    [19, 524277, 4],\n    [19, 524278, 7],\n    [19, 524279, 15],\n    [19, 524280, 16],\n    [19, 524281, 18],\n    [19, 524282, 20],\n    [19, 524283, 17],\n    [19, 524284, 11],\n    [19, 524285, 12],\n    [19, 524286, 14],\n    [19, 524287, 13]\n];\n\nconst CODEBOOKS = [HCB1, HCB2, HCB3, HCB4, HCB5, HCB6, HCB7, HCB8, HCB9, HCB10, HCB11];\nconst UNSIGNED = [false, false, true, true, false, false, true, true, true, true, true],\n      QUAD_LEN = 4, \n      PAIR_LEN = 2;\n\nvar Huffman = {\n    findOffset: function(stream, table) {\n        var off = 0,\n            len = table[off][0],\n            cw = stream.read(len);\n            \n        while (cw !== table[off][1]) {\n            var j = table[++off][0] - len;\n            len = table[off][0];\n            cw <<= j;\n            cw |= stream.read(j);\n        }\n        \n        return off;\n    },\n    \n    signValues: function(stream, data, off, len) {\n        for (var i = off; i < off + len; i++) {\n            if (data[i] && stream.read(1))\n                data[i] = -data[i];\n        }\n    },\n    \n    getEscape: function(stream, s) {\n        var i = 4;\n        while (stream.read(1))\n            i++;\n            \n        var j = stream.read(i) | (1 << i);\n        return s < 0 ? -j : j;\n    },\n    \n    decodeScaleFactor: function(stream) {\n        var offset = this.findOffset(stream, HCB_SF);\n        return HCB_SF[offset][2];\n    },\n    \n    decodeSpectralData: function(stream, cb, data, off) {\n        var HCB = CODEBOOKS[cb - 1],\n            offset = this.findOffset(stream, HCB);\n            \n        data[off] = HCB[offset][2];\n        data[off + 1] = HCB[offset][3];\n        \n        if (cb < 5) {\n            data[off + 2] = HCB[offset][4];\n            data[off + 3] = HCB[offset][5];\n        }\n        \n        // sign and escape\n        if (cb < 11) {\n            if (UNSIGNED[cb - 1])\n                this.signValues(stream, data, off, cb < 5 ? QUAD_LEN : PAIR_LEN);\n                \n        } else if (cb === 11 || cb > 15) {\n            this.signValues(stream, data, off, cb < 5 ? QUAD_LEN : PAIR_LEN);\n            \n            if (Math.abs(data[off]) === 16) \n                data[off] = this.getEscape(stream, data[off]);\n                \n            if (Math.abs(data[off + 1]) === 16)\n                data[off + 1] = this.getEscape(stream, data[off + 1]);\n        } else {\n            throw new Error(\"Huffman: unknown spectral codebook: \" + cb);\n        }\n    }\n};\n\nmodule.exports = Huffman;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n    \n// Temporal Noise Shaping\nfunction TNS(config) {\n    this.maxBands = TNS_MAX_BANDS_1024[config.sampleIndex]\n    this.nFilt = new Int32Array(8);\n    this.length = new Array(8);\n    this.direction = new Array(8);\n    this.order = new Array(8);\n    this.coef = new Array(8);\n    \n    // Probably could allocate these as needed\n    for (var w = 0; w < 8; w++) {\n        this.length[w] = new Int32Array(4);\n        this.direction[w] = new Array(4);\n        this.order[w] = new Int32Array(4);\n        this.coef[w] = new Array(4);\n        \n        for (var filt = 0; filt < 4; filt++) {\n            this.coef[w][filt] = new Float32Array(TNS_MAX_ORDER);\n        }\n    }\n    \n    this.lpc = new Float32Array(TNS_MAX_ORDER);\n    this.tmp = new Float32Array(TNS_MAX_ORDER);\n}\n\nconst TNS_MAX_ORDER = 20,\n      SHORT_BITS = [1, 4, 3],\n      LONG_BITS = [2, 6, 5];\n      \nconst TNS_COEF_1_3 = [0.00000000, -0.43388373, 0.64278758, 0.34202015],\n\n      TNS_COEF_0_3 = [0.00000000, -0.43388373, -0.78183150, -0.97492790,\n                      0.98480773, 0.86602539, 0.64278758, 0.34202015],\n                      \n      TNS_COEF_1_4 = [0.00000000, -0.20791170, -0.40673664, -0.58778524,\n                      0.67369562, 0.52643216, 0.36124167, 0.18374951],\n                      \n      TNS_COEF_0_4 = [0.00000000, -0.20791170, -0.40673664, -0.58778524,\n                      -0.74314481, -0.86602539, -0.95105654, -0.99452192,\n                      0.99573416, 0.96182561, 0.89516330, 0.79801720,\n                      0.67369562, 0.52643216, 0.36124167, 0.18374951],\n                      \n      TNS_TABLES = [TNS_COEF_0_3, TNS_COEF_0_4, TNS_COEF_1_3, TNS_COEF_1_4];\n      \nconst TNS_MAX_BANDS_1024 = [31, 31, 34, 40, 42, 51, 46, 46, 42, 42, 42, 39, 39],\n      TNS_MAX_BANDS_128 = [9, 9, 10, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14];\n\nTNS.prototype.decode = function(stream, info) {\n    var windowCount = info.windowCount,\n        bits = info.windowSequence === 2 ? SHORT_BITS : LONG_BITS;\n    \n    for (var w = 0; w < windowCount; w++) {\n        if (this.nFilt[w] = stream.read(bits[0])) {\n            var coefRes = stream.read(1),\n                nFilt_w = this.nFilt[w],\n                length_w = this.length[w],\n                order_w = this.order[w],\n                direction_w = this.direction[w],\n                coef_w = this.coef[w];\n            \n            for (var filt = 0; filt < nFilt_w; filt++) {\n                length_w[filt] = stream.read(bits[1]);\n                \n                if ((order_w[filt] = stream.read(bits[2])) > 20)\n                    throw new Error(\"TNS filter out of range: \" + order_w[filt]);\n                \n                if (order_w[filt]) {\n                    direction_w[filt] = !!stream.read(1);\n                    var coefCompress = stream.read(1),\n                        coefLen = coefRes + 3 - coefCompress,\n                        tmp = 2 * coefCompress + coefRes,\n                        table = TNS_TABLES[tmp],\n                        order_w_filt = order_w[filt],\n                        coef_w_filt = coef_w[filt];\n                        \n                    for (var i = 0; i < order_w_filt; i++)\n                        coef_w_filt[i] = table[stream.read(coefLen)];\n                }\n                    \n            }\n        }\n    }\n};\n\nTNS.prototype.process = function(ics, data, decode) {\n    var mmm = Math.min(this.maxBands, ics.maxSFB),\n        lpc = this.lpc,\n        tmp = this.tmp,\n        info = ics.info,\n        windowCount = info.windowCount;\n        \n    for (var w = 0; w < windowCount; w++) {\n        var bottom = info.swbCount,\n            nFilt_w = this.nFilt[w],\n            length_w = this.length[w],\n            order_w = this.order[w],\n            coef_w = this.coef[w],\n            direction_w = this.direction[w];\n        \n        for (var filt = 0; filt < nFilt_w; filt++) {\n            var top = bottom,\n                bottom = Math.max(0, tmp - length_w[filt]),\n                order = order_w[filt];\n                \n            if (order === 0) continue;\n            \n            // calculate lpc coefficients\n            var autoc = coef_w[filt];\n            for (var i = 0; i < order; i++) {\n                var r = -autoc[i];\n                lpc[i] = r;\n\n                for (var j = 0, len = (i + 1) >> 1; j < len; j++) {\n                    var f = lpc[j],\n                        b = lpc[i - 1 - j];\n\n                    lpc[j] = f + r * b;\n                    lpc[i - 1 - j] = b + r * f;\n                }\n            }\n            \n            var start = info.swbOffsets[Math.min(bottom, mmm)],\n                end = info.swbOffsets[Math.min(top, mmm)],\n                size,\n                inc = 1;\n                \n            if ((size = end - start) <= 0) continue;\n            \n            if (direction_w[filt]) {\n                inc = -1;\n                start = end - 1;\n            }\n            \n            start += w * 128;\n            \n            if (decode) {\n                // ar filter\n                for (var m = 0; m < size; m++, start += inc) {\n                    for (var i = 1; i <= Math.min(m, order); i++) {\n                        data[start] -= data[start - i * inc] * lpc[i - 1];\n                    }\n                }\n            } else {\n                // ma filter\n                for (var m = 0; m < size; m++, start += inc) {\n                    tmp[0] = data[start];\n                    \n                    for (var i = 1; i <= Math.min(m, order); i++)\n                        data[start] += tmp[i] * lpc[i - 1];\n                    \n                    for (var i = order; i > 0; i--)\n                        tmp[i] = tmp[i - 1];\n                }\n            }\n        }\n    }\n};\n    \nmodule.exports = TNS;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar tables = require('./tables');\nvar Huffman = require('./huffman');\nvar TNS = require('./tns');\n    \n// Individual Channel Stream\nfunction ICStream(config) {\n    this.info = new ICSInfo();\n    this.bandTypes = new Int32Array(MAX_SECTIONS);\n    this.sectEnd = new Int32Array(MAX_SECTIONS);\n    this.data = new Float32Array(config.frameLength);\n    this.scaleFactors = new Float32Array(MAX_SECTIONS);\n    this.randomState = 0x1F2E3D4C;\n    this.tns = new TNS(config);\n    this.specBuf = new Int32Array(4);\n}\n      \nICStream.ZERO_BT = 0;         // Scalefactors and spectral data are all zero.\nICStream.FIRST_PAIR_BT = 5;   // This and later band types encode two values (rather than four) with one code word.\nICStream.ESC_BT = 11;         // Spectral data are coded with an escape sequence.\nICStream.NOISE_BT = 13;       // Spectral data are scaled white noise not coded in the bitstream.\nICStream.INTENSITY_BT2 = 14;  // Scalefactor data are intensity stereo positions.\nICStream.INTENSITY_BT = 15;   // Scalefactor data are intensity stereo positions.\n\nICStream.ONLY_LONG_SEQUENCE = 0;\nICStream.LONG_START_SEQUENCE = 1;\nICStream.EIGHT_SHORT_SEQUENCE = 2;\nICStream.LONG_STOP_SEQUENCE = 3;\n\nconst MAX_SECTIONS = 120,\n      MAX_WINDOW_GROUP_COUNT = 8;\n\nconst SF_DELTA = 60,\n      SF_OFFSET = 200;\n\nICStream.prototype = {\n    decode: function(stream, config, commonWindow) {\n        this.globalGain = stream.read(8);\n        \n        if (!commonWindow)\n            this.info.decode(stream, config, commonWindow);\n            \n        this.decodeBandTypes(stream, config);\n        this.decodeScaleFactors(stream);\n        \n        if (this.pulsePresent = stream.read(1)) {\n            if (this.info.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE)\n                throw new Error(\"Pulse tool not allowed in eight short sequence.\");\n                \n            this.decodePulseData(stream);\n        }\n        \n        if (this.tnsPresent = stream.read(1)) {\n            this.tns.decode(stream, this.info);\n        }\n        \n        if (this.gainPresent = stream.read(1)) {\n            throw new Error(\"TODO: decode gain control/SSR\");\n        }\n        \n        this.decodeSpectralData(stream);\n    },\n    \n    decodeBandTypes: function(stream, config) {\n        var bits = this.info.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE ? 3 : 5,\n            groupCount = this.info.groupCount,\n            maxSFB = this.info.maxSFB,\n            bandTypes = this.bandTypes,\n            sectEnd = this.sectEnd,\n            idx = 0,\n            escape = (1 << bits) - 1;\n        \n        for (var g = 0; g < groupCount; g++) {\n            var k = 0;\n            while (k < maxSFB) {\n                var end = k,\n                    bandType = stream.read(4);\n                    \n                if (bandType === 12)\n                    throw new Error(\"Invalid band type: 12\");\n                    \n                var incr;\n                while ((incr = stream.read(bits)) === escape)\n                    end += incr;\n                    \n                end += incr;\n                \n                if (end > maxSFB)\n                    throw new Error(\"Too many bands (\" + end + \" > \" + maxSFB + \")\");\n                    \n                for (; k < end; k++) {\n                    bandTypes[idx] = bandType;\n                    sectEnd[idx++] = end;\n                }\n            }\n        }\n    },\n    \n    decodeScaleFactors: function(stream) {\n        var groupCount = this.info.groupCount,\n            maxSFB = this.info.maxSFB,\n            offset = [this.globalGain, this.globalGain - 90, 0], // spectrum, noise, intensity\n            idx = 0,\n            noiseFlag = true,\n            scaleFactors = this.scaleFactors,\n            sectEnd = this.sectEnd,\n            bandTypes = this.bandTypes;\n                        \n        for (var g = 0; g < groupCount; g++) {\n            for (var i = 0; i < maxSFB;) {\n                var runEnd = sectEnd[idx];\n                \n                switch (bandTypes[idx]) {\n                    case ICStream.ZERO_BT:\n                        for (; i < runEnd; i++, idx++) {\n                            scaleFactors[idx] = 0;\n                        }\n                        break;\n                        \n                    case ICStream.INTENSITY_BT:\n                    case ICStream.INTENSITY_BT2:\n                        for(; i < runEnd; i++, idx++) {\n                            offset[2] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\n                            var tmp = Math.min(Math.max(offset[2], -155), 100);\n                            scaleFactors[idx] = tables.SCALEFACTOR_TABLE[-tmp + SF_OFFSET];\n                        }\n                        break;\n                        \n                    case ICStream.NOISE_BT:\n                        for(; i < runEnd; i++, idx++) {\n                            if (noiseFlag) {\n                                offset[1] += stream.read(9) - 256;\n                                noiseFlag = false;\n                            } else {\n                                offset[1] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\n                            }\n                            var tmp = Math.min(Math.max(offset[1], -100), 155);\n                            scaleFactors[idx] = -tables.SCALEFACTOR_TABLE[tmp + SF_OFFSET];\n                        }\n                        break;\n                        \n                    default:\n                        for(; i < runEnd; i++, idx++) {\n                            offset[0] += Huffman.decodeScaleFactor(stream) - SF_DELTA;\n                            if(offset[0] > 255) \n                                throw new Error(\"Scalefactor out of range: \" + offset[0]);\n                                \n                            scaleFactors[idx] = tables.SCALEFACTOR_TABLE[offset[0] - 100 + SF_OFFSET];\n                        }\n                        break;\n                }\n            }\n        }\n    },\n    \n    decodePulseData: function(stream) {\n        var pulseCount = stream.read(2) + 1,\n            pulseSWB = stream.read(6);\n            \n        if (pulseSWB >= this.info.swbCount)\n            throw new Error(\"Pulse SWB out of range: \" + pulseSWB);\n            \n        if (!this.pulseOffset || this.pulseOffset.length !== pulseCount) {\n            // only reallocate if needed\n            this.pulseOffset = new Int32Array(pulseCount);\n            this.pulseAmp = new Int32Array(pulseCount);\n        }\n        \n        this.pulseOffset[0] = this.info.swbOffsets[pulseSWB] + stream.read(5);\n        this.pulseAmp[0] = stream.read(4);\n        \n        if (this.pulseOffset[0] > 1023)\n            throw new Error(\"Pulse offset out of range: \" + this.pulseOffset[0]);\n        \n        for (var i = 1; i < pulseCount; i++) {\n            this.pulseOffset[i] = stream.read(5) + this.pulseOffset[i - 1];\n            if (this.pulseOffset[i] > 1023)\n                throw new Error(\"Pulse offset out of range: \" + this.pulseOffset[i]);\n                \n            this.pulseAmp[i] = stream.read(4);\n        }\n    },\n    \n    decodeSpectralData: function(stream) {\n        var data = this.data,\n            info = this.info,\n            maxSFB = info.maxSFB,\n            windowGroups = info.groupCount,\n            offsets = info.swbOffsets,\n            bandTypes = this.bandTypes,\n            scaleFactors = this.scaleFactors,\n            buf = this.specBuf;\n            \n        var groupOff = 0, idx = 0;\n        for (var g = 0; g < windowGroups; g++) {\n            var groupLen = info.groupLength[g];\n            \n            for (var sfb = 0; sfb < maxSFB; sfb++, idx++) {\n                var hcb = bandTypes[idx],\n                    off = groupOff + offsets[sfb],\n                    width = offsets[sfb + 1] - offsets[sfb];\n                    \n                if (hcb === ICStream.ZERO_BT || hcb === ICStream.INTENSITY_BT || hcb === ICStream.INTENSITY_BT2) {\n                    for (var group = 0; group < groupLen; group++, off += 128) {\n                        for (var i = off; i < off + width; i++) {\n                            data[i] = 0;\n                        }\n                    }\n                } else if (hcb === ICStream.NOISE_BT) {\n                    // fill with random values\n                    for (var group = 0; group < groupLen; group++, off += 128) {\n                        var energy = 0;\n                        \n                        for (var k = 0; k < width; k++) {\n                            this.randomState = (this.randomState * (1664525 + 1013904223))|0;\n                            data[off + k] = this.randomState;\n                            energy += data[off + k] * data[off + k];\n                        }\n                        \n                        var scale = scaleFactors[idx] / Math.sqrt(energy);\n                        for (var k = 0; k < width; k++) {\n                            data[off + k] *= scale;\n                        }\n                    }\n                } else {\n                    for (var group = 0; group < groupLen; group++, off += 128) {\n                        var num = (hcb >= ICStream.FIRST_PAIR_BT) ? 2 : 4;\n                        for (var k = 0; k < width; k += num) {\n                            Huffman.decodeSpectralData(stream, hcb, buf, 0);\n                            \n                            // inverse quantization & scaling\n                            for (var j = 0; j < num; j++) {\n                                data[off + k + j] = (buf[j] > 0) ? tables.IQ_TABLE[buf[j]] : -tables.IQ_TABLE[-buf[j]];\n                                data[off + k + j] *= scaleFactors[idx];\n                            }\n                        }\n                    }\n                }\n            }\n            groupOff += groupLen << 7;\n        }\n        \n        // add pulse data, if present\n        if (this.pulsePresent) {\n            throw new Error('TODO: add pulse data');\n        }\n    }\n}\n\n// Individual Channel Stream Info\nfunction ICSInfo() {\n    this.windowShape = new Int32Array(2);\n    this.windowSequence = ICStream.ONLY_LONG_SEQUENCE;\n    this.groupLength = new Int32Array(MAX_WINDOW_GROUP_COUNT);\n    this.ltpData1Present = false;\n    this.ltpData2Present = false;\n}\n\nICSInfo.prototype = {\n    decode: function(stream, config, commonWindow) {\n        stream.advance(1); // reserved\n        \n        this.windowSequence = stream.read(2);\n        this.windowShape[0] = this.windowShape[1];\n        this.windowShape[1] = stream.read(1);\n        \n        this.groupCount = 1;\n        this.groupLength[0] = 1;\n        \n        if (this.windowSequence === ICStream.EIGHT_SHORT_SEQUENCE) {\n            this.maxSFB = stream.read(4);\n            for (var i = 0; i < 7; i++) {\n                if (stream.read(1)) {\n                    this.groupLength[this.groupCount - 1]++;\n                } else {\n                    this.groupCount++;\n                    this.groupLength[this.groupCount - 1] = 1;\n                }\n            }\n            \n            this.windowCount = 8;\n            this.swbOffsets = tables.SWB_OFFSET_128[config.sampleIndex];\n            this.swbCount = tables.SWB_SHORT_WINDOW_COUNT[config.sampleIndex];\n            this.predictorPresent = false;\n        } else {\n            this.maxSFB = stream.read(6);\n            this.windowCount = 1;\n            this.swbOffsets = tables.SWB_OFFSET_1024[config.sampleIndex];\n            this.swbCount = tables.SWB_LONG_WINDOW_COUNT[config.sampleIndex];\n            this.predictorPresent = !!stream.read(1);\n            \n            if (this.predictorPresent)\n                this.decodePrediction(stream, config, commonWindow);\n        }\n    },\n    \n    decodePrediction: function(stream, config, commonWindow) {\n        throw new Error('Prediction not implemented.');\n        \n        switch (config.profile) {\n            case AOT_AAC_MAIN:\n                throw new Error('Prediction not implemented.');\n                break;\n                \n            case AOT_AAC_LTP:\n                throw new Error('LTP prediction not implemented.');\n                break;\n                \n            default:\n                throw new Error('Unsupported profile for prediction ' + config.profile);\n        }\n    }\n};\n\nmodule.exports = ICStream;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ICStream = require('./ics');\n    \n// Channel Pair Element\nfunction CPEElement(config) {\n    this.ms_used = [];\n    this.left = new ICStream(config);\n    this.right = new ICStream(config);\n}\n\nconst MAX_MS_MASK = 128;\n\nconst MASK_TYPE_ALL_0 = 0,\n      MASK_TYPE_USED = 1,\n      MASK_TYPE_ALL_1 = 2,\n      MASK_TYPE_RESERVED = 3;\n\nCPEElement.prototype.decode = function(stream, config) {\n    var left = this.left,\n        right = this.right,\n        ms_used = this.ms_used;\n        \n    if (this.commonWindow = !!stream.read(1)) {\n        left.info.decode(stream, config, true);\n        right.info = left.info;\n\n        var mask = stream.read(2);\n        this.maskPresent = !!mask;\n        \n        switch (mask) {\n            case MASK_TYPE_USED:\n                var len = left.info.groupCount * left.info.maxSFB;\n                for (var i = 0; i < len; i++) {\n                    ms_used[i] = !!stream.read(1);\n                }\n                break;\n            \n            case MASK_TYPE_ALL_0:    \n            case MASK_TYPE_ALL_1:\n                var val = !!mask;\n                for (var i = 0; i < MAX_MS_MASK; i++) {\n                    ms_used[i] = val;\n                }\n                break;\n                \n            default:\n                throw new Error(\"Reserved ms mask type: \" + mask);\n        }\n    } else {\n        for (var i = 0; i < MAX_MS_MASK; i++)\n            ms_used[i] = false;\n    }\n    \n    left.decode(stream, config, this.commonWindow);\n    right.decode(stream, config, this.commonWindow);\n};\n\nmodule.exports = CPEElement;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ICStream = require('./ics');\nvar Huffman = require('./huffman');\n    \n// Channel Coupling Element\nfunction CCEElement(config) {\n    this.ics = new ICStream(config);\n    this.channelPair = new Array(8);\n    this.idSelect = new Int32Array(8);\n    this.chSelect = new Int32Array(8);\n    this.gain = new Array(16);\n}\n\nCCEElement.BEFORE_TNS = 0;\nCCEElement.AFTER_TNS = 1;\nCCEElement.AFTER_IMDCT = 2;\n\nconst CCE_SCALE = new Float32Array([\n    1.09050773266525765921,\n    1.18920711500272106672,\n    1.4142135623730950488016887,\n    2.0\n]);\n\nCCEElement.prototype = {\n    decode: function(stream, config) {\n        var channelPair = this.channelPair,\n            idSelect = this.idSelect,\n            chSelect = this.chSelect;\n\n        this.couplingPoint = 2 * stream.read(1);\n        this.coupledCount = stream.read(3);\n\n        var gainCount = 0;\n        for (var i = 0; i <= this.coupledCount; i++) {\n            gainCount++;\n            channelPair[i] = stream.read(1);\n            idSelect[i] = stream.read(4);\n\n            if (channelPair[i]) {\n                chSelect[i] = stream.read(2);\n                if (chSelect[i] === 3)\n                    gainCount++;\n\n            } else {\n                chSelect[i] = 2;\n            }\n        }\n\n        this.couplingPoint += stream.read(1);\n        this.couplingPoint |= (this.couplingPoint >>> 1);\n\n        var sign = stream.read(1),\n            scale = CCE_SCALE[stream.read(2)];\n\n        this.ics.decode(stream, config, false);\n\n        var groupCount = this.ics.info.groupCount,\n            maxSFB = this.ics.info.maxSFB,\n            bandTypes = this.ics.bandTypes;\n\n        for (var i = 0; i < gainCount; i++) {\n            var idx = 0,\n                cge = 1,\n                gain = 0,\n                gainCache = 1;\n\n            if (i > 0) {\n                cge = this.couplingPoint === CCEElement.AFTER_IMDCT ? 1 : stream.read(1);\n                gain = cge ? Huffman.decodeScaleFactor(stream) - 60 : 0;\n                gainCache = Math.pow(scale, -gain);\n            }\n\n            var gain_i = this.gain[i] = new Float32Array(120);\n\n            if (this.couplingPoint === CCEElement.AFTER_IMDCT) {\n                gain_i[0] = gainCache;\n            } else {\n                for (var g = 0; g < groupCount; g++) {\n                    for (var sfb = 0; sfb < maxSFB; sfb++) {\n                        if (bandTypes[idx] !== ICStream.ZERO_BT) {\n                            if (cge === 0) {\n                                var t = Huffman.decodeScaleFactor(stream) - 60;\n                                if (t !== 0) {\n                                    var s = 1;\n                                    t = gain += t;\n                                    if (!sign) {\n                                        s -= 2 * (t & 0x1);\n                                        t >>>= 1;\n                                    }\n                                    gainCache = Math.pow(scale, -t) * s;\n                                }\n                            }\n                            gain_i[idx++] = gainCache;\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    applyIndependentCoupling: function(index, data) {\n        var gain = this.gain[index][0],\n            iqData = this.ics.data;\n\n        for (var i = 0; i < data.length; i++) {\n            data[i] += gain * iqData[i];\n        }\n    },\n\n    applyDependentCoupling: function(index, data) {\n        var info = this.ics.info,\n            swbOffsets = info.swbOffsets,\n            groupCount = info.groupCount,\n            maxSFB = info.maxSFB,\n            bandTypes = this.ics.bandTypes,\n            iqData = this.ics.data;\n\n        var idx = 0,\n            offset = 0,\n            gains = this.gain[index];\n\n        for (var g = 0; g < groupCount; g++) {\n            var len = info.groupLength[g];\n\n            for (var sfb = 0; sfb < maxSFB; sfb++, idx++) {\n                if (bandTypes[idx] !== ICStream.ZERO_BT) {\n                    var gain = gains[idx];\n                    for (var group = 0; group < len; group++) {\n                        for (var k = swbOffsets[sfb]; k < swbOffsets[swb + 1]; k++) {\n                            data[offset + group * 128 + k] += gain * iqData[offset + group * 128 + k];\n                        }\n                    }\n                }\n            }\n\n            offset += len * 128;\n        }\n    }\n};\n\nmodule.exports = CCEElement;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n    \nfunction FFT(length) {\n    this.length = length;\n\n    switch (length) {\n        case 64:\n            this.roots = generateFFTTableShort(64);\n            break;\n\n        case 512:\n            this.roots = generateFFTTableLong(512);\n            break;\n\n        case 60:\n            this.roots = generateFFTTableShort(60);\n            break;\n\n        case 480:\n            this.roots = generateFFTTableLong(480);\n            break;\n\n        default:\n            throw new Error(\"unexpected FFT length: \" + length);\n    }\n\n    // processing buffers\n    this.rev = new Array(length);\n    for (var i = 0; i < length; i++) {\n        this.rev[i] = new Float32Array(2);\n    }\n\n    this.a = new Float32Array(2);\n    this.b = new Float32Array(2);\n    this.c = new Float32Array(2);\n    this.d = new Float32Array(2);     \n    this.e1 = new Float32Array(2);\n    this.e2 = new Float32Array(2);\n}\n\nfunction generateFFTTableShort(len) {\n    var t = 2 * Math.PI / len,\n        cosT = Math.cos(t),\n        sinT = Math.sin(t),\n        f = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n        f[i] = new Float32Array(2);\n    }\n\n    f[0][0] = 1;\n    f[0][1] = 0;\n    var lastImag = 0;\n\n    for (var i = 1; i < len; i++) {\n        f[i][0] = f[i - 1][0] * cosT + lastImag * sinT;\n        lastImag = lastImag * cosT - f[i - 1][0] * sinT;\n        f[i][1] = -lastImag;\n    }\n\n    return f;\n}\n\nfunction generateFFTTableLong(len) {\n    var t = 2 * Math.PI / len,\n        cosT = Math.cos(t),\n        sinT = Math.sin(t),\n        f = new Array(len);\n\n    for (var i = 0; i < len; i++) {\n        f[i] = new Float32Array(3);\n    }\n\n    f[0][0] = 1;\n    f[0][1] = 0;\n    f[0][2] = 0;\n\n    for (var i = 1; i < len; i++) {\n        f[i][0] = f[i - 1][0] * cosT + f[i - 1][2] * sinT;\n        f[i][2] = f[i - 1][2] * cosT - f[i - 1][0] * sinT;\n        f[i][1] = -f[i][2];\n    }\n\n    return f;\n}\n\nFFT.prototype.process = function(input, forward) {\n    var length = this.length,\n        imOffset = (forward ? 2 : 1),\n        scale = (forward ? length : 1),\n        rev = this.rev,\n        roots = this.roots;\n\n    // bit-reversal\n    var ii = 0;\n    for (var i = 0; i < length; i++) {\n        rev[i][0] = input[ii][0];\n        rev[i][1] = input[ii][1];\n\n        var k = length >>> 1;\n        while (ii >= k && k > 0) {\n            ii -= k;\n            k >>= 1;\n        }\n\n        ii += k;\n    }\n\n    var a = this.a,\n        b = this.b,\n        c = this.c,\n        d = this.d,\n        e1 = this.e1,\n        e2 = this.e2;\n\n    for (var i = 0; i < length; i++) {\n        input[i][0] = rev[i][0];\n        input[i][1] = rev[i][1];\n    }\n\n    // bottom base-4 round\n    for (var i = 0; i < length; i += 4) {\n        a[0] = input[i][0] + input[i + 1][0];\n        a[1] = input[i][1] + input[i + 1][1];\n        b[0] = input[i + 2][0] + input[i + 3][0];\n        b[1] = input[i + 2][1] + input[i + 3][1];\n        c[0] = input[i][0] - input[i + 1][0];\n        c[1] = input[i][1] - input[i + 1][1];\n        d[0] = input[i + 2][0] - input[i + 3][0];\n        d[1] = input[i + 2][1] - input[i + 3][1];\n        input[i][0] = a[0] + b[0];\n        input[i][1] = a[1] + b[1];\n        input[i + 2][0] = a[0] - b[0];\n        input[i + 2][1] = a[1] - b[1];\n\n        e1[0] = c[0] - d[1];\n        e1[1] = c[1] + d[0];\n        e2[0] = c[0] + d[1];\n        e2[1] = c[1] - d[0];\n\n        if (forward) {\n            input[i + 1][0] = e2[0];\n            input[i + 1][1] = e2[1];\n            input[i + 3][0] = e1[0];\n            input[i + 3][1] = e1[1];\n        } else {\n            input[i + 1][0] = e1[0];\n            input[i + 1][1] = e1[1];\n            input[i + 3][0] = e2[0];\n            input[i + 3][1] = e2[1];\n        }\n    }\n\n    // iterations from bottom to top\n    for (var i = 4; i < length; i <<= 1) {\n        var shift = i << 1,\n            m = length / shift;\n\n        for(var j = 0; j < length; j += shift) {\n            for(var k = 0; k < i; k++) {\n                var km = k * m,\n                    rootRe = roots[km][0],\n                    rootIm = roots[km][imOffset],\n                    zRe = input[i + j + k][0] * rootRe - input[i + j + k][1] * rootIm,\n                    zIm = input[i + j + k][0] * rootIm + input[i + j + k][1] * rootRe;\n\n                input[i + j + k][0] = (input[j + k][0] - zRe) * scale;\n                input[i + j + k][1] = (input[j + k][1] - zIm) * scale;\n                input[j + k][0] = (input[j + k][0] + zRe) * scale;\n                input[j + k][1] = (input[j + k][1] + zIm) * scale;\n            }\n        }\n    }\n};\n\nmodule.exports = FFT;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nexports.MDCT_TABLE_2048 = [\n    [0.031249997702054, 0.000011984224612],\n    [0.031249813866531, 0.000107857810004],\n    [0.031249335895858, 0.000203730380198],\n    [0.031248563794535, 0.000299601032804],\n    [0.031247497569829, 0.000395468865451],\n    [0.031246137231775, 0.000491332975794],\n    [0.031244482793177, 0.000587192461525],\n    [0.031242534269608, 0.000683046420376],\n    [0.031240291679407, 0.000778893950134],\n    [0.031237755043684, 0.000874734148645],\n    [0.031234924386313, 0.000970566113826],\n    [0.031231799733938, 0.001066388943669],\n    [0.031228381115970, 0.001162201736253],\n    [0.031224668564585, 0.001258003589751],\n    [0.031220662114728, 0.001353793602441],\n    [0.031216361804108, 0.001449570872710],\n    [0.031211767673203, 0.001545334499065],\n    [0.031206879765253, 0.001641083580144],\n    [0.031201698126266, 0.001736817214719],\n    [0.031196222805014, 0.001832534501709],\n    [0.031190453853031, 0.001928234540186],\n    [0.031184391324617, 0.002023916429386],\n    [0.031178035276836, 0.002119579268713],\n    [0.031171385769513, 0.002215222157753],\n    [0.031164442865236, 0.002310844196278],\n    [0.031157206629353, 0.002406444484258],\n    [0.031149677129975, 0.002502022121865],\n    [0.031141854437973, 0.002597576209488],\n    [0.031133738626977, 0.002693105847734],\n    [0.031125329773375, 0.002788610137442],\n    [0.031116627956316, 0.002884088179689],\n    [0.031107633257703, 0.002979539075801],\n    [0.031098345762200, 0.003074961927355],\n    [0.031088765557222, 0.003170355836197],\n    [0.031078892732942, 0.003265719904442],\n    [0.031068727382288, 0.003361053234488],\n    [0.031058269600939, 0.003456354929021],\n    [0.031047519487329, 0.003551624091024],\n    [0.031036477142640, 0.003646859823790],\n    [0.031025142670809, 0.003742061230921],\n    [0.031013516178519, 0.003837227416347],\n    [0.031001597775203, 0.003932357484328],\n    [0.030989387573042, 0.004027450539462],\n    [0.030976885686963, 0.004122505686697],\n    [0.030964092234638, 0.004217522031340],\n    [0.030951007336485, 0.004312498679058],\n    [0.030937631115663, 0.004407434735897],\n    [0.030923963698074, 0.004502329308281],\n    [0.030910005212362, 0.004597181503027],\n    [0.030895755789908, 0.004691990427350],\n    [0.030881215564835, 0.004786755188872],\n    [0.030866384674000, 0.004881474895632],\n    [0.030851263256996, 0.004976148656090],\n    [0.030835851456154, 0.005070775579142],\n    [0.030820149416533, 0.005165354774124],\n    [0.030804157285929, 0.005259885350819],\n    [0.030787875214864, 0.005354366419469],\n    [0.030771303356593, 0.005448797090784],\n    [0.030754441867095, 0.005543176475946],\n    [0.030737290905077, 0.005637503686619],\n    [0.030719850631972, 0.005731777834961],\n    [0.030702121211932, 0.005825998033626],\n    [0.030684102811835, 0.005920163395780],\n    [0.030665795601276, 0.006014273035101],\n    [0.030647199752570, 0.006108326065793],\n    [0.030628315440748, 0.006202321602594],\n    [0.030609142843557, 0.006296258760782],\n    [0.030589682141455, 0.006390136656185],\n    [0.030569933517616, 0.006483954405188],\n    [0.030549897157919, 0.006577711124743],\n    [0.030529573250956, 0.006671405932375],\n    [0.030508961988022, 0.006765037946194],\n    [0.030488063563118, 0.006858606284900],\n    [0.030466878172949, 0.006952110067791],\n    [0.030445406016919, 0.007045548414774],\n    [0.030423647297133, 0.007138920446372],\n    [0.030401602218392, 0.007232225283733],\n    [0.030379270988192, 0.007325462048634],\n    [0.030356653816724, 0.007418629863497],\n    [0.030333750916869, 0.007511727851390],\n    [0.030310562504198, 0.007604755136040],\n    [0.030287088796968, 0.007697710841838],\n    [0.030263330016124, 0.007790594093851],\n    [0.030239286385293, 0.007883404017824],\n    [0.030214958130781, 0.007976139740197],\n    [0.030190345481576, 0.008068800388104],\n    [0.030165448669342, 0.008161385089390],\n    [0.030140267928416, 0.008253892972610],\n    [0.030114803495809, 0.008346323167047],\n    [0.030089055611203, 0.008438674802711],\n    [0.030063024516947, 0.008530947010354],\n    [0.030036710458054, 0.008623138921475],\n    [0.030010113682202, 0.008715249668328],\n    [0.029983234439732, 0.008807278383932],\n    [0.029956072983640, 0.008899224202078],\n    [0.029928629569580, 0.008991086257336],\n    [0.029900904455860, 0.009082863685067],\n    [0.029872897903441, 0.009174555621425],\n    [0.029844610175929, 0.009266161203371],\n    [0.029816041539579, 0.009357679568679],\n    [0.029787192263292, 0.009449109855944],\n    [0.029758062618606, 0.009540451204587],\n    [0.029728652879702, 0.009631702754871],\n    [0.029698963323395, 0.009722863647900],\n    [0.029668994229134, 0.009813933025633],\n    [0.029638745879000, 0.009904910030891],\n    [0.029608218557702, 0.009995793807363],\n    [0.029577412552575, 0.010086583499618],\n    [0.029546328153577, 0.010177278253107],\n    [0.029514965653285, 0.010267877214177],\n    [0.029483325346896, 0.010358379530076],\n    [0.029451407532220, 0.010448784348962],\n    [0.029419212509679, 0.010539090819911],\n    [0.029386740582307, 0.010629298092923],\n    [0.029353992055740, 0.010719405318933],\n    [0.029320967238220, 0.010809411649818],\n    [0.029287666440590, 0.010899316238403],\n    [0.029254089976290, 0.010989118238474],\n    [0.029220238161353, 0.011078816804778],\n    [0.029186111314406, 0.011168411093039],\n    [0.029151709756664, 0.011257900259961],\n    [0.029117033811927, 0.011347283463239],\n    [0.029082083806579, 0.011436559861563],\n    [0.029046860069582, 0.011525728614630],\n    [0.029011362932476, 0.011614788883150],\n    [0.028975592729373, 0.011703739828853],\n    [0.028939549796957, 0.011792580614500],\n    [0.028903234474475, 0.011881310403886],\n    [0.028866647103744, 0.011969928361855],\n    [0.028829788029135, 0.012058433654299],\n    [0.028792657597583, 0.012146825448172],\n    [0.028755256158571, 0.012235102911499],\n    [0.028717584064137, 0.012323265213377],\n    [0.028679641668864, 0.012411311523990],\n    [0.028641429329882, 0.012499241014612],\n    [0.028602947406859, 0.012587052857618],\n    [0.028564196262001, 0.012674746226488],\n    [0.028525176260050, 0.012762320295819],\n    [0.028485887768276, 0.012849774241331],\n    [0.028446331156478, 0.012937107239875],\n    [0.028406506796976, 0.013024318469437],\n    [0.028366415064615, 0.013111407109155],\n    [0.028326056336751, 0.013198372339315],\n    [0.028285430993258, 0.013285213341368],\n    [0.028244539416515, 0.013371929297933],\n    [0.028203381991411, 0.013458519392807],\n    [0.028161959105334, 0.013544982810971],\n    [0.028120271148172, 0.013631318738598],\n    [0.028078318512309, 0.013717526363062],\n    [0.028036101592619, 0.013803604872943],\n    [0.027993620786463, 0.013889553458039],\n    [0.027950876493687, 0.013975371309367],\n    [0.027907869116616, 0.014061057619178],\n    [0.027864599060052, 0.014146611580959],\n    [0.027821066731270, 0.014232032389445],\n    [0.027777272540012, 0.014317319240622],\n    [0.027733216898487, 0.014402471331737],\n    [0.027688900221361, 0.014487487861307],\n    [0.027644322925762, 0.014572368029123],\n    [0.027599485431266, 0.014657111036262],\n    [0.027554388159903, 0.014741716085090],\n    [0.027509031536144, 0.014826182379271],\n    [0.027463415986904, 0.014910509123778],\n    [0.027417541941533, 0.014994695524894],\n    [0.027371409831816, 0.015078740790225],\n    [0.027325020091965, 0.015162644128704],\n    [0.027278373158618, 0.015246404750603],\n    [0.027231469470833, 0.015330021867534],\n    [0.027184309470088, 0.015413494692460],\n    [0.027136893600268, 0.015496822439704],\n    [0.027089222307671, 0.015580004324954],\n    [0.027041296040997, 0.015663039565269],\n    [0.026993115251345, 0.015745927379091],\n    [0.026944680392213, 0.015828666986247],\n    [0.026895991919487, 0.015911257607961],\n    [0.026847050291442, 0.015993698466859],\n    [0.026797855968734, 0.016075988786976],\n    [0.026748409414401, 0.016158127793763],\n    [0.026698711093851, 0.016240114714099],\n    [0.026648761474864, 0.016321948776289],\n    [0.026598561027585, 0.016403629210082],\n    [0.026548110224519, 0.016485155246669],\n    [0.026497409540530, 0.016566526118696],\n    [0.026446459452830, 0.016647741060271],\n    [0.026395260440982, 0.016728799306966],\n    [0.026343812986890, 0.016809700095831],\n    [0.026292117574797, 0.016890442665397],\n    [0.026240174691280, 0.016971026255683],\n    [0.026187984825246, 0.017051450108208],\n    [0.026135548467924, 0.017131713465990],\n    [0.026082866112867, 0.017211815573560],\n    [0.026029938255941, 0.017291755676967],\n    [0.025976765395322, 0.017371533023784],\n    [0.025923348031494, 0.017451146863116],\n    [0.025869686667242, 0.017530596445607],\n    [0.025815781807646, 0.017609881023449],\n    [0.025761633960080, 0.017688999850383],\n    [0.025707243634204, 0.017767952181715],\n    [0.025652611341960, 0.017846737274313],\n    [0.025597737597568, 0.017925354386623],\n    [0.025542622917522, 0.018003802778671],\n    [0.025487267820581, 0.018082081712071],\n    [0.025431672827768, 0.018160190450031],\n    [0.025375838462365, 0.018238128257362],\n    [0.025319765249906, 0.018315894400484],\n    [0.025263453718173, 0.018393488147432],\n    [0.025206904397193, 0.018470908767865],\n    [0.025150117819228, 0.018548155533070],\n    [0.025093094518776, 0.018625227715971],\n    [0.025035835032562, 0.018702124591135],\n    [0.024978339899534, 0.018778845434780],\n    [0.024920609660858, 0.018855389524780],\n    [0.024862644859912, 0.018931756140672],\n    [0.024804446042284, 0.019007944563666],\n    [0.024746013755764, 0.019083954076646],\n    [0.024687348550337, 0.019159783964183],\n    [0.024628450978184, 0.019235433512536],\n    [0.024569321593670, 0.019310902009663],\n    [0.024509960953345, 0.019386188745225],\n    [0.024450369615932, 0.019461293010596],\n    [0.024390548142329, 0.019536214098866],\n    [0.024330497095598, 0.019610951304848],\n    [0.024270217040961, 0.019685503925087],\n    [0.024209708545799, 0.019759871257867],\n    [0.024148972179639, 0.019834052603212],\n    [0.024088008514157, 0.019908047262901],\n    [0.024026818123164, 0.019981854540467],\n    [0.023965401582609, 0.020055473741208],\n    [0.023903759470567, 0.020128904172192],\n    [0.023841892367236, 0.020202145142264],\n    [0.023779800854935, 0.020275195962052],\n    [0.023717485518092, 0.020348055943974],\n    [0.023654946943242, 0.020420724402244],\n    [0.023592185719023, 0.020493200652878],\n    [0.023529202436167, 0.020565484013703],\n    [0.023465997687496, 0.020637573804361],\n    [0.023402572067918, 0.020709469346314],\n    [0.023338926174419, 0.020781169962854],\n    [0.023275060606058, 0.020852674979108],\n    [0.023210975963963, 0.020923983722044],\n    [0.023146672851322, 0.020995095520475],\n    [0.023082151873380, 0.021066009705072],\n    [0.023017413637435, 0.021136725608363],\n    [0.022952458752826, 0.021207242564742],\n    [0.022887287830934, 0.021277559910478],\n    [0.022821901485173, 0.021347676983716],\n    [0.022756300330983, 0.021417593124488],\n    [0.022690484985827, 0.021487307674717],\n    [0.022624456069185, 0.021556819978223],\n    [0.022558214202547, 0.021626129380729],\n    [0.022491760009405, 0.021695235229869],\n    [0.022425094115252, 0.021764136875192],\n    [0.022358217147572, 0.021832833668171],\n    [0.022291129735838, 0.021901324962204],\n    [0.022223832511501, 0.021969610112625],\n    [0.022156326107988, 0.022037688476709],\n    [0.022088611160696, 0.022105559413676],\n    [0.022020688306983, 0.022173222284699],\n    [0.021952558186166, 0.022240676452909],\n    [0.021884221439510, 0.022307921283403],\n    [0.021815678710228, 0.022374956143245],\n    [0.021746930643469, 0.022441780401478],\n    [0.021677977886316, 0.022508393429127],\n    [0.021608821087780, 0.022574794599206],\n    [0.021539460898790, 0.022640983286719],\n    [0.021469897972190, 0.022706958868676],\n    [0.021400132962735, 0.022772720724087],\n    [0.021330166527077, 0.022838268233979],\n    [0.021259999323769, 0.022903600781391],\n    [0.021189632013250, 0.022968717751391],\n    [0.021119065257845, 0.023033618531071],\n    [0.021048299721754, 0.023098302509561],\n    [0.020977336071050, 0.023162769078031],\n    [0.020906174973670, 0.023227017629698],\n    [0.020834817099409, 0.023291047559828],\n    [0.020763263119915, 0.023354858265748],\n    [0.020691513708680, 0.023418449146848],\n    [0.020619569541038, 0.023481819604585],\n    [0.020547431294155, 0.023544969042494],\n    [0.020475099647023, 0.023607896866186],\n    [0.020402575280455, 0.023670602483363],\n    [0.020329858877078, 0.023733085303813],\n    [0.020256951121327, 0.023795344739427],\n    [0.020183852699437, 0.023857380204193],\n    [0.020110564299439, 0.023919191114211],\n    [0.020037086611150, 0.023980776887692],\n    [0.019963420326171, 0.024042136944968],\n    [0.019889566137877, 0.024103270708495],\n    [0.019815524741412, 0.024164177602859],\n    [0.019741296833681, 0.024224857054779],\n    [0.019666883113346, 0.024285308493120],\n    [0.019592284280817, 0.024345531348888],\n    [0.019517501038246, 0.024405525055242],\n    [0.019442534089523, 0.024465289047500],\n    [0.019367384140264, 0.024524822763141],\n    [0.019292051897809, 0.024584125641809],\n    [0.019216538071215, 0.024643197125323],\n    [0.019140843371246, 0.024702036657681],\n    [0.019064968510369, 0.024760643685063],\n    [0.018988914202748, 0.024819017655836],\n    [0.018912681164234, 0.024877158020562],\n    [0.018836270112363, 0.024935064232003],\n    [0.018759681766343, 0.024992735745123],\n    [0.018682916847054, 0.025050172017095],\n    [0.018605976077037, 0.025107372507308],\n    [0.018528860180486, 0.025164336677369],\n    [0.018451569883247, 0.025221063991110],\n    [0.018374105912805, 0.025277553914591],\n    [0.018296468998280, 0.025333805916107],\n    [0.018218659870421, 0.025389819466194],\n    [0.018140679261596, 0.025445594037630],\n    [0.018062527905790, 0.025501129105445],\n    [0.017984206538592, 0.025556424146920],\n    [0.017905715897192, 0.025611478641598],\n    [0.017827056720375, 0.025666292071285],\n    [0.017748229748511, 0.025720863920056],\n    [0.017669235723550, 0.025775193674260],\n    [0.017590075389012, 0.025829280822525],\n    [0.017510749489986, 0.025883124855762],\n    [0.017431258773116, 0.025936725267170],\n    [0.017351603986600, 0.025990081552242],\n    [0.017271785880180, 0.026043193208768],\n    [0.017191805205132, 0.026096059736841],\n    [0.017111662714267, 0.026148680638861],\n    [0.017031359161915, 0.026201055419541],\n    [0.016950895303924, 0.026253183585908],\n    [0.016870271897651, 0.026305064647313],\n    [0.016789489701954, 0.026356698115431],\n    [0.016708549477186, 0.026408083504269],\n    [0.016627451985187, 0.026459220330167],\n    [0.016546197989277, 0.026510108111806],\n    [0.016464788254250, 0.026560746370212],\n    [0.016383223546365, 0.026611134628757],\n    [0.016301504633341, 0.026661272413168],\n    [0.016219632284346, 0.026711159251530],\n    [0.016137607269996, 0.026760794674288],\n    [0.016055430362340, 0.026810178214254],\n    [0.015973102334858, 0.026859309406613],\n    [0.015890623962454, 0.026908187788922],\n    [0.015807996021446, 0.026956812901119],\n    [0.015725219289558, 0.027005184285527],\n    [0.015642294545918, 0.027053301486856],\n    [0.015559222571044, 0.027101164052208],\n    [0.015476004146842, 0.027148771531083],\n    [0.015392640056594, 0.027196123475380],\n    [0.015309131084956, 0.027243219439406],\n    [0.015225478017946, 0.027290058979875],\n    [0.015141681642938, 0.027336641655915],\n    [0.015057742748656, 0.027382967029073],\n    [0.014973662125164, 0.027429034663317],\n    [0.014889440563862, 0.027474844125040],\n    [0.014805078857474, 0.027520394983066],\n    [0.014720577800046, 0.027565686808654],\n    [0.014635938186934, 0.027610719175499],\n    [0.014551160814797, 0.027655491659740],\n    [0.014466246481592, 0.027700003839960],\n    [0.014381195986567, 0.027744255297195],\n    [0.014296010130247, 0.027788245614933],\n    [0.014210689714436, 0.027831974379120],\n    [0.014125235542201, 0.027875441178165],\n    [0.014039648417870, 0.027918645602941],\n    [0.013953929147020, 0.027961587246792],\n    [0.013868078536476, 0.028004265705534],\n    [0.013782097394294, 0.028046680577462],\n    [0.013695986529763, 0.028088831463351],\n    [0.013609746753390, 0.028130717966461],\n    [0.013523378876898, 0.028172339692540],\n    [0.013436883713214, 0.028213696249828],\n    [0.013350262076462, 0.028254787249062],\n    [0.013263514781960, 0.028295612303478],\n    [0.013176642646205, 0.028336171028814],\n    [0.013089646486871, 0.028376463043317],\n    [0.013002527122799, 0.028416487967743],\n    [0.012915285373990, 0.028456245425361],\n    [0.012827922061597, 0.028495735041960],\n    [0.012740438007915, 0.028534956445849],\n    [0.012652834036379, 0.028573909267859],\n    [0.012565110971550, 0.028612593141354],\n    [0.012477269639111, 0.028651007702224],\n    [0.012389310865858, 0.028689152588899],\n    [0.012301235479693, 0.028727027442343],\n    [0.012213044309615, 0.028764631906065],\n    [0.012124738185712, 0.028801965626115],\n    [0.012036317939156, 0.028839028251097],\n    [0.011947784402191, 0.028875819432161],\n    [0.011859138408130, 0.028912338823015],\n    [0.011770380791341, 0.028948586079925],\n    [0.011681512387245, 0.028984560861718],\n    [0.011592534032306, 0.029020262829785],\n    [0.011503446564022, 0.029055691648087],\n    [0.011414250820918, 0.029090846983152],\n    [0.011324947642537, 0.029125728504087],\n    [0.011235537869437, 0.029160335882573],\n    [0.011146022343175, 0.029194668792871],\n    [0.011056401906305, 0.029228726911828],\n    [0.010966677402371, 0.029262509918876],\n    [0.010876849675891, 0.029296017496036],\n    [0.010786919572361, 0.029329249327922],\n    [0.010696887938235, 0.029362205101743],\n    [0.010606755620926, 0.029394884507308],\n    [0.010516523468793, 0.029427287237024],\n    [0.010426192331137, 0.029459412985906],\n    [0.010335763058187, 0.029491261451573],\n    [0.010245236501099, 0.029522832334255],\n    [0.010154613511943, 0.029554125336796],\n    [0.010063894943698, 0.029585140164654],\n    [0.009973081650240, 0.029615876525905],\n    [0.009882174486340, 0.029646334131247],\n    [0.009791174307650, 0.029676512694001],\n    [0.009700081970699, 0.029706411930116],\n    [0.009608898332881, 0.029736031558168],\n    [0.009517624252453, 0.029765371299366],\n    [0.009426260588521, 0.029794430877553],\n    [0.009334808201034, 0.029823210019210],\n    [0.009243267950778, 0.029851708453456],\n    [0.009151640699363, 0.029879925912053],\n    [0.009059927309220, 0.029907862129408],\n    [0.008968128643591, 0.029935516842573],\n    [0.008876245566520, 0.029962889791254],\n    [0.008784278942845, 0.029989980717805],\n    [0.008692229638191, 0.030016789367235],\n    [0.008600098518961, 0.030043315487212],\n    [0.008507886452329, 0.030069558828062],\n    [0.008415594306230, 0.030095519142772],\n    [0.008323222949351, 0.030121196186994],\n    [0.008230773251129, 0.030146589719046],\n    [0.008138246081733, 0.030171699499915],\n    [0.008045642312067, 0.030196525293257],\n    [0.007952962813750, 0.030221066865402],\n    [0.007860208459119, 0.030245323985357],\n    [0.007767380121212, 0.030269296424803],\n    [0.007674478673766, 0.030292983958103],\n    [0.007581504991203, 0.030316386362302],\n    [0.007488459948628, 0.030339503417126],\n    [0.007395344421816, 0.030362334904989],\n    [0.007302159287206, 0.030384880610993],\n    [0.007208905421891, 0.030407140322928],\n    [0.007115583703613, 0.030429113831278],\n    [0.007022195010752, 0.030450800929220],\n    [0.006928740222316, 0.030472201412626],\n    [0.006835220217939, 0.030493315080068],\n    [0.006741635877866, 0.030514141732814],\n    [0.006647988082948, 0.030534681174838],\n    [0.006554277714635, 0.030554933212813],\n    [0.006460505654964, 0.030574897656119],\n    [0.006366672786553, 0.030594574316845],\n    [0.006272779992593, 0.030613963009786],\n    [0.006178828156839, 0.030633063552447],\n    [0.006084818163601, 0.030651875765048],\n    [0.005990750897737, 0.030670399470520],\n    [0.005896627244644, 0.030688634494512],\n    [0.005802448090250, 0.030706580665388],\n    [0.005708214321004, 0.030724237814232],\n    [0.005613926823871, 0.030741605774849],\n    [0.005519586486321, 0.030758684383764],\n    [0.005425194196321, 0.030775473480228],\n    [0.005330750842327, 0.030791972906214],\n    [0.005236257313276, 0.030808182506425],\n    [0.005141714498576, 0.030824102128288],\n    [0.005047123288102, 0.030839731621963],\n    [0.004952484572181, 0.030855070840339],\n    [0.004857799241589, 0.030870119639036],\n    [0.004763068187541, 0.030884877876411],\n    [0.004668292301681, 0.030899345413553],\n    [0.004573472476075, 0.030913522114288],\n    [0.004478609603205, 0.030927407845180],\n    [0.004383704575956, 0.030941002475530],\n    [0.004288758287610, 0.030954305877381],\n    [0.004193771631837, 0.030967317925516],\n    [0.004098745502689, 0.030980038497461],\n    [0.004003680794587, 0.030992467473486],\n    [0.003908578402316, 0.031004604736602],\n    [0.003813439221017, 0.031016450172571],\n    [0.003718264146176, 0.031028003669899],\n    [0.003623054073616, 0.031039265119839],\n    [0.003527809899492, 0.031050234416394],\n    [0.003432532520278, 0.031060911456318],\n    [0.003337222832760, 0.031071296139114],\n    [0.003241881734029, 0.031081388367037],\n    [0.003146510121474, 0.031091188045095],\n    [0.003051108892766, 0.031100695081051],\n    [0.002955678945860, 0.031109909385419],\n    [0.002860221178978, 0.031118830871473],\n    [0.002764736490604, 0.031127459455239],\n    [0.002669225779478, 0.031135795055501],\n    [0.002573689944583, 0.031143837593803],\n    [0.002478129885137, 0.031151586994444],\n    [0.002382546500589, 0.031159043184484],\n    [0.002286940690606, 0.031166206093743],\n    [0.002191313355067, 0.031173075654800],\n    [0.002095665394051, 0.031179651802998],\n    [0.001999997707835, 0.031185934476438],\n    [0.001904311196878, 0.031191923615985],\n    [0.001808606761820, 0.031197619165268],\n    [0.001712885303465, 0.031203021070678],\n    [0.001617147722782, 0.031208129281370],\n    [0.001521394920889, 0.031212943749264],\n    [0.001425627799047, 0.031217464429043],\n    [0.001329847258653, 0.031221691278159],\n    [0.001234054201231, 0.031225624256825],\n    [0.001138249528420, 0.031229263328024],\n    [0.001042434141971, 0.031232608457502],\n    [0.000946608943736, 0.031235659613775],\n    [0.000850774835656, 0.031238416768124],\n    [0.000754932719759, 0.031240879894597],\n    [0.000659083498149, 0.031243048970010],\n    [0.000563228072993, 0.031244923973948],\n    [0.000467367346520, 0.031246504888762],\n    [0.000371502221008, 0.031247791699571],\n    [0.000275633598775, 0.031248784394264],\n    [0.000179762382174, 0.031249482963498],\n    [0.000083889473581, 0.031249887400697]\n];\n\nexports.MDCT_TABLE_256 = [\n    [0.088387931675923, 0.000271171628935],\n    [0.088354655998507, 0.002440238387037],\n    [0.088268158780110, 0.004607835236780],\n    [0.088128492123423, 0.006772656498875],\n    [0.087935740158418, 0.008933398165942],\n    [0.087690018991670, 0.011088758687994],\n    [0.087391476636423, 0.013237439756448],\n    [0.087040292923427, 0.015378147086172],\n    [0.086636679392621, 0.017509591195118],\n    [0.086180879165703, 0.019630488181053],\n    [0.085673166799686, 0.021739560494940],\n    [0.085113848121515, 0.023835537710479],\n    [0.084503260043847, 0.025917157289369],\n    [0.083841770362110, 0.027983165341813],\n    [0.083129777532952, 0.030032317381813],\n    [0.082367710434230, 0.032063379076803],\n    [0.081556028106671, 0.034075126991164],\n    [0.080695219477356, 0.036066349323177],\n    [0.079785803065216, 0.038035846634965],\n    [0.078828326668693, 0.039982432574992],\n    [0.077823367035766, 0.041904934592675],\n    [0.076771529516540, 0.043802194644686],\n    [0.075673447698606, 0.045673069892513],\n    [0.074529783025390, 0.047516433390863],\n    [0.073341224397728, 0.049331174766491],\n    [0.072108487758894, 0.051116200887052],\n    [0.070832315663343, 0.052870436519557],\n    [0.069513476829429, 0.054592824978055],\n    [0.068152765676348, 0.056282328760143],\n    [0.066751001845620, 0.057937930171918],\n    [0.065309029707361, 0.059558631940996],\n    [0.063827717851668, 0.061143457817234],\n    [0.062307958565413, 0.062691453160784],\n    [0.060750667294763, 0.064201685517134],\n    [0.059156782093749, 0.065673245178784],\n    [0.057527263059216, 0.067105245733220],\n    [0.055863091752499, 0.068496824596852],\n    [0.054165270608165, 0.069847143534609],\n    [0.052434822330188, 0.071155389164853],\n    [0.050672789275903, 0.072420773449336],\n    [0.048880232828135, 0.073642534167879],\n    [0.047058232755862, 0.074819935377512],\n    [0.045207886563797, 0.075952267855771],\n    [0.043330308831298, 0.077038849527912],\n    [0.041426630540984, 0.078079025877766],\n    [0.039497998397473, 0.079072170341994],\n    [0.037545574136653, 0.080017684687506],\n    [0.035570533825892, 0.080914999371817],\n    [0.033574067155622, 0.081763573886112],\n    [0.031557376722714, 0.082562897080836],\n    [0.029521677306074, 0.083312487473584],\n    [0.027468195134911, 0.084011893539132],\n    [0.025398167150101, 0.084660693981419],\n    [0.023312840259098, 0.085258497987320],\n    [0.021213470584847, 0.085804945462053],\n    [0.019101322709138, 0.086299707246093],\n    [0.016977668910873, 0.086742485313442],\n    [0.014843788399692, 0.087133012951149],\n    [0.012700966545425, 0.087471054919968],\n    [0.010550494103830, 0.087756407596056],\n    [0.008393666439096, 0.087988899093631],\n    [0.006231782743558, 0.088168389368510],\n    [0.004066145255116, 0.088294770302461],\n    [0.001898058472816, 0.088367965768336]\n];                                      \n\nexports.MDCT_TABLE_1920 = [             \n    [0.032274858518097, 0.000013202404176],\n    [0.032274642494505, 0.000118821372483],\n    [0.032274080835421, 0.000224439068308],\n    [0.032273173546860, 0.000330054360572],\n    [0.032271920638538, 0.000435666118218],\n    [0.032270322123873, 0.000541273210231],\n    [0.032268378019984, 0.000646874505642],\n    [0.032266088347691, 0.000752468873546],\n    [0.032263453131514, 0.000858055183114],\n    [0.032260472399674, 0.000963632303600],\n    [0.032257146184092, 0.001069199104358],\n    [0.032253474520390, 0.001174754454853],\n    [0.032249457447888, 0.001280297224671],\n    [0.032245095009606, 0.001385826283535],\n    [0.032240387252262, 0.001491340501313],\n    [0.032235334226272, 0.001596838748031],\n    [0.032229935985750, 0.001702319893890],\n    [0.032224192588507, 0.001807782809271],\n    [0.032218104096050, 0.001913226364749],\n    [0.032211670573582, 0.002018649431111],\n    [0.032204892090000, 0.002124050879359],\n    [0.032197768717898, 0.002229429580728],\n    [0.032190300533560, 0.002334784406698],\n    [0.032182487616965, 0.002440114229003],\n    [0.032174330051782, 0.002545417919644],\n    [0.032165827925374, 0.002650694350905],\n    [0.032156981328790, 0.002755942395358],\n    [0.032147790356771, 0.002861160925883],\n    [0.032138255107744, 0.002966348815672],\n    [0.032128375683825, 0.003071504938250],\n    [0.032118152190814, 0.003176628167476],\n    [0.032107584738196, 0.003281717377568],\n    [0.032096673439141, 0.003386771443102],\n    [0.032085418410500, 0.003491789239036],\n    [0.032073819772804, 0.003596769640711],\n    [0.032061877650267, 0.003701711523874],\n    [0.032049592170778, 0.003806613764680],\n    [0.032036963465906, 0.003911475239711],\n    [0.032023991670893, 0.004016294825985],\n    [0.032010676924657, 0.004121071400967],\n    [0.031997019369789, 0.004225803842586],\n    [0.031983019152549, 0.004330491029241],\n    [0.031968676422869, 0.004435131839816],\n    [0.031953991334348, 0.004539725153692],\n    [0.031938964044252, 0.004644269850758],\n    [0.031923594713510, 0.004748764811426],\n    [0.031907883506716, 0.004853208916638],\n    [0.031891830592124, 0.004957601047881],\n    [0.031875436141648, 0.005061940087200],\n    [0.031858700330859, 0.005166224917208],\n    [0.031841623338985, 0.005270454421097],\n    [0.031824205348907, 0.005374627482653],\n    [0.031806446547156, 0.005478742986267],\n    [0.031788347123916, 0.005582799816945],\n    [0.031769907273017, 0.005686796860323],\n    [0.031751127191935, 0.005790733002674],\n    [0.031732007081789, 0.005894607130928],\n    [0.031712547147340, 0.005998418132675],\n    [0.031692747596989, 0.006102164896182],\n    [0.031672608642773, 0.006205846310406],\n    [0.031652130500364, 0.006309461265002],\n    [0.031631313389067, 0.006413008650337],\n    [0.031610157531816, 0.006516487357501],\n    [0.031588663155172, 0.006619896278321],\n    [0.031566830489325, 0.006723234305370],\n    [0.031544659768083, 0.006826500331981],\n    [0.031522151228878, 0.006929693252258],\n    [0.031499305112758, 0.007032811961088],\n    [0.031476121664387, 0.007135855354151],\n    [0.031452601132040, 0.007238822327937],\n    [0.031428743767604, 0.007341711779751],\n    [0.031404549826572, 0.007444522607730],\n    [0.031380019568042, 0.007547253710853],\n    [0.031355153254712, 0.007649903988952],\n    [0.031329951152882, 0.007752472342725],\n    [0.031304413532445, 0.007854957673748],\n    [0.031278540666888, 0.007957358884484],\n    [0.031252332833290, 0.008059674878300],\n    [0.031225790312316, 0.008161904559473],\n    [0.031198913388214, 0.008264046833205],\n    [0.031171702348814, 0.008366100605636],\n    [0.031144157485525, 0.008468064783849],\n    [0.031116279093331, 0.008569938275893],\n    [0.031088067470786, 0.008671719990782],\n    [0.031059522920014, 0.008773408838517],\n    [0.031030645746705, 0.008875003730092],\n    [0.031001436260110, 0.008976503577507],\n    [0.030971894773039, 0.009077907293780],\n    [0.030942021601857, 0.009179213792959],\n    [0.030911817066483, 0.009280421990133],\n    [0.030881281490382, 0.009381530801444],\n    [0.030850415200566, 0.009482539144097],\n    [0.030819218527589, 0.009583445936373],\n    [0.030787691805541, 0.009684250097643],\n    [0.030755835372048, 0.009784950548375],\n    [0.030723649568268, 0.009885546210147],\n    [0.030691134738883, 0.009986036005661],\n    [0.030658291232103, 0.010086418858753],\n    [0.030625119399655, 0.010186693694402],\n    [0.030591619596781, 0.010286859438745],\n    [0.030557792182239, 0.010386915019088],\n    [0.030523637518292, 0.010486859363916],\n    [0.030489155970710, 0.010586691402906],\n    [0.030454347908763, 0.010686410066936],\n    [0.030419213705216, 0.010786014288099],\n    [0.030383753736329, 0.010885502999714],\n    [0.030347968381849, 0.010984875136338],\n    [0.030311858025010, 0.011084129633775],\n    [0.030275423052523, 0.011183265429088],\n    [0.030238663854579, 0.011282281460612],\n    [0.030201580824838, 0.011381176667967],\n    [0.030164174360430, 0.011479949992062],\n    [0.030126444861948, 0.011578600375117],\n    [0.030088392733446, 0.011677126760663],\n    [0.030050018382430, 0.011775528093563],\n    [0.030011322219859, 0.011873803320018],\n    [0.029972304660138, 0.011971951387578],\n    [0.029932966121114, 0.012069971245157],\n    [0.029893307024070, 0.012167861843041],\n    [0.029853327793724, 0.012265622132901],\n    [0.029813028858222, 0.012363251067801],\n    [0.029772410649132, 0.012460747602215],\n    [0.029731473601443, 0.012558110692033],\n    [0.029690218153558, 0.012655339294575],\n    [0.029648644747289, 0.012752432368600],\n    [0.029606753827855, 0.012849388874320],\n    [0.029564545843872, 0.012946207773407],\n    [0.029522021247356, 0.013042888029011],\n    [0.029479180493710, 0.013139428605762],\n    [0.029436024041725, 0.013235828469789],\n    [0.029392552353570, 0.013332086588727],\n    [0.029348765894794, 0.013428201931728],\n    [0.029304665134313, 0.013524173469475],\n    [0.029260250544412, 0.013620000174189],\n    [0.029215522600735, 0.013715681019643],\n    [0.029170481782283, 0.013811214981173],\n    [0.029125128571406, 0.013906601035686],\n    [0.029079463453801, 0.014001838161674],\n    [0.029033486918505, 0.014096925339225],\n    [0.028987199457889, 0.014191861550031],\n    [0.028940601567655, 0.014286645777401],\n    [0.028893693746829, 0.014381277006273],\n    [0.028846476497755, 0.014475754223221],\n    [0.028798950326094, 0.014570076416472],\n    [0.028751115740811, 0.014664242575910],\n    [0.028702973254178, 0.014758251693091],\n    [0.028654523381760, 0.014852102761253],\n    [0.028605766642418, 0.014945794775326],\n    [0.028556703558297, 0.015039326731945],\n    [0.028507334654823, 0.015132697629457],\n    [0.028457660460698, 0.015225906467935],\n    [0.028407681507891, 0.015318952249187],\n    [0.028357398331639, 0.015411833976768],\n    [0.028306811470432, 0.015504550655988],\n    [0.028255921466016, 0.015597101293927],\n    [0.028204728863381, 0.015689484899442],\n    [0.028153234210760, 0.015781700483179],\n    [0.028101438059619, 0.015873747057582],\n    [0.028049340964652, 0.015965623636907],\n    [0.027996943483779, 0.016057329237229],\n    [0.027944246178133, 0.016148862876456],\n    [0.027891249612061, 0.016240223574335],\n    [0.027837954353113, 0.016331410352467],\n    [0.027784360972039, 0.016422422234315],\n    [0.027730470042780, 0.016513258245214],\n    [0.027676282142466, 0.016603917412384],\n    [0.027621797851405, 0.016694398764938],\n    [0.027567017753080, 0.016784701333894],\n    [0.027511942434143, 0.016874824152183],\n    [0.027456572484404, 0.016964766254662],\n    [0.027400908496833, 0.017054526678124],\n    [0.027344951067546, 0.017144104461307],\n    [0.027288700795801, 0.017233498644904],\n    [0.027232158283994, 0.017322708271577],\n    [0.027175324137651, 0.017411732385960],\n    [0.027118198965418, 0.017500570034678],\n    [0.027060783379060, 0.017589220266351],\n    [0.027003077993454, 0.017677682131607],\n    [0.026945083426576, 0.017765954683088],\n    [0.026886800299502, 0.017854036975468],\n    [0.026828229236397, 0.017941928065456],\n    [0.026769370864511, 0.018029627011808],\n    [0.026710225814170, 0.018117132875340],\n    [0.026650794718768, 0.018204444718934],\n    [0.026591078214767, 0.018291561607551],\n    [0.026531076941680, 0.018378482608238],\n    [0.026470791542075, 0.018465206790142],\n    [0.026410222661558, 0.018551733224515],\n    [0.026349370948775, 0.018638060984730],\n    [0.026288237055398, 0.018724189146286],\n    [0.026226821636121, 0.018810116786819],\n    [0.026165125348656, 0.018895842986112],\n    [0.026103148853718, 0.018981366826109],\n    [0.026040892815028, 0.019066687390916],\n    [0.025978357899296, 0.019151803766819],\n    [0.025915544776223, 0.019236715042290],\n    [0.025852454118485, 0.019321420307998],\n    [0.025789086601733, 0.019405918656817],\n    [0.025725442904582, 0.019490209183837],\n    [0.025661523708606, 0.019574290986376],\n    [0.025597329698327, 0.019658163163984],\n    [0.025532861561211, 0.019741824818458],\n    [0.025468119987662, 0.019825275053848],\n    [0.025403105671008, 0.019908512976470],\n    [0.025337819307501, 0.019991537694913],\n    [0.025272261596305, 0.020074348320047],\n    [0.025206433239491, 0.020156943965039],\n    [0.025140334942028, 0.020239323745355],\n    [0.025073967411776, 0.020321486778774],\n    [0.025007331359476, 0.020403432185395],\n    [0.024940427498748, 0.020485159087650],\n    [0.024873256546079, 0.020566666610309],\n    [0.024805819220816, 0.020647953880491],\n    [0.024738116245157, 0.020729020027676],\n    [0.024670148344147, 0.020809864183709],\n    [0.024601916245669, 0.020890485482816],\n    [0.024533420680433, 0.020970883061607],\n    [0.024464662381971, 0.021051056059087],\n    [0.024395642086630, 0.021131003616670],\n    [0.024326360533561, 0.021210724878181],\n    [0.024256818464715, 0.021290218989868],\n    [0.024187016624830, 0.021369485100415],\n    [0.024116955761430, 0.021448522360944],\n    [0.024046636624808, 0.021527329925030],\n    [0.023976059968027, 0.021605906948708],\n    [0.023905226546906, 0.021684252590480],\n    [0.023834137120014, 0.021762366011328],\n    [0.023762792448662, 0.021840246374720],\n    [0.023691193296893, 0.021917892846620],\n    [0.023619340431478, 0.021995304595495],\n    [0.023547234621902, 0.022072480792330],\n    [0.023474876640361, 0.022149420610628],\n    [0.023402267261751, 0.022226123226426],\n    [0.023329407263659, 0.022302587818300],\n    [0.023256297426359, 0.022378813567377],\n    [0.023182938532797, 0.022454799657339],\n    [0.023109331368588, 0.022530545274437],\n    [0.023035476722006, 0.022606049607496],\n    [0.022961375383975, 0.022681311847926],\n    [0.022887028148061, 0.022756331189727],\n    [0.022812435810462, 0.022831106829504],\n    [0.022737599170003, 0.022905637966469],\n    [0.022662519028125, 0.022979923802453],\n    [0.022587196188874, 0.023053963541915],\n    [0.022511631458899, 0.023127756391950],\n    [0.022435825647437, 0.023201301562294],\n    [0.022359779566306, 0.023274598265338],\n    [0.022283494029900, 0.023347645716133],\n    [0.022206969855176, 0.023420443132400],\n    [0.022130207861645, 0.023492989734537],\n    [0.022053208871367, 0.023565284745628],\n    [0.021975973708940, 0.023637327391451],\n    [0.021898503201489, 0.023709116900488],\n    [0.021820798178663, 0.023780652503931],\n    [0.021742859472618, 0.023851933435691],\n    [0.021664687918017, 0.023922958932406],\n    [0.021586284352013, 0.023993728233451],\n    [0.021507649614247, 0.024064240580942],\n    [0.021428784546832, 0.024134495219750],\n    [0.021349689994350, 0.024204491397504],\n    [0.021270366803840, 0.024274228364600],\n    [0.021190815824791, 0.024343705374213],\n    [0.021111037909128, 0.024412921682298],\n    [0.021031033911210, 0.024481876547605],\n    [0.020950804687815, 0.024550569231683],\n    [0.020870351098134, 0.024618998998889],\n    [0.020789674003759, 0.024687165116394],\n    [0.020708774268678, 0.024755066854194],\n    [0.020627652759262, 0.024822703485116],\n    [0.020546310344257, 0.024890074284826],\n    [0.020464747894775, 0.024957178531837],\n    [0.020382966284284, 0.025024015507516],\n    [0.020300966388600, 0.025090584496093],\n    [0.020218749085876, 0.025156884784668],\n    [0.020136315256592, 0.025222915663218],\n    [0.020053665783549, 0.025288676424605],\n    [0.019970801551857, 0.025354166364584],\n    [0.019887723448925, 0.025419384781811],\n    [0.019804432364452, 0.025484330977848],\n    [0.019720929190419, 0.025549004257175],\n    [0.019637214821078, 0.025613403927192],\n    [0.019553290152943, 0.025677529298230],\n    [0.019469156084779, 0.025741379683559],\n    [0.019384813517595, 0.025804954399392],\n    [0.019300263354632, 0.025868252764895],\n    [0.019215506501354, 0.025931274102193],\n    [0.019130543865439, 0.025994017736379],\n    [0.019045376356769, 0.026056482995518],\n    [0.018960004887419, 0.026118669210657],\n    [0.018874430371648, 0.026180575715833],\n    [0.018788653725892, 0.026242201848076],\n    [0.018702675868750, 0.026303546947421],\n    [0.018616497720974, 0.026364610356909],\n    [0.018530120205464, 0.026425391422602],\n    [0.018443544247254, 0.026485889493583],\n    [0.018356770773502, 0.026546103921965],\n    [0.018269800713483, 0.026606034062902],\n    [0.018182634998576, 0.026665679274589],\n    [0.018095274562256, 0.026725038918274],\n    [0.018007720340083, 0.026784112358263],\n    [0.017919973269692, 0.026842898961926],\n    [0.017832034290785, 0.026901398099707],\n    [0.017743904345116, 0.026959609145127],\n    [0.017655584376488, 0.027017531474792],\n    [0.017567075330734, 0.027075164468401],\n    [0.017478378155718, 0.027132507508750],\n    [0.017389493801313, 0.027189559981742],\n    [0.017300423219401, 0.027246321276391],\n    [0.017211167363854, 0.027302790784828],\n    [0.017121727190533, 0.027358967902310],\n    [0.017032103657269, 0.027414852027226],\n    [0.016942297723858, 0.027470442561102],\n    [0.016852310352050, 0.027525738908608],\n    [0.016762142505537, 0.027580740477564],\n    [0.016671795149944, 0.027635446678948],\n    [0.016581269252819, 0.027689856926900],\n    [0.016490565783622, 0.027743970638730],\n    [0.016399685713714, 0.027797787234924],\n    [0.016308630016347, 0.027851306139149],\n    [0.016217399666655, 0.027904526778260],\n    [0.016125995641641, 0.027957448582309],\n    [0.016034418920170, 0.028010070984544],\n    [0.015942670482954, 0.028062393421421],\n    [0.015850751312545, 0.028114415332610],\n    [0.015758662393324, 0.028166136160998],\n    [0.015666404711489, 0.028217555352697],\n    [0.015573979255046, 0.028268672357047],\n    [0.015481387013797, 0.028319486626627],\n    [0.015388628979331, 0.028369997617257],\n    [0.015295706145012, 0.028420204788004],\n    [0.015202619505968, 0.028470107601191],\n    [0.015109370059084, 0.028519705522399],\n    [0.015015958802984, 0.028568998020472],\n    [0.014922386738030, 0.028617984567529],\n    [0.014828654866302, 0.028666664638963],\n    [0.014734764191593, 0.028715037713449],\n    [0.014640715719398, 0.028763103272951],\n    [0.014546510456900, 0.028810860802724],\n    [0.014452149412962, 0.028858309791325],\n    [0.014357633598114, 0.028905449730613],\n    [0.014262964024545, 0.028952280115756],\n    [0.014168141706090, 0.028998800445240],\n    [0.014073167658220, 0.029045010220868],\n    [0.013978042898030, 0.029090908947771],\n    [0.013882768444231, 0.029136496134411],\n    [0.013787345317136, 0.029181771292585],\n    [0.013691774538648, 0.029226733937433],\n    [0.013596057132255, 0.029271383587441],\n    [0.013500194123014, 0.029315719764447],\n    [0.013404186537539, 0.029359741993647],\n    [0.013308035403995, 0.029403449803598],\n    [0.013211741752084, 0.029446842726223],\n    [0.013115306613032, 0.029489920296820],\n    [0.013018731019584, 0.029532682054063],\n    [0.012922016005985, 0.029575127540008],\n    [0.012825162607977, 0.029617256300097],\n    [0.012728171862781, 0.029659067883165],\n    [0.012631044809089, 0.029700561841444],\n    [0.012533782487056, 0.029741737730567],\n    [0.012436385938281, 0.029782595109573],\n    [0.012338856205805, 0.029823133540913],\n    [0.012241194334091, 0.029863352590452],\n    [0.012143401369021, 0.029903251827477],\n    [0.012045478357878, 0.029942830824699],\n    [0.011947426349339, 0.029982089158259],\n    [0.011849246393462, 0.030021026407731],\n    [0.011750939541676, 0.030059642156129],\n    [0.011652506846768, 0.030097935989909],\n    [0.011553949362874, 0.030135907498976],\n    [0.011455268145464, 0.030173556276684],\n    [0.011356464251335, 0.030210881919845],\n    [0.011257538738598, 0.030247884028732],\n    [0.011158492666665, 0.030284562207083],\n    [0.011059327096240, 0.030320916062102],\n    [0.010960043089307, 0.030356945204470],\n    [0.010860641709118, 0.030392649248343],\n    [0.010761124020182, 0.030428027811361],\n    [0.010661491088253, 0.030463080514646],\n    [0.010561743980319, 0.030497806982812],\n    [0.010461883764593, 0.030532206843968],\n    [0.010361911510496, 0.030566279729717],\n    [0.010261828288652, 0.030600025275167],\n    [0.010161635170872, 0.030633443118931],\n    [0.010061333230142, 0.030666532903129],\n    [0.009960923540617, 0.030699294273397],\n    [0.009860407177603, 0.030731726878888],\n    [0.009759785217550, 0.030763830372273],\n    [0.009659058738038, 0.030795604409750],\n    [0.009558228817767, 0.030827048651045],\n    [0.009457296536545, 0.030858162759415],\n    [0.009356262975275, 0.030888946401653],\n    [0.009255129215945, 0.030919399248091],\n    [0.009153896341616, 0.030949520972603],\n    [0.009052565436412, 0.030979311252611],\n    [0.008951137585505, 0.031008769769084],\n    [0.008849613875105, 0.031037896206544],\n    [0.008747995392451, 0.031066690253072],\n    [0.008646283225794, 0.031095151600306],\n    [0.008544478464390, 0.031123279943448],\n    [0.008442582198486, 0.031151074981266],\n    [0.008340595519310, 0.031178536416098],\n    [0.008238519519057, 0.031205663953853],\n    [0.008136355290878, 0.031232457304017],\n    [0.008034103928871, 0.031258916179656],\n    [0.007931766528065, 0.031285040297416],\n    [0.007829344184412, 0.031310829377528],\n    [0.007726837994772, 0.031336283143813],\n    [0.007624249056906, 0.031361401323680],\n    [0.007521578469457, 0.031386183648135],\n    [0.007418827331946, 0.031410629851778],\n    [0.007315996744755, 0.031434739672811],\n    [0.007213087809115, 0.031458512853036],\n    [0.007110101627101, 0.031481949137863],\n    [0.007007039301610, 0.031505048276306],\n    [0.006903901936357, 0.031527810020993],\n    [0.006800690635862, 0.031550234128164],\n    [0.006697406505433, 0.031572320357675],\n    [0.006594050651161, 0.031594068473000],\n    [0.006490624179905, 0.031615478241233],\n    [0.006387128199278, 0.031636549433095],\n    [0.006283563817639, 0.031657281822929],\n    [0.006179932144080, 0.031677675188707],\n    [0.006076234288412, 0.031697729312034],\n    [0.005972471361157, 0.031717443978146],\n    [0.005868644473532, 0.031736818975914],\n    [0.005764754737440, 0.031755854097848],\n    [0.005660803265456, 0.031774549140098],\n    [0.005556791170816, 0.031792903902453],\n    [0.005452719567407, 0.031810918188350],\n    [0.005348589569753, 0.031828591804869],\n    [0.005244402293001, 0.031845924562742],\n    [0.005140158852914, 0.031862916276347],\n    [0.005035860365855, 0.031879566763717],\n    [0.004931507948778, 0.031895875846539],\n    [0.004827102719212, 0.031911843350155],\n    [0.004722645795254, 0.031927469103567],\n    [0.004618138295554, 0.031942752939435],\n    [0.004513581339303, 0.031957694694082],\n    [0.004408976046222, 0.031972294207493],\n    [0.004304323536549, 0.031986551323320],\n    [0.004199624931030, 0.032000465888879],\n    [0.004094881350902, 0.032014037755158],\n    [0.003990093917884, 0.032027266776813],\n    [0.003885263754166, 0.032040152812170],\n    [0.003780391982394, 0.032052695723232],\n    [0.003675479725661, 0.032064895375674],\n    [0.003570528107494, 0.032076751638847],\n    [0.003465538251839, 0.032088264385780],\n    [0.003360511283053, 0.032099433493181],\n    [0.003255448325892, 0.032110258841438],\n    [0.003150350505494, 0.032120740314619],\n    [0.003045218947373, 0.032130877800478],\n    [0.002940054777404, 0.032140671190449],\n    [0.002834859121810, 0.032150120379653],\n    [0.002729633107153, 0.032159225266897],\n    [0.002624377860318, 0.032167985754674],\n    [0.002519094508504, 0.032176401749168],\n    [0.002413784179212, 0.032184473160250],\n    [0.002308448000231, 0.032192199901481],\n    [0.002203087099626, 0.032199581890114],\n    [0.002097702605728, 0.032206619047093],\n    [0.001992295647121, 0.032213311297057],\n    [0.001886867352628, 0.032219658568338],\n    [0.001781418851302, 0.032225660792960],\n    [0.001675951272410, 0.032231317906644],\n    [0.001570465745428, 0.032236629848809],\n    [0.001464963400018, 0.032241596562566],\n    [0.001359445366028, 0.032246217994727],\n    [0.001253912773470, 0.032250494095799],\n    [0.001148366752513, 0.032254424819990],\n    [0.001042808433471, 0.032258010125204],\n    [0.000937238946789, 0.032261249973045],\n    [0.000831659423030, 0.032264144328817],\n    [0.000726070992868, 0.032266693161525],\n    [0.000620474787068, 0.032268896443871],\n    [0.000514871936481, 0.032270754152261],\n    [0.000409263572030, 0.032272266266801],\n    [0.000303650824695, 0.032273432771295],\n    [0.000198034825504, 0.032274253653254],\n    [0.000092416705518, 0.032274728903884]\n];\n\nexports.MDCT_TABLE_240 = [              \n    [0.091286604111815, 0.000298735779793],\n    [0.091247502481454, 0.002688238127538],\n    [0.091145864370807, 0.005075898091152],\n    [0.090981759437558, 0.007460079287760],\n    [0.090755300151030, 0.009839147718664],\n    [0.090466641715108, 0.012211472889198],\n    [0.090115981961863, 0.014575428926191],\n    [0.089703561215976, 0.016929395692256],\n    [0.089229662130024, 0.019271759896156],\n    [0.088694609490769, 0.021600916198470],\n    [0.088098769996564, 0.023915268311810],\n    [0.087442552006035, 0.026213230094844],\n    [0.086726405258214, 0.028493226639351],\n    [0.085950820564309, 0.030753695349588],\n    [0.085116329471329, 0.032993087013213],\n    [0.084223503897785, 0.035209866863042],\n    [0.083272955741727, 0.037402515628894],\n    [0.082265336461381, 0.039569530578832],\n    [0.081201336628670, 0.041709426549053],\n    [0.080081685455930, 0.043820736961749],\n    [0.078907150296148, 0.045902014830227],\n    [0.077678536117054, 0.047951833750597],\n    [0.076396684949434, 0.049968788879362],\n    [0.075062475310050, 0.051951497896226],\n    [0.073676821599542, 0.053898601951466],\n    [0.072240673475749, 0.055808766597225],\n    [0.070755015202858, 0.057680682702068],\n    [0.069220864976840, 0.059513067348201],\n    [0.067639274227625, 0.061304664710718],\n    [0.066011326898512, 0.063054246918278],\n    [0.064338138703282, 0.064760614894630],\n    [0.062620856361546, 0.066422599180399],\n    [0.060860656812842, 0.068039060734572],\n    [0.059058746410016, 0.069608891715145],\n    [0.057216360092450, 0.071131016238378],\n    [0.055334760539699, 0.072604391116154],\n    [0.053415237306106, 0.074028006570930],\n    [0.051459105937014, 0.075400886927784],\n    [0.049467707067153, 0.076722091283096],\n    [0.047442405501835, 0.077990714149396],\n    [0.045384589281588, 0.079205886075941],\n    [0.043295668730857, 0.080366774244592],\n    [0.041177075491445, 0.081472583040586],\n    [0.039030261541332, 0.082522554597810],\n    [0.036856698199564, 0.083515969318206],\n    [0.034657875117883, 0.084452146364948],\n    [0.032435299259796, 0.085330444129049],\n    [0.030190493867775, 0.086150260669096],\n    [0.027924997419306, 0.086911034123781],\n    [0.025640362572491, 0.087612243096981],\n    [0.023338155101933, 0.088253407015092],\n    [0.021019952825636, 0.088834086456390],\n    [0.018687344523641, 0.089353883452193],\n    [0.016341928849164, 0.089812441759604],\n    [0.013985313232951, 0.090209447105664],\n    [0.011619112781631, 0.090544627402740],\n    [0.009244949170797, 0.090817752935000],\n    [0.006864449533597, 0.091028636515846],\n    [0.004479245345574, 0.091177133616206],\n    [0.002090971306534, 0.091263142463585]\n];                    ","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar tables = require('./mdct_tables');\nvar FFT = require('./fft');\n\n// Modified Discrete Cosine Transform\nfunction MDCT(length) {\n    this.N = length;\n    this.N2 = length >>> 1;\n    this.N4 = length >>> 2;\n    this.N8 = length >>> 3;\n    \n    switch (length) {\n        case 2048:\n            this.sincos = tables.MDCT_TABLE_2048;\n            break;\n            \n        case 256:\n            this.sincos = tables.MDCT_TABLE_256;\n            break;\n            \n        case 1920:\n            this.sincos = tables.MDCT_TABLE_1920;\n            break;\n            \n        case 240:\n            this.sincos = tables.MDCT_TABLE_240;\n            break;\n            \n        default:\n            throw new Error(\"unsupported MDCT length: \" + length);\n    }\n    \n    this.fft = new FFT(this.N4);\n    \n    this.buf = new Array(this.N4);\n    for (var i = 0; i < this.N4; i++) {\n        this.buf[i] = new Float32Array(2);\n    }\n    \n    this.tmp = new Float32Array(2);\n}\n\nMDCT.prototype.process = function(input, inOffset, output, outOffset) {\n    // local access\n    var N2 = this.N2,\n        N4 = this.N4,\n        N8 = this.N8,\n        buf = this.buf,\n        tmp = this.tmp,\n        sincos = this.sincos,\n        fft = this.fft;\n    \n    // pre-IFFT complex multiplication\n    for (var k = 0; k < N4; k++) {\n        buf[k][1] = (input[inOffset + 2 * k] * sincos[k][0]) + (input[inOffset + N2 - 1 - 2 * k] * sincos[k][1]);\n        buf[k][0] = (input[inOffset + N2 - 1 - 2 * k] * sincos[k][0]) - (input[inOffset + 2 * k] * sincos[k][1]);\n    }\n    \n    // complex IFFT, non-scaling\n    fft.process(buf, false);\n    \n    // post-IFFT complex multiplication\n    for (var k = 0; k < N4; k++) {\n        tmp[0] = buf[k][0];\n        tmp[1] = buf[k][1];\n        buf[k][1] = (tmp[1] * sincos[k][0]) + (tmp[0] * sincos[k][1]);\n        buf[k][0] = (tmp[0] * sincos[k][0]) - (tmp[1] * sincos[k][1]);\n    }\n    \n    // reordering\n    for (var k = 0; k < N8; k += 2) {\n        output[outOffset + 2 * k] = buf[N8 + k][1];\n        output[outOffset + 2 + 2 * k] = buf[N8 + 1 + k][1];\n\n        output[outOffset + 1 + 2 * k] = -buf[N8 - 1 - k][0];\n        output[outOffset + 3 + 2 * k] = -buf[N8 - 2 - k][0];\n\n        output[outOffset + N4 + 2 * k] = buf[k][0];\n        output[outOffset + N4 + 2 + 2 * k] = buf[1 + k][0];\n\n        output[outOffset + N4 + 1 + 2 * k] = -buf[N4 - 1 - k][1];\n        output[outOffset + N4 + 3 + 2 * k] = -buf[N4 - 2 - k][1];\n\n        output[outOffset + N2 + 2 * k] = buf[N8 + k][0];\n        output[outOffset + N2 + 2 + 2 * k] = buf[N8 + 1 + k][0];\n\n        output[outOffset + N2 + 1 + 2 * k] = -buf[N8 - 1 - k][1];\n        output[outOffset + N2 + 3 + 2 * k] = -buf[N8 - 2 - k][1];\n\n        output[outOffset + N2 + N4 + 2 * k] = -buf[k][1];\n        output[outOffset + N2 + N4 + 2 + 2 * k] = -buf[1 + k][1];\n\n        output[outOffset + N2 + N4 + 1 + 2 * k] = buf[N4 - 1 - k][0];\n        output[outOffset + N2 + N4 + 3 + 2 * k] = buf[N4 - 2 - k][0];\n    }\n};\n\nmodule.exports = MDCT;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar ICStream = require('./ics');\nvar MDCT = require('./mdct');\n  \nfunction FilterBank(smallFrames, channels) {\n    if (smallFrames) {\n        throw new Error(\"WHA?? No small frames allowed.\");\n    }\n\n    this.length = 1024;\n    this.shortLength = 128;\n\n    this.mid = (this.length - this.shortLength) / 2;\n    this.trans = this.shortLength / 2;\n\n    this.mdctShort = new MDCT(this.shortLength * 2);\n    this.mdctLong  = new MDCT(this.length * 2);\n\n    this.overlaps = new Array(channels);\n    for (var i = 0; i < channels; i++) {\n        this.overlaps[i] = new Float32Array(this.length);\n    }\n\n    this.buf = new Float32Array(2 * this.length);\n}\n  \nfunction generateSineWindow(len) {\n    var d = new Float32Array(len);\n    for (var i = 0; i < len; i++) {\n        d[i] = Math.sin((i + 0.5) * (Math.PI / (2.0 * len)))\n    }\n    return d;\n}\n\nfunction generateKBDWindow(alpha, len) {\n    var PIN = Math.PI / len,\n        out = new Float32Array(len),\n        sum = 0,\n        f = new Float32Array(len),\n        alpha2 = (alpha * PIN) * (alpha * PIN);\n\n    for (var n = 0; n < len; n++) {\n        var tmp = n * (len - n) * alpha2,\n            bessel = 1;\n\n        for (var j = 50; j > 0; j--) {\n            bessel = bessel * tmp / (j * j) + 1;\n        }\n\n        sum += bessel;\n        f[n] = sum;\n    }\n\n    sum++;\n    for (var n = 0; n < len; n++) {\n        out[n] = Math.sqrt(f[n] / sum);\n    }\n\n    return out;\n}\n\nconst SINE_1024 = generateSineWindow(1024),\n      SINE_128  = generateSineWindow(128),\n      KBD_1024  = generateKBDWindow(4, 1024),\n      KBD_128   = generateKBDWindow(6, 128),\n      LONG_WINDOWS = [SINE_1024, KBD_1024],\n      SHORT_WINDOWS = [SINE_128, KBD_128];\n\nFilterBank.prototype.process = function(info, input, output, channel) {\n    var overlap = this.overlaps[channel],\n        windowShape = info.windowShape[1],\n        windowShapePrev = info.windowShape[0],\n        longWindows = LONG_WINDOWS[windowShape],\n        shortWindows = SHORT_WINDOWS[windowShape],\n        longWindowsPrev = LONG_WINDOWS[windowShapePrev],\n        shortWindowsPrev = SHORT_WINDOWS[windowShapePrev],\n        length = this.length,\n        shortLen = this.shortLength,\n        mid = this.mid,\n        trans = this.trans,\n        buf = this.buf,\n        mdctLong = this.mdctLong,\n        mdctShort = this.mdctShort;\n\n    switch (info.windowSequence) {\n        case ICStream.ONLY_LONG_SEQUENCE:\n            mdctLong.process(input, 0, buf, 0);\n\n            // add second half output of previous frame to windowed output of current frame\n            for (var i = 0; i < length; i++) {\n                output[i] = overlap[i] + (buf[i] * longWindowsPrev[i]);\n            }\n\n            // window the second half and save as overlap for next frame\n            for (var i = 0; i < length; i++) {\n                overlap[i] = buf[length + i] * longWindows[length - 1 - i];\n            }\n\n            break;\n\n        case ICStream.LONG_START_SEQUENCE:\n            mdctLong.process(input, 0, buf, 0);\n\n            // add second half output of previous frame to windowed output of current frame\n            for (var i = 0; i < length; i++) {\n                output[i] = overlap[i] + (buf[i] * longWindowsPrev[i]);\n            }\n\n            // window the second half and save as overlap for next frame\n            for (var i = 0; i < mid; i++) {\n                overlap[i] = buf[length + i];\n            }\n\n            for (var i = 0; i < shortLen; i++) {\n                overlap[mid + i] = buf[length + mid + i] * shortWindows[shortLen - i - 1];\n            }\n\n            for (var i = 0; i < mid; i++) {\n                overlap[mid + shortLen + i] = 0;\n            }\n\n            break;\n\n        case ICStream.EIGHT_SHORT_SEQUENCE:\n            for (var i = 0; i < 8; i++) {\n                mdctShort.process(input, i * shortLen, buf, 2 * i * shortLen);\n            }\n\n            // add second half output of previous frame to windowed output of current frame\n            for (var i = 0; i < mid; i++) {\n                output[i] = overlap[i];\n            }\n\n            for (var i = 0; i < shortLen; i++) {\n                output[mid + i] = overlap[mid + i] + buf[i] * shortWindowsPrev[i];\n                output[mid + 1 * shortLen + i] = overlap[mid + shortLen * 1 + i] + (buf[shortLen * 1 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 2 + i]  * shortWindows[i]);\n                output[mid + 2 * shortLen + i] = overlap[mid + shortLen * 2 + i] + (buf[shortLen * 3 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 4 + i] * shortWindows[i]);\n                output[mid + 3 * shortLen + i] = overlap[mid + shortLen * 3 + i] + (buf[shortLen * 5 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 6 + i] * shortWindows[i]);\n\n                if (i < trans)\n                    output[mid + 4 * shortLen + i] = overlap[mid + shortLen * 4 + i] + (buf[shortLen * 7 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 8 + i] * shortWindows[i]);\n            }\n\n            // window the second half and save as overlap for next frame\n            for (var i = 0; i < shortLen; i++) {\n                if(i >= trans) \n                    overlap[mid + 4 * shortLen + i - length] = (buf[shortLen * 7 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 8 + i] * shortWindows[i]);\n\n                overlap[mid + 5 * shortLen + i - length] = (buf[shortLen * 9 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 10 + i] * shortWindows[i]);\n                overlap[mid + 6 * shortLen + i - length] = (buf[shortLen * 11 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 12 + i]*shortWindows[i]);\n                overlap[mid + 7 * shortLen + i - length] = (buf[shortLen * 13 + i] * shortWindows[shortLen - 1 - i]) + (buf[shortLen * 14 + i]*shortWindows[i]);\n                overlap[mid + 8 * shortLen + i - length] = (buf[shortLen * 15 + i] * shortWindows[shortLen - 1 - i]);\n            }\n\n            for (var i = 0; i < mid; i++) {\n                overlap[mid + shortLen + i] = 0;\n            }\n\n            break;\n\n        case ICStream.LONG_STOP_SEQUENCE:\n            mdctLong.process(input, 0, buf, 0);\n\n            // add second half output of previous frame to windowed output of current frame\n            // construct first half window using padding with 1's and 0's\n            for (var i = 0; i < mid; i++) {\n                output[i] = overlap[i];\n            }\n\n            for (var i = 0; i < shortLen; i++) {\n                output[mid + i] = overlap[mid + i] + (buf[mid + i] * shortWindowsPrev[i]);\n            }\n\n            for (var i = 0; i < mid; i++) {\n                output[mid + shortLen + i] = overlap[mid + shortLen + i] + buf[mid + shortLen + i];\n            }\n\n            // window the second half and save as overlap for next frame\n            for (var i = 0; i < length; i++) {\n                overlap[i] = buf[length + i] * longWindows[length - 1 - i];\n            }\n\n            break;\n    }\n};\n\nmodule.exports = FilterBank;\n","/*\n * AAC.js - Advanced Audio Coding decoder in JavaScript\n * Created by Devon Govett\n * Copyright (c) 2012, Official.fm Labs\n *\n * AAC.js is free software; you can redistribute it and/or modify it \n * under the terms of the GNU Lesser General Public License as \n * published by the Free Software Foundation; either version 3 of the \n * License, or (at your option) any later version.\n *\n * AAC.js is distributed in the hope that it will be useful, but WITHOUT \n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General \n * Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library.\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar AV          = require('av');\nvar ADTSDemuxer = require('./adts_demuxer');\nvar ICStream    = require('./ics');\nvar CPEElement  = require('./cpe');\nvar CCEElement  = require('./cce');\nvar FilterBank  = require('./filter_bank');\nvar tables      = require('./tables');\n\nvar AACDecoder = AV.Decoder.extend(function() {\n    AV.Decoder.register('mp4a', this);\n    AV.Decoder.register('aac ', this);\n    \n    // AAC profiles\n    const AOT_AAC_MAIN = 1, // no\n          AOT_AAC_LC = 2,   // yes\n          AOT_AAC_LTP = 4,  // no\n          AOT_ESCAPE = 31;\n          \n    // Channel configurations\n    const CHANNEL_CONFIG_NONE = 0,\n          CHANNEL_CONFIG_MONO = 1,\n          CHANNEL_CONFIG_STEREO = 2,\n          CHANNEL_CONFIG_STEREO_PLUS_CENTER = 3,\n          CHANNEL_CONFIG_STEREO_PLUS_CENTER_PLUS_REAR_MONO = 4,\n          CHANNEL_CONFIG_FIVE = 5,\n          CHANNEL_CONFIG_FIVE_PLUS_ONE = 6,\n          CHANNEL_CONFIG_SEVEN_PLUS_ONE = 8;\n          \n    this.prototype.init = function() {\n      this.format.floatingPoint = true;\n    }\n    \n    this.prototype.setCookie = function(buffer) {\n        var data = AV.Stream.fromBuffer(buffer),\n            stream = new AV.Bitstream(data);\n        \n        this.config = {};\n        \n        this.config.profile = stream.read(5);\n        if (this.config.profile === AOT_ESCAPE)\n            this.config.profile = 32 + stream.read(6);\n            \n        this.config.sampleIndex = stream.read(4);\n        if (this.config.sampleIndex === 0x0f) {\n            this.config.sampleRate = stream.read(24);\n            for (var i = 0; i < tables.SAMPLE_RATES.length; i++) {\n                if (tables.SAMPLE_RATES[i] === this.config.sampleRate) {\n                    this.config.sampleIndex = i;\n                    break;\n                }\n            }\n        } else {\n            this.config.sampleRate = tables.SAMPLE_RATES[this.config.sampleIndex];\n        }\n            \n        this.config.chanConfig = stream.read(4);\n        this.format.channelsPerFrame = this.config.chanConfig; // sometimes m4a files encode this wrong\n        \n        switch (this.config.profile) {\n            case AOT_AAC_MAIN:\n            case AOT_AAC_LC:\n            case AOT_AAC_LTP:\n                if (stream.read(1)) // frameLengthFlag\n                    throw new Error('frameLengthFlag not supported');\n                    \n                this.config.frameLength = 1024;\n                    \n                if (stream.read(1)) // dependsOnCoreCoder\n                    stream.advance(14); // coreCoderDelay\n                    \n                if (stream.read(1)) { // extensionFlag\n                    if (this.config.profile > 16) { // error resiliant profile\n                        this.config.sectionDataResilience = stream.read(1);\n                        this.config.scalefactorResilience = stream.read(1);\n                        this.config.spectralDataResilience = stream.read(1);\n                    }\n                    \n                    stream.advance(1);\n                }\n                \n                if (this.config.chanConfig === CHANNEL_CONFIG_NONE) {\n                    stream.advance(4) // element_instance_tag\n                    throw new Error('PCE unimplemented');\n                }\n                \n                break;\n                \n            default:\n                throw new Error('AAC profile ' + this.config.profile + ' not supported.');\n        }\n        \n        this.filter_bank = new FilterBank(false, this.config.chanConfig);        \n    };\n    \n    const SCE_ELEMENT = 0,\n          CPE_ELEMENT = 1,\n          CCE_ELEMENT = 2,\n          LFE_ELEMENT = 3,\n          DSE_ELEMENT = 4,\n          PCE_ELEMENT = 5,\n          FIL_ELEMENT = 6,\n          END_ELEMENT = 7;\n    \n    // The main decoding function.\n    this.prototype.readChunk = function() {\n        var stream = this.bitstream;\n        \n        // check if there is an ADTS header, and read it if so\n        if (stream.peek(12) === 0xfff)\n            ADTSDemuxer.readHeader(stream);\n        \n        this.cces = [];\n        var elements = [],\n            config = this.config,\n            frameLength = config.frameLength,\n            elementType = null;\n        \n        while ((elementType = stream.read(3)) !== END_ELEMENT) {\n            var id = stream.read(4);\n            \n            switch (elementType) {\n                // single channel and low frequency elements\n                case SCE_ELEMENT:\n                case LFE_ELEMENT:\n                    var ics = new ICStream(this.config);\n                    ics.id = id;\n                    elements.push(ics);\n                    ics.decode(stream, config, false);\n                    break;\n                    \n                // channel pair element\n                case CPE_ELEMENT:\n                    var cpe = new CPEElement(this.config);\n                    cpe.id = id;\n                    elements.push(cpe);\n                    cpe.decode(stream, config);\n                    break;\n                \n                // channel coupling element\n                case CCE_ELEMENT:\n                    var cce = new CCEElement(this.config);\n                    this.cces.push(cce);\n                    cce.decode(stream, config);\n                    break;\n                    \n                // data-stream element\n                case DSE_ELEMENT:\n                    var align = stream.read(1),\n                        count = stream.read(8);\n                        \n                    if (count === 255)\n                        count += stream.read(8);\n                        \n                    if (align)\n                        stream.align();\n                        \n                    // skip for now...\n                    stream.advance(count * 8);\n                    break;\n                    \n                // program configuration element\n                case PCE_ELEMENT:\n                    throw new Error(\"TODO: PCE_ELEMENT\")\n                    break;\n                    \n                // filler element\n                case FIL_ELEMENT:\n                    if (id === 15)\n                        id += stream.read(8) - 1;\n                        \n                    // skip for now...\n                    stream.advance(id * 8);\n                    break;\n                    \n                default:\n                    throw new Error('Unknown element')\n            }\n        }\n        \n        stream.align();\n        this.process(elements);\n        \n        // Interleave channels\n        var data = this.data,\n            channels = data.length,\n            output = new Float32Array(frameLength * channels),\n            j = 0;\n            \n        for (var k = 0; k < frameLength; k++) {\n            for (var i = 0; i < channels; i++) {\n                output[j++] = data[i][k] / 32768;\n            }\n        }\n        \n        return output;\n    };\n    \n    this.prototype.process = function(elements) {\n        var channels = this.config.chanConfig;\n        \n        // if (channels === 1 &&  psPresent)\n        // TODO: sbrPresent (2)\n        var mult = 1;\n        \n        var len = mult * this.config.frameLength;\n        var data = this.data = [];\n        \n        // Initialize channels\n        for (var i = 0; i < channels; i++) {\n            data[i] = new Float32Array(len);\n        }\n        \n        var channel = 0;\n        for (var i = 0; i < elements.length && channel < channels; i++) {\n            var e = elements[i];\n            \n            if (e instanceof ICStream) { // SCE or LFE element\n                channel += this.processSingle(e, channel);\n            } else if (e instanceof CPEElement) {\n                this.processPair(e, channel);\n                channel += 2;\n            } else if (e instanceof CCEElement) {\n                channel++;\n            } else {\n                throw new Error(\"Unknown element found.\")\n            }\n        }\n    };\n    \n    this.prototype.processSingle = function(element, channel) {\n        var profile = this.config.profile,\n            info = element.info,\n            data = element.data;\n            \n        if (profile === AOT_AAC_MAIN)\n            throw new Error(\"Main prediction unimplemented\");\n            \n        if (profile === AOT_AAC_LTP)\n            throw new Error(\"LTP prediction unimplemented\");\n            \n        this.applyChannelCoupling(element, CCEElement.BEFORE_TNS, data, null);\n        \n        if (element.tnsPresent)\n            element.tns.process(element, data, false);\n            \n        this.applyChannelCoupling(element, CCEElement.AFTER_TNS, data, null);\n        \n        // filterbank\n        this.filter_bank.process(info, data, this.data[channel], channel);\n        \n        if (profile === AOT_AAC_LTP)\n            throw new Error(\"LTP prediction unimplemented\");\n        \n        this.applyChannelCoupling(element, CCEElement.AFTER_IMDCT, this.data[channel], null);\n        \n        if (element.gainPresent)\n            throw new Error(\"Gain control not implemented\");\n            \n        if (this.sbrPresent)\n            throw new Error(\"SBR not implemented\");\n            \n        return 1;\n    };\n    \n    this.prototype.processPair = function(element, channel) {\n        var profile = this.config.profile,\n            left = element.left,\n            right = element.right,\n            l_info = left.info,\n            r_info = right.info,\n            l_data = left.data,\n            r_data = right.data;\n            \n        // Mid-side stereo\n        if (element.commonWindow && element.maskPresent)\n            this.processMS(element, l_data, r_data);\n            \n        if (profile === AOT_AAC_MAIN)\n            throw new Error(\"Main prediction unimplemented\");\n        \n        // Intensity stereo    \n        this.processIS(element, l_data, r_data);\n            \n        if (profile === AOT_AAC_LTP)\n            throw new Error(\"LTP prediction unimplemented\");\n            \n        this.applyChannelCoupling(element, CCEElement.BEFORE_TNS, l_data, r_data);\n        \n        if (left.tnsPresent)\n            left.tns.process(left, l_data, false);\n            \n        if (right.tnsPresent)\n            right.tns.process(right, r_data, false);\n        \n        this.applyChannelCoupling(element, CCEElement.AFTER_TNS, l_data, r_data);\n        \n        // filterbank\n        this.filter_bank.process(l_info, l_data, this.data[channel], channel);\n        this.filter_bank.process(r_info, r_data, this.data[channel + 1], channel + 1);\n        \n        if (profile === AOT_AAC_LTP)\n            throw new Error(\"LTP prediction unimplemented\");\n        \n        this.applyChannelCoupling(element, CCEElement.AFTER_IMDCT, this.data[channel], this.data[channel + 1]);\n        \n        if (left.gainPresent)\n            throw new Error(\"Gain control not implemented\");\n            \n        if (right.gainPresent)\n            throw new Error(\"Gain control not implemented\");\n            \n        if (this.sbrPresent)\n            throw new Error(\"SBR not implemented\");\n    };\n    \n    // Intensity stereo\n    this.prototype.processIS = function(element, left, right) {\n        var ics = element.right,\n            info = ics.info,\n            offsets = info.swbOffsets,\n            windowGroups = info.groupCount,\n            maxSFB = info.maxSFB,\n            bandTypes = ics.bandTypes,\n            sectEnd = ics.sectEnd,\n            scaleFactors = ics.scaleFactors;\n        \n        var idx = 0, groupOff = 0;\n        for (var g = 0; g < windowGroups; g++) {\n            for (var i = 0; i < maxSFB;) {\n                var end = sectEnd[idx];\n                \n                if (bandTypes[idx] === ICStream.INTENSITY_BT || bandTypes[idx] === ICStream.INTENSITY_BT2) {\n                    for (; i < end; i++, idx++) {\n                        var c = bandTypes[idx] === ICStream.INTENSITY_BT ? 1 : -1;\n                        if (element.maskPresent)\n                            c *= element.ms_used[idx] ? -1 : 1;\n                            \n                        var scale = c * scaleFactors[idx];\n                        for (var w = 0; w < info.groupLength[g]; w++) {\n                            var off = groupOff + w * 128 + offsets[i],\n                                len = offsets[i + 1] - offsets[i];\n                                \n                            for (var j = 0; j < len; j++) {\n                                right[off + j] = left[off + j] * scale;\n                            }\n                        }\n                    }\n                } else  {\n                    idx += end - i;\n                    i = end;\n                }\n            }\n            \n            groupOff += info.groupLength[g] * 128;\n        }\n    };\n    \n    // Mid-side stereo\n    this.prototype.processMS = function(element, left, right) {\n        var ics = element.left,\n            info = ics.info,\n            offsets = info.swbOffsets,\n            windowGroups = info.groupCount,\n            maxSFB = info.maxSFB,\n            sfbCBl = ics.bandTypes,\n            sfbCBr = element.right.bandTypes;\n            \n        var groupOff = 0, idx = 0;\n        for (var g = 0; g < windowGroups; g++) {\n            for (var i = 0; i < maxSFB; i++, idx++) {\n                if (element.ms_used[idx] && sfbCBl[idx] < ICStream.NOISE_BT && sfbCBr[idx] < ICStream.NOISE_BT) {\n                    for (var w = 0; w < info.groupLength[g]; w++) {\n                        var off = groupOff + w * 128 + offsets[i];\n                        for (var j = 0; j < offsets[i + 1] - offsets[i]; j++) {\n                            var t = left[off + j] - right[off + j];\n                            left[off + j] += right[off + j];\n                            right[off + j] = t;\n                        }\n                    }\n                }\n            }\n            groupOff += info.groupLength[g] * 128;\n        }\n    };\n    \n    this.prototype.applyChannelCoupling = function(element, couplingPoint, data1, data2) {\n        var cces = this.cces,\n            isChannelPair = element instanceof CPEElement,\n            applyCoupling = couplingPoint === CCEElement.AFTER_IMDCT ? 'applyIndependentCoupling' : 'applyDependentCoupling';\n        \n        for (var i = 0; i < cces.length; i++) {\n            var cce = cces[i],\n                index = 0;\n                \n            if (cce.couplingPoint === couplingPoint) {\n                for (var c = 0; c < cce.coupledCount; c++) {\n                    var chSelect = cce.chSelect[c];\n                    if (cce.channelPair[c] === isChannelPair && cce.idSelect[c] === element.id) {\n                        if (chSelect !== 1) {\n                            cce[applyCoupling](index, data1);\n                            if (chSelect) index++;\n                        }\n                        \n                        if (chSelect !== 2)\n                            cce[applyCoupling](index++, data2);\n                            \n                    } else {\n                        index += 1 + (chSelect === 3 ? 1 : 0);\n                    }\n                }\n            }\n        }\n    };\n    \n});\n\nmodule.exports = AACDecoder;\n","/*\n * FLAC.js - Free Lossless Audio Codec decoder in JavaScript\n * Original C version from FFmpeg (c) 2003 Alex Beregszaszi\n * JavaScript port by Devon Govett and Jens Nockert of Official.fm Labs\n * \n * Licensed under the same terms as the original.  The original\n * license follows.\n *\n * FLAC.js is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * FLAC.js is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n */\n\nvar AV = require('av');\n\nvar FLACDecoder = AV.Decoder.extend(function() {\n    AV.Decoder.register('flac', this);\n    \n    this.prototype.setCookie = function(cookie) {\n        this.cookie = cookie;\n        \n        // initialize arrays\n        this.decoded = [];\n        for (var i = 0; i < this.format.channelsPerFrame; i++) {\n            this.decoded[i] = new Int32Array(cookie.maxBlockSize);\n        }\n        \n        // for 24 bit lpc frames, this is used to simulate a 64 bit int\n        this.lpc_total = new Int32Array(2);\n    };\n    \n    const BLOCK_SIZES = new Int16Array([\n               0,      192, 576 << 0, 576 << 1, 576 << 2, 576 << 3,        0,        0,\n        256 << 0, 256 << 1, 256 << 2, 256 << 3, 256 << 4, 256 << 5, 256 << 6, 256 << 7\n    ]);\n    \n    const SAMPLE_RATES = new Int32Array([\n        0, 88200, 176400, 192000,\n        8000, 16000, 22050, 24000, 32000, 44100, 48000, 96000,\n        0, 0, 0, 0\n    ]);\n    \n    const SAMPLE_SIZES = new Int8Array([\n        0, 8, 12, 0, 16, 20, 24, 0\n    ]);\n    \n    const MAX_CHANNELS = 8,\n          CHMODE_INDEPENDENT = 0,\n          CHMODE_LEFT_SIDE = 8,\n          CHMODE_RIGHT_SIDE = 9,\n          CHMODE_MID_SIDE = 10;\n    \n    this.prototype.readChunk = function() {\n        var stream = this.bitstream;\n        if (!stream.available(32))\n            return;\n                            \n        // frame sync code\n        if ((stream.read(15) & 0x7FFF) !== 0x7FFC)\n            throw new Error('Invalid sync code');\n            \n        var isVarSize = stream.read(1),  // variable block size stream code\n            bsCode = stream.read(4),  // block size\n            srCode = stream.read(4),  // sample rate code\n            chMode = stream.read(4),  // channel mode\n            bpsCode = stream.read(3); // bits per sample\n            \n        stream.advance(1); // reserved bit\n        \n        // channels\n        this.chMode = chMode;\n        var channels;\n        \n        if (chMode < MAX_CHANNELS) {\n            channels = chMode + 1;\n            this.chMode = CHMODE_INDEPENDENT;\n        } else if (chMode <= CHMODE_MID_SIDE) {\n            channels = 2;\n        } else {\n            throw new Error('Invalid channel mode');\n        }\n        \n        if (channels !== this.format.channelsPerFrame)\n            throw new Error('Switching channel layout mid-stream not supported.');\n        \n        // bits per sample    \n        if (bpsCode === 3 || bpsCode === 7)\n            throw new Error('Invalid sample size code');\n            \n        this.bps = SAMPLE_SIZES[bpsCode];\n        if (this.bps !== this.format.bitsPerChannel)\n            throw new Error('Switching bits per sample mid-stream not supported.');\n        \n        // sample number or frame number\n        // see http://www.hydrogenaudio.org/forums/index.php?s=ea7085ffe6d57132c36e6105c0d434c9&showtopic=88390&pid=754269&st=0&#entry754269\n        var ones = 0;\n        while (stream.read(1) === 1)\n            ones++;\n        \n        var frame_or_sample_num = stream.read(7 - ones);\n        for (; ones > 1; ones--) {\n            stream.advance(2); // == 2\n            frame_or_sample_num = (frame_or_sample_num << 6) | stream.read(6);\n        }\n                \n        // block size\n        if (bsCode === 0)\n            throw new Error('Reserved blocksize code');\n        else if (bsCode === 6)\n            this.blockSize = stream.read(8) + 1;\n        else if (bsCode === 7)\n            this.blockSize = stream.read(16) + 1;\n        else\n            this.blockSize = BLOCK_SIZES[bsCode];\n            \n        // sample rate\n        var sampleRate;\n        if (srCode < 12)\n            sampleRate = SAMPLE_RATES[srCode];\n        else if (srCode === 12)\n            sampleRate = stream.read(8) * 1000;\n        else if (srCode === 13)\n            sampleRate = stream.read(16);\n        else if (srCode === 14)\n            sampleRate = stream.read(16) * 10;\n        else\n            throw new Error('Invalid sample rate code');\n            \n        stream.advance(8); // skip CRC check\n        \n        // subframes\n        for (var i = 0; i < channels; i++)\n            this.decodeSubframe(i);\n        \n        stream.align();\n        stream.advance(16); // skip CRC frame footer\n        \n        var is32 = this.bps > 16,\n            output = new ArrayBuffer(this.blockSize * channels * (is32 ? 4 : 2)),\n            buf = is32 ? new Int32Array(output) : new Int16Array(output),\n            blockSize = this.blockSize,\n            decoded = this.decoded,\n            j = 0;\n            \n        switch (this.chMode) {\n            case CHMODE_INDEPENDENT:\n                for (var k = 0; k < blockSize; k++) {\n                    for (var i = 0; i < channels; i++) {\n                        buf[j++] = decoded[i][k];\n                    }\n                }\n                break;\n                \n            case CHMODE_LEFT_SIDE:\n                for (var i = 0; i < blockSize; i++) {\n                    var left = decoded[0][i],\n                        right = decoded[1][i];\n\n                    buf[j++] = left;\n                    buf[j++] = (left - right);\n                }\n                break;\n                \n            case CHMODE_RIGHT_SIDE:\n                for (var i = 0; i < blockSize; i++) {\n                    var left = decoded[0][i],\n                        right = decoded[1][i];\n\n                    buf[j++] = (left + right);\n                    buf[j++] = right;\n                }\n                break;\n                \n            case CHMODE_MID_SIDE:\n                for (var i = 0; i < blockSize; i++) {\n                    var left = decoded[0][i],\n                        right = decoded[1][i];\n                    \n                    left -= right >> 1;\n                    buf[j++] = (left + right);\n                    buf[j++] = left;\n                }\n                break;\n        }\n        \n        return buf;\n    };\n    \n    this.prototype.decodeSubframe = function(channel) {\n        var wasted = 0,\n            stream = this.bitstream,\n            blockSize = this.blockSize,\n            decoded = this.decoded;\n        \n        this.curr_bps = this.bps;\n        if (channel === 0) {\n            if (this.chMode === CHMODE_RIGHT_SIDE)\n                this.curr_bps++;\n        } else {\n            if (this.chMode === CHMODE_LEFT_SIDE || this.chMode === CHMODE_MID_SIDE)\n                this.curr_bps++;\n        }\n        \n        if (stream.read(1))\n            throw new Error(\"Invalid subframe padding\");\n        \n        var type = stream.read(6);\n        \n        if (stream.read(1)) {\n            wasted = 1;\n            while (!stream.read(1))\n                wasted++;\n\n            this.curr_bps -= wasted;\n        }\n        \n        if (this.curr_bps > 32)\n            throw new Error(\"decorrelated bit depth > 32 (\" + this.curr_bps + \")\");\n        \n        if (type === 0) {\n            var tmp = stream.read(this.curr_bps, true);\n            for (var i = 0; i < blockSize; i++)\n                decoded[channel][i] = tmp;\n                \n        } else if (type === 1) {\n            var bps = this.curr_bps;\n            for (var i = 0; i < blockSize; i++)\n                decoded[channel][i] = stream.read(bps, true);\n                \n        } else if ((type >= 8) && (type <= 12)) {\n            this.decode_subframe_fixed(channel, type & ~0x8);\n                \n        } else if (type >= 32) {\n            this.decode_subframe_lpc(channel, (type & ~0x20) + 1);\n\n        } else {\n            throw new Error(\"Invalid coding type\");\n        }\n        \n        if (wasted) {\n            for (var i = 0; i < blockSize; i++)\n                decoded[channel][i] <<= wasted;\n        }\n    };\n    \n    this.prototype.decode_subframe_fixed = function(channel, predictor_order) {\n        var decoded = this.decoded[channel],\n            stream = this.bitstream,\n            bps = this.curr_bps;\n    \n        // warm up samples\n        for (var i = 0; i < predictor_order; i++)\n            decoded[i] = stream.read(bps, true);\n    \n        this.decode_residuals(channel, predictor_order);\n        \n        var a = 0, b = 0, c = 0, d = 0;\n        \n        if (predictor_order > 0) \n            a = decoded[predictor_order - 1];\n        \n        if (predictor_order > 1)\n            b = a - decoded[predictor_order - 2];\n        \n        if (predictor_order > 2) \n            c = b - decoded[predictor_order - 2] + decoded[predictor_order - 3];\n        \n        if (predictor_order > 3)\n            d = c - decoded[predictor_order - 2] + 2 * decoded[predictor_order - 3] - decoded[predictor_order - 4];\n            \n        switch (predictor_order) {\n            case 0:\n                break;\n                \n            case 1:\n            case 2:\n            case 3:\n            case 4:\n                var abcd = new Int32Array([a, b, c, d]),\n                    blockSize = this.blockSize;\n                    \n                for (var i = predictor_order; i < blockSize; i++) {\n                    abcd[predictor_order - 1] += decoded[i];\n                    \n                    for (var j = predictor_order - 2; j >= 0; j--) {\n                        abcd[j] += abcd[j + 1];\n                    }\n                    \n                    decoded[i] = abcd[0];\n                }\n                \n                break;\n                \n            default:\n                throw new Error(\"Invalid Predictor Order \" + predictor_order);\n        }\n    };\n    \n    this.prototype.decode_subframe_lpc = function(channel, predictor_order) {\n        var stream = this.bitstream,\n            decoded = this.decoded[channel],\n            bps = this.curr_bps,\n            blockSize = this.blockSize;\n            \n        // warm up samples\n        for (var i = 0; i < predictor_order; i++) {\n            decoded[i] = stream.read(bps, true);\n        }\n\n        var coeff_prec = stream.read(4) + 1;\n        if (coeff_prec === 16)\n            throw new Error(\"Invalid coefficient precision\");\n        \n        var qlevel = stream.read(5, true);\n        if (qlevel < 0)\n            throw new Error(\"Negative qlevel, maybe buggy stream\");\n        \n        var coeffs = new Int32Array(32);\n        for (var i = 0; i < predictor_order; i++) {\n            coeffs[i] = stream.read(coeff_prec, true);\n        }\n        \n        this.decode_residuals(channel, predictor_order);\n        \n        if (this.bps <= 16) {\n            for (var i = predictor_order; i < blockSize - 1; i += 2) {\n                var d = decoded[i - predictor_order],\n                    s0 = 0, s1 = 0, c = 0;\n            \n                for (var j = predictor_order - 1; j > 0; j--) {\n                    c = coeffs[j];\n                    s0 += c * d;\n                    d = decoded[i - j];\n                    s1 += c * d;\n                }\n            \n                c = coeffs[0];\n                s0 += c * d;\n                d = decoded[i] += (s0 >> qlevel);\n                s1 += c * d;\n                decoded[i + 1] += (s1 >> qlevel);\n            }\n            \n            if (i < blockSize) {\n                var sum = 0;\n                for (var j = 0; j < predictor_order; j++)\n                    sum += coeffs[j] * decoded[i - j - 1];\n            \n                decoded[i] += (sum >> qlevel);\n            }\n        } else {\n            // simulate 64 bit integer using an array of two 32 bit ints\n            var total = this.lpc_total;\n            for (var i = predictor_order; i < blockSize; i++) {\n                // reset total to 0\n                total[0] = 0;\n                total[1] = 0;\n\n                for (j = 0; j < predictor_order; j++) {\n                    // simulate `total += coeffs[j] * decoded[i - j - 1]`\n                    multiply_add(total, coeffs[j], decoded[i - j - 1]);                    \n                }\n\n                // simulate `decoded[i] += total >> qlevel`\n                // we know that qlevel < 32 since it is a 5 bit field (see above)\n                decoded[i] += (total[0] >>> qlevel) | (total[1] << (32 - qlevel));\n            }\n        }\n    };\n    \n    const TWO_PWR_32_DBL = Math.pow(2, 32);\n        \n    // performs `total += a * b` on a simulated 64 bit int\n    // total is an Int32Array(2)\n    // a and b are JS numbers (32 bit ints)\n    function multiply_add(total, a, b) {\n        // multiply a * b (we can use normal JS multiplication for this)\n        var r = a * b;\n        var n = r < 0;\n        if (n)\n            r = -r;\n            \n        var r_low = (r % TWO_PWR_32_DBL) | 0;\n        var r_high = (r / TWO_PWR_32_DBL) | 0;\n        if (n) {\n            r_low = ~r_low + 1;\n            r_high = ~r_high;\n        }\n        \n        // add result to total\n        var a48 = total[1] >>> 16;\n        var a32 = total[1] & 0xFFFF;\n        var a16 = total[0] >>> 16;\n        var a00 = total[0] & 0xFFFF;\n\n        var b48 = r_high >>> 16;\n        var b32 = r_high & 0xFFFF;\n        var b16 = r_low >>> 16;\n        var b00 = r_low & 0xFFFF;\n\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n        c00 += a00 + b00;\n        c16 += c00 >>> 16;\n        c00 &= 0xFFFF;\n        c16 += a16 + b16;\n        c32 += c16 >>> 16;\n        c16 &= 0xFFFF;\n        c32 += a32 + b32;\n        c48 += c32 >>> 16;\n        c32 &= 0xFFFF;\n        c48 += a48 + b48;\n        c48 &= 0xFFFF;\n        \n        // store result back in total\n        total[0] = (c16 << 16) | c00;\n        total[1] = (c48 << 16) | c32;\n    }\n     \n    const INT_MAX = 32767;\n    \n    this.prototype.decode_residuals = function(channel, predictor_order) {\n        var stream = this.bitstream,\n            method_type = stream.read(2);\n            \n        if (method_type > 1)\n            throw new Error('Illegal residual coding method ' + method_type);\n        \n        var rice_order = stream.read(4),\n            samples = (this.blockSize >>> rice_order);\n            \n        if (predictor_order > samples)\n            throw new Error('Invalid predictor order ' + predictor_order + ' > ' + samples);\n        \n        var decoded = this.decoded[channel],\n            sample = predictor_order, \n            i = predictor_order;\n        \n        for (var partition = 0; partition < (1 << rice_order); partition++) {\n            var tmp = stream.read(method_type === 0 ? 4 : 5);\n\n            if (tmp === (method_type === 0 ? 15 : 31)) {\n                tmp = stream.read(5);\n                for (; i < samples; i++)\n                    decoded[sample++] = stream.read(tmp, true);\n                    \n            } else {\n                for (; i < samples; i++)\n                    decoded[sample++] = this.golomb(tmp, INT_MAX, 0);\n            }\n            \n            i = 0;\n        }\n    };\n    \n    const MIN_CACHE_BITS = 25;\n    \n    this.prototype.golomb = function(k, limit, esc_len) {\n        var data = this.bitstream,\n            offset = data.bitPosition,\n            buf = data.peek(32 - offset) << offset,\n            v = 0;\n        \n        var log = 31 - clz(buf | 1); // log2(buf)\n\n        if (log - k >= 32 - MIN_CACHE_BITS && 32 - log < limit) {\n            buf >>>= log - k;\n            buf += (30 - log) << k;\n\n            data.advance(32 + k - log);\n            v = buf;\n            \n        } else {\n            for (var i = 0; data.read(1) === 0; i++)\n                buf = data.peek(32 - offset) << offset;\n\n            if (i < limit - 1) {\n                if (k)\n                    buf = data.read(k);\n                else\n                    buf = 0;\n\n                v = buf + (i << k);\n                \n            } else if (i === limit - 1) {\n                buf = data.read(esc_len);\n                v = buf + 1;\n                \n            } else {\n                v = -1;\n            }\n        }\n        \n        return (v >> 1) ^ -(v & 1);\n    };\n    \n    // Should be in the damned standard library...\n    function clz(input) {\n        var output = 0,\n            curbyte = 0;\n\n        while(true) { // emulate goto in JS using the break statement :D\n            curbyte = input >>> 24;\n            if (curbyte) break;\n            output += 8;\n\n            curbyte = input >>> 16;\n            if (curbyte & 0xff) break;\n            output += 8;\n\n            curbyte = input >>> 8;\n            if (curbyte & 0xff) break;\n            output += 8;\n\n            curbyte = input;\n            if (curbyte & 0xff) break;\n            output += 8;\n\n            return output;\n        }\n\n        if (!(curbyte & 0xf0))\n            output += 4;\n        else\n            curbyte >>>= 4;\n\n        if (curbyte & 0x8)\n            return output;\n            \n        if (curbyte & 0x4)\n            return output + 1;\n            \n        if (curbyte & 0x2)\n            return output + 2;\n            \n        if (curbyte & 0x1)\n            return output + 3;\n\n        // shouldn't get here\n        return output + 4;\n    }\n});\n\nmodule.exports = FLACDecoder;\n","// based on aurora-websocket.js https://github.com/fsbdev/aurora-websocket\n// MIT licensed\nimport AV from './av'\n\n(function() {\n  var __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  AV.XpraSource = (function(_super) {\n    __extends(XpraSource, _super);\n\n    function XpraSource() {\n      // constructor\n    }\n\n    XpraSource.prototype.start = function() {\n      return true;\n    };\n\n    XpraSource.prototype.pause = function() {\n      return true;\n    };\n\n    XpraSource.prototype.reset = function() {\n      return true;\n    };\n\n    XpraSource.prototype._on_data = function(data) {\n      var buf = new AV.Buffer(data);\n      return this.emit('data', buf);\n    };\n\n    return XpraSource;\n\n  })(AV.EventEmitter);\n\n  AV.Asset.fromXpraSource = function() {\n    var source;\n    source = new AV.XpraSource();\n    return new AV.Asset(source);\n  };\n\n  AV.Player.fromXpraSource = function() {\n    var asset;\n    asset = AV.Asset.fromXpraSource();\n    return new AV.Player(asset);\n  };\n\n}).call(this);\n"],"names":["Base","indexOf","fnTest","static","prop","Class","_super","fn","key","keys","ref","this","Object","prototype","call","__super__","test","ret","tmp","apply","arguments","AVBuffer","base","constructor","input","Uint8Array","data","ArrayBuffer","Array","isArray","isBuffer","buffer","byteOffset","length","BYTES_PER_ELEMENT","Error","next","prev","size","copy","slice","position","subarray","type","bb","Blob","error","BlobBuilder","append","getBlob","URL","createObjectURL","makeBlob","url","revokeObjectURL","toBlob","toBlobURL","makeBlobURL","global","MozBlobBuilder","WebKitBlobBuilder","webkitURL","mozURL","BufferList","first","last","numBuffers","availableBytes","availableBuffers","result","advance","rewind","reset","results","Stream","UnderflowError","bufferlist","underflow","name","stack","require$$0","require$$1","require$$2","list","list1","localOffset","offset","available","bytes","remainingBytes","seek","readUInt8","a","peekUInt8","read","littleEndian","i","j","k","nativeEndian","uint8","peek","ref1","readInt8","int8","peekInt8","readUInt16","uint16","peekUInt16","readInt16","int16","peekInt16","readUInt24","peekUInt24","readInt24","peekInt24","readUInt32","uint32","peekUInt32","readInt32","int32","peekInt32","readFloat32","float32","peekFloat32","readFloat64","float64","float64Fallback","peekFloat64","readFloat80","float80","peekFloat80","readBuffer","to","allocate","peekBuffer","readSingleBuffer","peekSingleBuffer","readString","encoding","decodeString","peekString","buf","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","exp","frac","high","low","out","sign","Math","pow","a0","b1","b2","b3","bom","c","end","nullEnd","pt","w1","w2","toLowerCase","String","fromCharCode","Bitstream","stream","bitPosition","bits","pos","abs","curOffset","align","signed","mBits","floor","readLSB","peekLSB","EventEmitter","bitstream","on","event","events","push","off","index","splice","once","cb","emit","args","len","global$1","self","window","lookup","revLookup","Arr","inited","init","code","charCodeAt","encodeChunk","start","num","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","write","value","rt","isNaN","log","LN2","toString","arr","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","array","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","fromString","obj","internalIsBuffer","checked","val","fromObject","assertSize","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","codePoints","poolSize","_augment","alloc","fill","allocUnsafeSlow","compare","x","y","concat","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","toHex","checkOffset","ext","checkInt","max","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","toByteArray","trim","replace","stringtrim","base64clean","src","dst","isFastBuffer","isSlowBuffer","defaultSetTimout","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","nextTick","Item","noop","addListener","removeListener","removeAllListeners","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","startTime","_blobConstructor","xhr","process","title","browser","env","argv","version","versions","binding","cwd","chdir","umask","hrtime","previousTimestamp","clocktime","seconds","nanoseconds","platform","release","config","uptime","dif","hasFetch","isFunction","fetch","ReadableStream","checkTypeSupport","XMLHttpRequest","open","location","host","responseType","haveArrayBuffer","haveSlice","arraybuffer","msstream","mozchunkedarraybuffer","overrideMimeType","vbArray","VBArray","inherits$1","create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor","formatRegExp","format","f","isString","objects","JSON","stringify","_","isNull","isObject","deprecate","msg","isUndefined","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","debugEnviron","debugs","opts","ctx","seen","stylize","stylizeNoColor","formatValue","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","styleType","style","styles","recurseTimes","primitive","simple","formatPrimitive","visibleKeys","hash","forEach","idx","arrayToHash","isError","getOwnPropertyNames","formatError","isRegExp","RegExp","isDate","ar","braces","toUTCString","hasOwnProperty","formatProperty","formatArray","map","pop","reduce","cur","reduceToSingleString","desc","getOwnPropertyDescriptor","get","split","line","re","objectToString","o","origin","add","EventHandlers","$getMaxListeners","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","prepend","existing","_events","newListener","_eventsCount","unshift","w","emitter","count","warn","_onceWrap","fired","g","listenerCount","evlistener","head","tail","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","usingDomains","domain","active","getPrototypeOf","setMaxListeners","getMaxListeners","er","doError","err","context","domainEmitter","domainThrown","prependListener","prependOnceListener","originalListener","spliceOne","unwrapListeners","eventNames","Reflect","ownKeys","v","entry","shift","clear","p","isBufferEncoding","StringDecoder","assertEncoding","surrogateSize","detectIncompleteChar","utf16DetectIncompleteChar","base64DetectIncompleteChar","passThroughWrite","charBuffer","charReceived","charLength","charStr","charCode","substring","cr","enc","Readable","ReadableState","debug","NODE_DEBUG","toUpperCase","debuglog","options","objectMode","Duplex","readableObjectMode","hwm","highWaterMark","defaultHwm","pipes","pipesCount","flowing","ended","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","decoder","_readableState","readable","_read","readableAddChunk","state","chunk","addToFront","chunkInvalid","emitReadable","onEofChunk","_e","skipAdd","maybeReadMore_","maybeReadMore","needMoreData","inherits","isPaused","setEncoding","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","nReadingNextTick","resume_","fromList","hasStrings","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nop","WriteReq","callback","WritableState","defineProperty","getBuffer","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","_writableState","writecb","writelen","onwriteStateUpdate","pendingcb","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","corkedRequestsFree","CorkedRequest","Writable","_write","writev","_writev","doWrite","onwriteDrain","finishMaybe","holder","finish","prefinish","need","_this","nOrig","doRead","pipe","dest","pipeOpts","doEnd","endFn","onend","cleanup","onunpipe","ondrain","pipeOnDrain","cleanedUp","onclose","onfinish","onerror","ondata","increasedAwaitDrain","pause","unpipe","resume","dests","_i","ev","wrap","paused","method","bind","_fromList","current","writeAfterEnd","valid","validChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","allowHalfOpen","onEndNT","TransformState","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","Transform","transform","_transform","flush","_flush","done","ws","PassThrough","EE","source","_isStdio","didOnEnd","destroy","rStates","IncomingMessage","response","mode","_mode","headers","rawHeaders","trailers","rawTrailers","_fetchResponse","statusCode","status","statusMessage","statusText","header","_it","Symbol","iterator","reader","body","getReader","then","_destroyed","_xhr","_pos","responseURL","getAllResponseHeaders","matches","_charset","mimeType","charsetMatch","ClientRequest","preferBinary","_opts","_body","_headers","auth","setHeader","useFetch","capability","decideMode","_onFinish","_onXHRProgress","readyState","responseBody","toArray","responseText","newData","MSStreamReader","onprogress","onload","readAsArrayBuffer","unsafeHeaders","lowerName","getHeader","removeHeader","headersObj","toArrayBuffer","arrayCopy","credentials","withCredentials","_connect","reason","setRequestHeader","_response","onreadystatechange","send","statusValid","abort","flushHeaders","setNoDelay","setSocketKeepAlive","regexNonASCII","regexSeparators","errors","overflow","stringFromCharCode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","toASCII","encoded","mapDomain","handledCPCount","basicLength","bias","q","t","currentValue","inputLength","handledCPCountPlusOne","baseMinusT","qMinusT","counter","extra","ucs2decode","encode","stringifyPrimitive","objectKeys","parse","qs","sep","eq","maxKeys","kstr","vstr","decodeURIComponent","Url","protocol","slashes","port","hostname","search","query","pathname","path","href","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","file","urlParse","parseQueryString","slashesDenoteHost","u","encodeURIComponent","ks","charAt","parseHost","exec","request","defaultProtocol","req","Agent","queryIndex","splitter","uSplit","slashRegex","rest","simplePath","qsParse","hec","proto","lowerProto","hostEnd","atSign","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","h","ae","esc","escape","qm","resolve","relative","resolveObject","rel","relPath","tkeys","tk","tkey","rkeys","rk","rkey","authInHost","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","hasTrailingSlash","up","isAbsolute","defaultMaxSockets","HTTPSource","METHODS","STATUS_CODES","http$1","errorHandler","loaded","instance","Constructor","boundMethodCheck","fs","http_1","BufferSource","filename","getSize","stat","blen","createReadStream","loop","_timer","setImmediate","clearImmediate","timer","Demuxer","formats","received","readChunk","seekPoints","addSeekPoint","timestamp","searchTimestamp","backward","mid","time","framesPerPacket","bytesPerPacket","demuxer","fromBuffer","probe","Decoder","require$$3","require$$4","codecs","receivedFinalBuffer","waiting","cookie","setCookie","error1","decode","packet","seekPoint","id","AudioDevice","sampleRate1","updateTime","sampleRate","channels","channels1","playing","currentTime","_lastTime","device","getDeviceTime","setInterval","refill","stop","clearInterval","devices","supported","Asset","FileSource","require$$5","findDecoder","_decode","buffered","duration","metadata","shouldDecode","decodePacket","decodeToBuffer","chunks","dataHandler","find","div","formatID","floatingPoint","bitsPerChannel","sample","ref2","Filter","VolumeFilter","asset","filter","vol","BalanceFilter","volume","pan","Queue","balance","readyMark","buffering","buffers","Player","startPlaying","filters","fromURL","fromFile","preload","startedPreloading","play","togglePlayback","frame","frameOffset","channelsPerFrame","bufferOffset","player","aurora_base","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","M4ADemuxer","TYPES","atoms","offsets","track","tracks","break","readHeaders","containers","after","flags","tag","readDescrLen","setupSeekPoints","len1","sampleIndex","stscIndex","sttsIndex","sttsSample","stsc","sampleSize","stts","chunkOffsets","sampleSizes","parseChapters","nextTimestamp","point","ref3","chapterTracks","chapters","timeScale","register","atom","container","BITS_PER_CHANNEL","ulaw","alaw","in24","in32","fl32","fl64","numEntries","bytesPerFrame","readEsds","entries","mdatOffset","chunkSize","numSamples","startedData","chunkIndex","tailOffset","tailSamples","readChapters","meta","field","genres","rating","diskTrack","bool","CAFDemuxer","sampleOffset","Boolean","headerCache","oversize","numPackets","numFrames","primingFrames","remainderFrames","sentDuration","sentFirstDataChunk","AIFFDemuxer","readStart","fileSize","fileType","sampleCount","readSSNDHeader","WAVEDemuxer","AUDemuxer","dataSize","readHeader","bps","LPCMDecoder","ref4","ref5","samples","Resampler","fromSampleRate","toSampleRate","inputBufferLength","initialize","XLAWDecoder","seg","table","QUANT_MASK","BIAS","SEG_MASK","SEG_SHIFT","SIGN_BIT","exports","resampler","bypassResampler","ratioWeight","compileLinearInterpolationFunction","lastWeight","compileMultiTapFunction","tailExists","outputBufferSize","ceil","outputBuffer","lastOutput","toCompile","channel","Function","inputBuffer","WebAudioDevice","sharedContext","AudioContext","deviceSampleRate","bufferSize","node","createProcessor","onaudioprocess","connect","destination","channelCount","numberOfChannels","getChannelData","disconnect","webkitAudioContext","MozillaAudioDevice","audio","Audio","mozSetup","writePosition","prebufferSize","createTimer","written","mozWriteAudio","mozCurrentSampleOffset","destroyTimer","interval","worker","Worker","onmessage","terminate","AV","MP3FrameHeader","layer","mode_extension","emphasis","bitrate","samplerate","crc_check","crc_target","private_bits","BITRATES","SAMPLERATES","FLAGS","NPRIVATE_III","INCOMPLETE","PROTECTION","COPYRIGHT","ORIGINAL","PADDING","I_STEREO","MS_STEREO","FREEFORMAT","LSF_EXT","MC_EXT","MPEG_2_5_EXT","PRIVATE","MODE","SINGLE_CHANNEL","DUAL_CHANNEL","JOINT_STEREO","STEREO","BUFFER_GUARD","BUFFER_MDLEN","clone","nchannels","nbsamples","framesize","padding","lsf","ptr","next_frame","syncing","getU8","this_frame","doSync","nextByte","freerate","free_bitrate","pad_slot","N","slots_per_frame","rate","peek_header","peek_stream","MP3Stream","main_data","md_len","makeArray","lengths","Type","utils","MP3Frame","sbsample","overlap","decoders","layers","Layer","MP3Synth","phase","pcm","costab8","costab16","costab24","dct32","_in","slot","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","t31","t32","t33","t34","t35","t36","t37","t38","t39","t40","t41","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","t76","t77","t78","t79","t80","t81","t82","t83","t84","t85","t86","t87","t88","t89","t90","t91","t92","t93","t94","t95","t96","t97","t98","t99","t100","t101","t102","t103","t104","t105","t106","t107","t108","t109","t110","t111","t112","t113","t114","t115","t116","t117","t118","t119","t120","t121","t122","t123","t124","t125","t126","t127","t128","t129","t130","t131","t132","t133","t134","t135","t136","t137","t138","t139","t140","t141","t142","t143","t144","t145","t146","t147","t148","t149","t150","t151","t152","t153","t154","t155","t156","t157","t158","t159","t160","t161","t162","t163","t164","t165","t166","t167","t168","t169","t170","t171","t172","t173","t174","t175","t176","D","full","nch","ns","Dptr","ch","pcm1Ptr","pcm2Ptr","pe","po","fe","fx","fo","fePtr","foPtr","_fx","_fe","sb","_fo","synth","tables","SF_TABLE","SFB_48000_LONG","SFB_44100_LONG","SFB_32000_LONG","SFB_48000_SHORT","SFB_44100_SHORT","SFB_32000_SHORT","SFB_48000_MIXED","SFB_44100_MIXED","SFB_32000_MIXED","SFB_24000_LONG","SFB_22050_LONG","SFB_16000_LONG","SFB_24000_SHORT","SFB_22050_SHORT","SFB_16000_SHORT","SFB_24000_MIXED","SFB_22050_MIXED","SFB_16000_MIXED","SFB_12000_LONG","SFB_11025_LONG","SFB_8000_LONG","SFB_12000_SHORT","SFB_11025_SHORT","SFB_8000_SHORT","SFB_12000_MIXED","SFB_11025_MIXED","SFB_8000_MIXED","SFBWIDTH_TABLE","PRETAB","ROOT_TABLE","CS","CA","COUNT1TABLE_SELECT","SCALEFAC_SCALE","PREFLAG","MIXED_BLOCK_FLAG","WINDOW_L","WINDOW_S","IS_TABLE","IS_LSF_TABLE","SFLEN_TABLE","slen1","slen2","NSFB_TABLE","Layer1","allocation","scalefactor","LINEAR_TABLE","bound","Layer2","scfsi","SBQUANT","sblimit","BITALLOC","nbal","OFFSETS","QC_TABLE","nlevels","group","C","bitrate_per_channel","gr","decodeSamples","scale","quantclass","requantized","PTR","offs","final","huffquad_V","hlen","hufftabA","hufftabB","V","hufftab0","hufftab1","hufftab2","hufftab3","hufftab5","hufftab6","hufftab7","hufftab8","hufftab9","hufftab10","hufftab11","hufftab12","hufftab13","hufftab15","hufftab16","hufftab24","MP3Hufftable","linbits","startbits","IMDCT","tmp_imdct36","tmp_dctIV","tmp_sdctII","huffman","huff_quad_table","huff_pair_table","imdct36","dctIV","dctIV_scale","cos","PI","X","sdctII","sdctII_scale","fastsdct","c0","c1","c2","c3","c4","c5","c6","a1","a2","a3","a4","a5","a6","a7","a12","a18","a19","a20","a21","a22","a23","a24","a25","m0","m1","m2","m3","m4","m5","m6","m7","S","MP3SideInfo","main_data_begin","MP3Granule","MP3Channel","part2_3_length","big_values","global_gain","scalefac_compress","block_type","table_select","subblock_gain","region0_count","region1_count","scalefac","Layer3","imdct","si","xr","_exponents","reqcache","modes","tmp2","next_md_begin","si_len","sideInfo","data_bitlen","priv_bitlen","nextHeader","frame_space","frame_used","old_md_len","memcpy","frame_free","decodeMainData","dstOffset","pSrc","srcOffset","subarr","ngr","granule","sfreq","sfreqi","sfbwidth","part2_length","scalefactors_lsf","scalefactors","huffmanDecode","stereo","reorder","aliasreduce","imdct_l","imdct_s","freqinver","overlap_z","gr0ch","sfbi","nsfb","gr1ch","slen","is_pos","exponents","sfbwidthptr","bits_left","cachesz","bitcache","xrptr","region","sfbound","rcount","expptr","reqhits","clumpsz","pair","x_final","requantize","y_final","quad","gain","scalefac_multiplier","premask","gain0","gain1","gain2","granules","right_ch","right_xr","lower","illegal_pos","lsf_scale","IS_Ltables","left","opposite","invsqrt2","lines","xrPointer","z","yptr","Xptr","sptr","wptr","sfbwidthPointer","sbw","sw","extend","mp3_stream","seeking","SWB_OFFSET_1024_96","SWB_OFFSET_128_96","SWB_OFFSET_1024_64","SWB_OFFSET_128_64","SWB_OFFSET_1024_48","SWB_OFFSET_128_48","SWB_OFFSET_1024_32","SWB_OFFSET_1024_24","SWB_OFFSET_128_24","SWB_OFFSET_1024_16","SWB_OFFSET_128_16","SWB_OFFSET_1024_8","SWB_OFFSET_128_8","SWB_OFFSET_1024","SWB_OFFSET_128","SWB_SHORT_WINDOW_COUNT","SWB_LONG_WINDOW_COUNT","SCALEFACTOR_TABLE","IQ_TABLE","SAMPLE_RATES","ADTSDemuxer","protectionAbsent","profile","samplingIndex","chanConfig","frameLength","sentHeader","adts_demuxer","HCB_SF","CODEBOOKS","UNSIGNED","Huffman","findOffset","cw","signValues","getEscape","decodeScaleFactor","decodeSpectralData","HCB","TNS","maxBands","TNS_MAX_BANDS_1024","nFilt","direction","order","coef","filt","TNS_MAX_ORDER","lpc","SHORT_BITS","LONG_BITS","TNS_TABLES","info","windowCount","windowSequence","coefRes","nFilt_w","length_w","order_w","direction_w","coef_w","coefCompress","coefLen","order_w_filt","coef_w_filt","ics","mmm","maxSFB","bottom","swbCount","top","autoc","r","swbOffsets","inc","ICStream","ICSInfo","bandTypes","MAX_SECTIONS","sectEnd","scaleFactors","randomState","tns","specBuf","ZERO_BT","FIRST_PAIR_BT","ESC_BT","NOISE_BT","INTENSITY_BT2","INTENSITY_BT","ONLY_LONG_SEQUENCE","LONG_START_SEQUENCE","EIGHT_SHORT_SEQUENCE","LONG_STOP_SEQUENCE","windowShape","groupLength","ltpData1Present","ltpData2Present","commonWindow","globalGain","decodeBandTypes","decodeScaleFactors","pulsePresent","decodePulseData","tnsPresent","gainPresent","groupCount","incr","bandType","noiseFlag","runEnd","pulseCount","pulseSWB","pulseOffset","pulseAmp","windowGroups","groupOff","groupLen","sfb","hcb","width","energy","sqrt","predictorPresent","decodePrediction","CPEElement","ms_used","right","mask","maskPresent","cpe","CCEElement","channelPair","idSelect","chSelect","BEFORE_TNS","AFTER_TNS","AFTER_IMDCT","CCE_SCALE","couplingPoint","coupledCount","gainCount","cge","gainCache","gain_i","applyIndependentCoupling","iqData","applyDependentCoupling","gains","swb","cce","FFT","roots","generateFFTTableShort","generateFFTTableLong","rev","e1","e2","cosT","sinT","sin","lastImag","mdct_tables","MDCT_TABLE_2048","MDCT_TABLE_256","MDCT_TABLE_1920","MDCT_TABLE_240","forward","imOffset","ii","km","rootRe","rootIm","zRe","zIm","MDCT","N2","N4","N8","sincos","fft","inOffset","outOffset","FilterBank","smallFrames","shortLength","trans","mdctShort","mdctLong","overlaps","generateSineWindow","generateKBDWindow","alpha","PIN","sum","alpha2","bessel","SINE_1024","SINE_128","KBD_1024","KBD_128","LONG_WINDOWS","SHORT_WINDOWS","windowShapePrev","longWindows","shortWindows","longWindowsPrev","shortWindowsPrev","shortLen","sectionDataResilience","scalefactorResilience","spectralDataResilience","filter_bank","cces","elements","elementType","processSingle","processPair","element","applyChannelCoupling","sbrPresent","l_info","r_info","l_data","r_data","processMS","processIS","sfbCBl","sfbCBr","data1","data2","isChannelPair","applyCoupling","decoded","maxBlockSize","lpc_total","BLOCK_SIZES","SAMPLE_SIZES","bsCode","srCode","chMode","bpsCode","ones","frame_or_sample_num","blockSize","decodeSubframe","is32","wasted","curr_bps","decode_subframe_fixed","decode_subframe_lpc","predictor_order","decode_residuals","abcd","coeff_prec","qlevel","coeffs","s0","s1","total","multiply_add","TWO_PWR_32_DBL","r_low","r_high","a48","a32","a16","c48","c32","c16","c00","method_type","rice_order","partition","golomb","esc_len","clz","curbyte","__hasProp","XpraSource","child","parent","__extends","_on_data","fromXpraSource"],"mappings":"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AE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRP,GAAI,GAAI,GACRA,GAAI,GAAI,GACRA,GAAI,GAAI,GACRO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRP,GAAI,GAAI,GACRO,GAAE,EAAG,EAAG,GACRP,GAAI,GAAI,GACRO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG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CRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRP,GAAI,GAAI,GACRO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRP,GAAI,GAAI,GACRO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG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,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRP,GAAI,IAAK,GACTO,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVP,GAAI,IAAK,GACTO,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,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,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAA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,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,GAAI,GAAI,GACVP,GAAI,IAAK,GACTO,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,IAGjBgB,GAAY,CACLvB,GAAI,GAAI,GACRA,GAAI,GAAI,GACRA,GAAI,GAAI,GACRO,GAAE,GAAI,GAAI,GACVP,GAAI,GAAI,GACRA,GAAI,GAAI,GACRA,GAAI,GAAI,GACRA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTP,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GAGTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GAGTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GAGTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTA,GAAI,IAAK,GACTO,GAAE,EAAG,EAAG,GACRP,GAAI,IAAK,GACTO,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRP,GAAI,IAAK,GACTO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRP,GAAI,IAAK,GACTO,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,GAAI,GAGVA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,GAAI,GACVA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,GAAI,GACTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,GAAI,GACTA,GAAE,GAAI,EAAG,GAGTA,GAAE,GAAI,EAAG,GACTA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG,EAAG,GACRA,GAAE,EAAG,EAAG,GAGRA,GAAE,EAAG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AAI,EAAG,GAClB,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAClB,CAAC,EAAG,IAAK,GAAI,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,GAAI,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,GAAI,GAAI,GACpB,CAAC,EAAG,KAAM,GAAI,EAAG,EAAG,GACpB,CAAC,EAAG,IAAK,GAAI,GAAI,EAAG,GACpB,CAAC,EAAG,IAAK,EAAG,GAAI,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,GAAI,GACnB,CAAC,EAAG,KAAM,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,GAAI,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,KAAM,EAAG,GAAI,EAAG,GACpB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,KAAM,EAAG,EAAG,GAAI,GACpB,CAAC,EAAG,IAAK,EAAG,EAAG,GAAI,GACnB,CAAC,EAAG,KAAM,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,GAAI,EAAG,GAAI,GACpB,CAAC,EAAG,IAAK,EAAG,GAAI,EAAG,GACnB,CAAC,EAAG,KAAM,EAAG,GAAI,EAAG,GACpB,CAAC,EAAG,IAAK,GAAI,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,EAAG,GAAI,GACnB,CAAC,EAAG,IAAK,EAAG,GAAI,EAAG,GACnB,CAAC,EAAG,IAAK,GAAI,EAAG,EAAG,GACnB,CAAC,EAAG,IAAK,GAAI,EAAG,GAAI,GACpB,CAAC,EAAG,IAAK,GAAI,GAAI,EAAG,GACpB,CAAC,EAAG,IAAK,EAAG,GAAI,EAAG,GACnB,CAAC,EAAG,IAAK,EAAG,GAAI,GAAI,GACpB,CAAC,EAAG,KAAM,EAAG,EAAG,EAAG,GACnB,CAAC,EAAG,KAAM,EAAG,EAAG,GAAI,GAC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AAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,GACrB,CAAC,GAAI,MAAO,EAAG,EAAG,EAAG,IAGZ,CACT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAChB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACjB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,EAAG,IAAK,EAAG,EAAG,EAAG,GAClB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI,KAAM,EAAG,EAAG,EAAG,GACpB,CAAC,GAAI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EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,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GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,EAAG,GACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,GAAI,GACf,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,KAAM,EAAG,IACd,CAAC,GAAI,MAAO,EAAG,IACf,CAAC,GAAI,MAAO,GAAI,GAChB,CAAC,GAAI,MAAO,EAAG,IACf,CAAC,GAAI,MAAO,EAAG,IACf,CAAC,GAAI,MAAO,EAAG,IACf,CAAC,GAAI,MAAO,EAAG,IACf,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,GAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,GAChB,CAAC,GAAI,MAAO,GAAI,GAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,IAChB,CAAC,GAAI,MAAO,GAAI,KAGN,CACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAA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G,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,GAAI,EAAG,GACX,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,IACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,EAAG,IAAK,EAAG,IACZ,CAAC,EAAG,IAAK,GAAI,GACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,IACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,GACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,GAAI,GACd,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAAI,IAAK,EAAG,IACb,CAAC,GAA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B,CAAC,cAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,cAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,eAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,mBAGxBD,GAAAE,eAAyB,CACrB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,mBAGxBF,GAAAG,gBAA0B,CACtB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,aAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,gBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,gBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,eACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,mBAGxBH,GAAAI,eAAyB,CACrB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,eACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,mBDjhCxBf,GAAI96D,UAAUob,QAAU,SAASza,EAAOm7D,GAS/B,IARD16D,IAAAA,EAAStB,KAAKsB,OACd26D,EAAYD,EAAU,EAAI,EAC1B/V,EAAS+V,EAAU16D,EAAS,EAC5B85D,EAAMp7D,KAAKo7D,IACXH,EAAQj7D,KAAKi7D,MAGbiB,EAAK,EACA72D,EAAI,EAAGA,EAAI/D,EAAQ+D,IAAK,CAC7B+1D,EAAI/1D,GAAG,GAAKxE,EAAMq7D,GAAI,GACtBd,EAAI/1D,GAAG,GAAKxE,EAAMq7D,GAAI,GAGtB,IADA,IAAI32D,EAAIjE,IAAW,EACZ46D,GAAM32D,GAAKA,EAAI,GAClB22D,GAAM32D,EACNA,IAAM,EAGV22D,GAAM32D,EAGNN,IAAAA,EAAIjF,KAAKiF,EACT+K,EAAIhQ,KAAKgQ,EACTxG,EAAIxJ,KAAKwJ,EACTiE,EAAIzN,KAAKyN,EACT4tD,EAAKr7D,KAAKq7D,GACVC,EAAKt7D,KAAKs7D,GAET,IAAIj2D,EAAI,EAAGA,EAAI/D,EAAQ+D,IACxBxE,EAAMwE,GAAG,GAAK+1D,EAAI/1D,GAAG,GACrBxE,EAAMwE,GAAG,GAAK+1D,EAAI/1D,GAAG,GAIzB,IAASA,EAAI,EAAGA,EAAI/D,EAAQ+D,GAAK,EAC7BJ,EAAE,GAAKpE,EAAMwE,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GAClCJ,EAAE,GAAKpE,EAAMwE,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GAClC2K,EAAE,GAAKnP,EAAMwE,EAAI,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GACtC2K,EAAE,GAAKnP,EAAMwE,EAAI,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GACtCmE,EAAE,GAAK3I,EAAMwE,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GAClCmE,EAAE,GAAK3I,EAAMwE,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GAClCoI,EAAE,GAAK5M,EAAMwE,EAAI,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GACtCoI,EAAE,GAAK5M,EAAMwE,EAAI,GAAG,GAAKxE,EAAMwE,EAAI,GAAG,GACtCxE,EAAMwE,GAAG,GAAKJ,EAAE,GAAK+K,EAAE,GACvBnP,EAAMwE,GAAG,GAAKJ,EAAE,GAAK+K,EAAE,GACvBnP,EAAMwE,EAAI,GAAG,GAAKJ,EAAE,GAAK+K,EAAE,GAC3BnP,EAAMwE,EAAI,GAAG,GAAKJ,EAAE,GAAK+K,EAAE,GAE3BqrD,EAAG,GAAK7xD,EAAE,GAAKiE,EAAE,GACjB4tD,EAAG,GAAK7xD,EAAE,GAAKiE,EAAE,GACjB6tD,EAAG,GAAK9xD,EAAE,GAAKiE,EAAE,GACjB6tD,EAAG,GAAK9xD,EAAE,GAAKiE,EAAE,GAEbuuD,GACAn7D,EAAMwE,EAAI,GAAG,GAAKi2D,EAAG,GACrBz6D,EAAMwE,EAAI,GAAG,GAAKi2D,EAAG,GACrBz6D,EAAMwE,EAAI,GAAG,GAAKg2D,EAAG,GACrBx6D,EAAMwE,EAAI,GAAG,GAAKg2D,EAAG,KAErBx6D,EAAMwE,EAAI,GAAG,GAAKg2D,EAAG,GACrBx6D,EAAMwE,EAAI,GAAG,GAAKg2D,EAAG,GACrBx6D,EAAMwE,EAAI,GAAG,GAAKi2D,EAAG,GACrBz6D,EAAMwE,EAAI,GAAG,GAAKi2D,EAAG,IAK7B,IAASj2D,EAAI,EAAGA,EAAI/D,EAAQ+D,IAAM,EAI9B,IAHA,IAAIsiB,EAAQtiB,GAAK,EACb+H,EAAI9L,EAASqmB,EAETriB,EAAI,EAAGA,EAAIhE,EAAQgE,GAAKqiB,EACxB,IAAIpiB,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CACvB,IAAI42D,EAAK52D,EAAI6H,EACTgvD,EAASnB,EAAMkB,GAAI,GACnBE,EAASpB,EAAMkB,GAAIF,GACnBK,EAAMz7D,EAAMwE,EAAIC,EAAIC,GAAG,GAAK62D,EAASv7D,EAAMwE,EAAIC,EAAIC,GAAG,GAAK82D,EAC3DE,EAAM17D,EAAMwE,EAAIC,EAAIC,GAAG,GAAK82D,EAASx7D,EAAMwE,EAAIC,EAAIC,GAAG,GAAK62D,EAE/Dv7D,EAAMwE,EAAIC,EAAIC,GAAG,IAAM1E,EAAMyE,EAAIC,GAAG,GAAK+2D,GAAOrW,EAChDplD,EAAMwE,EAAIC,EAAIC,GAAG,IAAM1E,EAAMyE,EAAIC,GAAG,GAAKg3D,GAAOtW,EAChDplD,EAAMyE,EAAIC,GAAG,IAAM1E,EAAMyE,EAAIC,GAAG,GAAK+2D,GAAOrW,EAC5CplD,EAAMyE,EAAIC,GAAG,IAAM1E,EAAMyE,EAAIC,GAAG,GAAKg3D,GAAOtW,IAM5D,IE7KIjE,GAAS39C,GACT22D,GF4KaA,GEzKjB,SAASwB,GAAKl7D,GAMV,OALK0yC,KAAAA,EAAI1yC,EACTtB,KAAKy8D,GAAKn7D,IAAW,EACrBtB,KAAK08D,GAAKp7D,IAAW,EACrBtB,KAAK28D,GAAKr7D,IAAW,EAEbA,GACJ,KAAK,KACDtB,KAAK48D,OAAS5a,GAAO4Z,gBACrB,MAEJ,KAAK,IACD57D,KAAK48D,OAAS5a,GAAO6Z,eACrB,MAEJ,KAAK,KACD77D,KAAK48D,OAAS5a,GAAO8Z,gBACrB,MAEJ,KAAK,IACD97D,KAAK48D,OAAS5a,GAAO+Z,eACrB,MAEJ,QACI,MAAM,IAAIv6D,MAAM,4BAA8BF,GAGtDtB,KAAK68D,IAAM,IAAI7B,GAAIh7D,KAAK08D,IAExB18D,KAAKmI,IAAM,IAAIlH,MAAMjB,KAAK08D,IAC1B,IAAK,IAAIr3D,EAAI,EAAGA,EAAIrF,KAAK08D,GAAIr3D,IACpB8C,KAAAA,IAAI9C,GAAK,IAAIoD,aAAa,GAGnCzI,KAAKO,IAAM,IAAIkI,aAAa,GAGhC+zD,GAAKt8D,UAAUob,QAAU,SAASza,EAAOi8D,EAAUrwD,EAAQswD,GAWlD,IATDN,IAAAA,EAAKz8D,KAAKy8D,GACVC,EAAK18D,KAAK08D,GACVC,EAAK38D,KAAK28D,GACVx0D,EAAMnI,KAAKmI,IACX5H,EAAMP,KAAKO,IACXq8D,EAAS58D,KAAK48D,OACdC,EAAM78D,KAAK68D,IAGNt3D,EAAI,EAAGA,EAAIm3D,EAAIn3D,IACpB4C,EAAI5C,GAAG,GAAM1E,EAAMi8D,EAAW,EAAIv3D,GAAKq3D,EAAOr3D,GAAG,GAAO1E,EAAMi8D,EAAWL,EAAK,EAAI,EAAIl3D,GAAKq3D,EAAOr3D,GAAG,GACrG4C,EAAI5C,GAAG,GAAM1E,EAAMi8D,EAAWL,EAAK,EAAI,EAAIl3D,GAAKq3D,EAAOr3D,GAAG,GAAO1E,EAAMi8D,EAAW,EAAIv3D,GAAKq3D,EAAOr3D,GAAG,GAIzGs3D,EAAIvhD,QAAQnT,GAAK,GAGZ,IAAI5C,EAAI,EAAGA,EAAIm3D,EAAIn3D,IACpBhF,EAAI,GAAK4H,EAAI5C,GAAG,GAChBhF,EAAI,GAAK4H,EAAI5C,GAAG,GAChB4C,EAAI5C,GAAG,GAAMhF,EAAI,GAAKq8D,EAAOr3D,GAAG,GAAOhF,EAAI,GAAKq8D,EAAOr3D,GAAG,GAC1D4C,EAAI5C,GAAG,GAAMhF,EAAI,GAAKq8D,EAAOr3D,GAAG,GAAOhF,EAAI,GAAKq8D,EAAOr3D,GAAG,GAI9D,IAASA,EAAI,EAAGA,EAAIo3D,EAAIp3D,GAAK,EACzBkH,EAAOswD,EAAY,EAAIx3D,GAAK4C,EAAIw0D,EAAKp3D,GAAG,GACxCkH,EAAOswD,EAAY,EAAI,EAAIx3D,GAAK4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GAEhDkH,EAAOswD,EAAY,EAAI,EAAIx3D,IAAM4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GACjDkH,EAAOswD,EAAY,EAAI,EAAIx3D,IAAM4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GAEjDkH,EAAOswD,EAAYL,EAAK,EAAIn3D,GAAK4C,EAAI5C,GAAG,GACxCkH,EAAOswD,EAAYL,EAAK,EAAI,EAAIn3D,GAAK4C,EAAI,EAAI5C,GAAG,GAEhDkH,EAAOswD,EAAYL,EAAK,EAAI,EAAIn3D,IAAM4C,EAAIu0D,EAAK,EAAIn3D,GAAG,GACtDkH,EAAOswD,EAAYL,EAAK,EAAI,EAAIn3D,IAAM4C,EAAIu0D,EAAK,EAAIn3D,GAAG,GAEtDkH,EAAOswD,EAAYN,EAAK,EAAIl3D,GAAK4C,EAAIw0D,EAAKp3D,GAAG,GAC7CkH,EAAOswD,EAAYN,EAAK,EAAI,EAAIl3D,GAAK4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GAErDkH,EAAOswD,EAAYN,EAAK,EAAI,EAAIl3D,IAAM4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GACtDkH,EAAOswD,EAAYN,EAAK,EAAI,EAAIl3D,IAAM4C,EAAIw0D,EAAK,EAAIp3D,GAAG,GAEtDkH,EAAOswD,EAAYN,EAAKC,EAAK,EAAIn3D,IAAM4C,EAAI5C,GAAG,GAC9CkH,EAAOswD,EAAYN,EAAKC,EAAK,EAAI,EAAIn3D,IAAM4C,EAAI,EAAI5C,GAAG,GAEtDkH,EAAOswD,EAAYN,EAAKC,EAAK,EAAI,EAAIn3D,GAAK4C,EAAIu0D,EAAK,EAAIn3D,GAAG,GAC1DkH,EAAOswD,EAAYN,EAAKC,EAAK,EAAI,EAAIn3D,GAAK4C,EAAIu0D,EAAK,EAAIn3D,GAAG,IAIlE,IChGI6wD,GAAW/xD,GACXm4D,GD+FaA,GC7FjB,SAASQ,GAAWC,EAAa55B,GAC7B,GAAI45B,EACA,MAAM,IAAIz7D,MAAM,kCAGfF,KAAAA,OAAS,KACT47D,KAAAA,YAAc,IAEdr7B,KAAAA,KAAO7hC,KAAKsB,OAAStB,KAAKk9D,aAAe,EAC9Cl9D,KAAKm9D,MAAQn9D,KAAKk9D,YAAc,EAE3BE,KAAAA,UAAY,IAAIZ,GAAwB,EAAnBx8D,KAAKk9D,aAC1BG,KAAAA,SAAY,IAAIb,GAAmB,EAAdx8D,KAAKsB,QAE/BtB,KAAKs9D,SAAW,IAAIr8D,MAAMoiC,GACrB,IAAA,IAAIh+B,EAAI,EAAGA,EAAIg+B,EAAUh+B,IACrBi4D,KAAAA,SAASj4D,GAAK,IAAIoD,aAAazI,KAAKsB,QAGxC6G,KAAAA,IAAM,IAAIM,aAAa,EAAIzI,KAAKsB,QAGzC,SAASi8D,GAAmB5xD,GAEnB,IADL,IAAI8B,EAAI,IAAIhF,aAAakD,GAChBtG,EAAI,EAAGA,EAAIsG,EAAKtG,IACrBoI,EAAEpI,GAAK4D,KAAKwyD,KAAKp2D,EAAI,KAAQ4D,KAAKy/C,IAAM,EAAM/8C,KAElD,OAAO8B,EAGX,SAAS+vD,GAAkBC,EAAO9xD,GAOzB,IANL,IAAI+xD,EAAMz0D,KAAKy/C,GAAK/8C,EAChB5C,EAAM,IAAIN,aAAakD,GACvBgyD,EAAM,EACNn/C,EAAI,IAAI/V,aAAakD,GACrBiyD,EAAUH,EAAQC,GAAQD,EAAQC,GAE7B5sD,EAAI,EAAGA,EAAInF,EAAKmF,IAAK,CAIrB,IAHDvQ,IAAAA,EAAMuQ,GAAKnF,EAAMmF,GAAK8sD,EACtBC,EAAS,EAEJv4D,EAAI,GAAIA,EAAI,EAAGA,IACpBu4D,EAASA,EAASt9D,GAAO+E,EAAIA,GAAK,EAGtCq4D,GAAOE,EACPr/C,EAAE1N,GAAK6sD,EAGXA,IACK,IAAI7sD,EAAI,EAAGA,EAAInF,EAAKmF,IACrB/H,EAAI+H,GAAK7H,KAAKkwD,KAAK36C,EAAE1N,GAAK6sD,GAG9B,OAAO50D,EAGX,IAAM+0D,GAAYP,GAAmB,MAC/BQ,GAAYR,GAAmB,KAC/BS,GAAYR,GAAkB,EAAG,MACjCS,GAAYT,GAAkB,EAAG,KACjCU,GAAe,CAACJ,GAAWE,IAC3BG,GAAgB,CAACJ,GAAUE,IAEjCjB,GAAW98D,UAAUob,QAAU,SAASu5C,EAAMh0D,EAAO4L,EAAQoiC,GACzD,IAAIiG,EAAU90C,KAAKs9D,SAASzuB,GACxB0oB,EAAc1C,EAAK0C,YAAY,GAC/B6G,EAAkBvJ,EAAK0C,YAAY,GACnC8G,EAAcH,GAAa3G,GAC3B+G,EAAeH,GAAc5G,GAC7BgH,EAAkBL,GAAaE,GAC/BI,EAAmBL,GAAcC,GACjC98D,EAAStB,KAAKsB,OACdm9D,EAAWz+D,KAAKk9D,YAChBr7B,EAAM7hC,KAAK6hC,IACXs7B,EAAQn9D,KAAKm9D,MACbh1D,EAAMnI,KAAKmI,IACXk1D,EAAWr9D,KAAKq9D,SAChBD,EAAYp9D,KAAKo9D,UAEbvI,OAAAA,EAAKE,gBACJqB,KAAAA,GAASe,mBACVkG,EAAS/hD,QAAQza,EAAO,EAAGsH,EAAK,GAG3B,IAAA,IAAI9C,EAAI,EAAGA,EAAI/D,EAAQ+D,IACxBoH,EAAOpH,GAAKyvC,EAAQzvC,GAAM8C,EAAI9C,GAAKk5D,EAAgBl5D,GAIlD,IAAIA,EAAI,EAAGA,EAAI/D,EAAQ+D,IACxByvC,EAAQzvC,GAAK8C,EAAI7G,EAAS+D,GAAKg5D,EAAY/8D,EAAS,EAAI+D,GAG5D,MAEC+wD,KAAAA,GAASgB,oBACViG,EAAS/hD,QAAQza,EAAO,EAAGsH,EAAK,GAG3B,IAAI9C,EAAI,EAAGA,EAAI/D,EAAQ+D,IACxBoH,EAAOpH,GAAKyvC,EAAQzvC,GAAM8C,EAAI9C,GAAKk5D,EAAgBl5D,GAIlD,IAAIA,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrByvC,EAAQzvC,GAAK8C,EAAI7G,EAAS+D,GAGzB,IAAIA,EAAI,EAAGA,EAAIo5D,EAAUp5D,IAC1ByvC,EAAQjT,EAAMx8B,GAAK8C,EAAI7G,EAASugC,EAAMx8B,GAAKi5D,EAAaG,EAAWp5D,EAAI,GAGtE,IAAIA,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrByvC,EAAQjT,EAAM48B,EAAWp5D,GAAK,EAGlC,MAEC+wD,KAAAA,GAASiB,qBACL,IAAIhyD,EAAI,EAAGA,EAAI,EAAGA,IACnB+3D,EAAU9hD,QAAQza,EAAOwE,EAAIo5D,EAAUt2D,EAAK,EAAI9C,EAAIo5D,GAInD,IAAIp5D,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrBoH,EAAOpH,GAAKyvC,EAAQzvC,GAGnB,IAAIA,EAAI,EAAGA,EAAIo5D,EAAUp5D,IAC1BoH,EAAOo1B,EAAMx8B,GAAKyvC,EAAQjT,EAAMx8B,GAAK8C,EAAI9C,GAAKm5D,EAAiBn5D,GAC/DoH,EAAOo1B,EAAM,EAAI48B,EAAWp5D,GAAKyvC,EAAQjT,EAAiB,EAAX48B,EAAep5D,GAAM8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,EAAXs2D,EAAep5D,GAAMi5D,EAAaj5D,GACrKoH,EAAOo1B,EAAM,EAAI48B,EAAWp5D,GAAKyvC,EAAQjT,EAAiB,EAAX48B,EAAep5D,GAAM8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaj5D,GACpKoH,EAAOo1B,EAAM,EAAI48B,EAAWp5D,GAAKyvC,EAAQjT,EAAiB,EAAX48B,EAAep5D,GAAM8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaj5D,GAEhKA,EAAI83D,IACJ1wD,EAAOo1B,EAAM,EAAI48B,EAAWp5D,GAAKyvC,EAAQjT,EAAiB,EAAX48B,EAAep5D,GAAM8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaj5D,IAIvK,IAAIA,EAAI,EAAGA,EAAIo5D,EAAUp5D,IACvBA,GAAK83D,IACJroB,EAAQjT,EAAM,EAAI48B,EAAWp5D,EAAI/D,GAAW6G,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaj5D,IAEhJyvC,EAAQjT,EAAM,EAAI48B,EAAWp5D,EAAI/D,GAAW6G,EAAe,EAAXs2D,EAAep5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,GAAXs2D,EAAgBp5D,GAAKi5D,EAAaj5D,GAC7IyvC,EAAQjT,EAAM,EAAI48B,EAAWp5D,EAAI/D,GAAW6G,EAAe,GAAXs2D,EAAgBp5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,GAAXs2D,EAAgBp5D,GAAGi5D,EAAaj5D,GAC5IyvC,EAAQjT,EAAM,EAAI48B,EAAWp5D,EAAI/D,GAAW6G,EAAe,GAAXs2D,EAAgBp5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAAO8C,EAAe,GAAXs2D,EAAgBp5D,GAAGi5D,EAAaj5D,GAC5IyvC,EAAQjT,EAAM,EAAI48B,EAAWp5D,EAAI/D,GAAW6G,EAAe,GAAXs2D,EAAgBp5D,GAAKi5D,EAAaG,EAAW,EAAIp5D,GAGhG,IAAIA,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrByvC,EAAQjT,EAAM48B,EAAWp5D,GAAK,EAGlC,MAEC+wD,KAAAA,GAASkB,mBACV+F,EAAS/hD,QAAQza,EAAO,EAAGsH,EAAK,GAI3B,IAAI9C,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrBoH,EAAOpH,GAAKyvC,EAAQzvC,GAGnB,IAAIA,EAAI,EAAGA,EAAIo5D,EAAUp5D,IAC1BoH,EAAOo1B,EAAMx8B,GAAKyvC,EAAQjT,EAAMx8B,GAAM8C,EAAI05B,EAAMx8B,GAAKm5D,EAAiBn5D,GAGrE,IAAIA,EAAI,EAAGA,EAAIw8B,EAAKx8B,IACrBoH,EAAOo1B,EAAM48B,EAAWp5D,GAAKyvC,EAAQjT,EAAM48B,EAAWp5D,GAAK8C,EAAI05B,EAAM48B,EAAWp5D,GAI/E,IAAIA,EAAI,EAAGA,EAAI/D,EAAQ+D,IACxByvC,EAAQzvC,GAAK8C,EAAI7G,EAAS+D,GAAKg5D,EAAY/8D,EAAS,EAAI+D,KAOxE,ICzLI0rC,GAAc1sC,EACdwuD,GAAcvuD,GACd8xD,GAAc7xD,GACd+0D,GAAcj3B,GACdu3B,GAAct3B,GACd06B,GDoLaA,GCnLbhb,GAAc9a,GAED6J,GAAG3O,QAAQkvB,QAAO,WAC/BvgB,GAAG3O,QAAQyH,SAAS,OAAQ7pC,MAC5B+wC,GAAG3O,QAAQyH,SAAS,OAAQ7pC,MAkB5BA,KAAKE,UAAUiM,KAAO,WACpBnM,KAAKue,OAAO2mB,eAAgB,GAG9BllC,KAAKE,UAAUyiC,UAAY,SAASvhC,GAC5BL,IAAAA,EAAOgwC,GAAGhtC,OAAOm+B,WAAW9gC,GAC5B8I,EAAS,IAAI6mC,GAAG9mC,UAAUlJ,GAS9B,GAPKyb,KAAAA,OAAS,GAETA,KAAAA,OAAOu2C,QAAU7oD,EAAO/E,KAAK,GAtBnB,KAuBXnF,KAAKwc,OAAOu2C,UACZ/yD,KAAKwc,OAAOu2C,QAAU,GAAK7oD,EAAO/E,KAAK,IAEtCqX,KAAAA,OAAOqsB,YAAc3+B,EAAO/E,KAAK,GACN,KAA5BnF,KAAKwc,OAAOqsB,YAAsB,CAC7BrsB,KAAAA,OAAO4mB,WAAal5B,EAAO/E,KAAK,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAI28C,GAAO4Q,aAAatxD,OAAQ+D,IACxC28C,GAAAA,GAAO4Q,aAAavtD,KAAOrF,KAAKwc,OAAO4mB,WAAY,CACnDpjC,KAAKwc,OAAOqsB,YAAcxjC,EAC1B,YAIRrF,KAAKwc,OAAO4mB,WAAa4e,GAAO4Q,aAAa5yD,KAAKwc,OAAOqsB,aAMrD,OAHHrsB,KAAAA,OAAOy2C,WAAa/oD,EAAO/E,KAAK,GAChCoZ,KAAAA,OAAOuoB,iBAAmB9mC,KAAKwc,OAAOy2C,WAEnCjzD,KAAKwc,OAAOu2C,SAChB,KA9Ca,EA+Cb,KA9CW,EA+CX,KA9CY,EA+CR,GAAI7oD,EAAO/E,KAAK,GACZ,MAAM,IAAI3D,MAAM,iCAiBpB,GAfAxB,KAAKwc,OAAO02C,YAAc,KAEtBhpD,EAAO/E,KAAK,IACZ+E,EAAOvG,QAAQ,IAEfuG,EAAO/E,KAAK,KACRnF,KAAKwc,OAAOu2C,QAAU,KACjBv2C,KAAAA,OAAOkiD,sBAAwBx0D,EAAO/E,KAAK,GAC3CqX,KAAAA,OAAOmiD,sBAAwBz0D,EAAO/E,KAAK,GAC3CqX,KAAAA,OAAOoiD,uBAAyB10D,EAAO/E,KAAK,IAGrD+E,EAAOvG,QAAQ,IA1DH,IA6DZ3D,KAAKwc,OAAOy2C,WAEZ,MADA/oD,EAAOvG,QAAQ,GACT,IAAInC,MAAM,qBAGpB,MAEJ,QACU,MAAA,IAAIA,MAAM,eAAiBxB,KAAKwc,OAAOu2C,QAAU,mBAG1D8L,KAAAA,YAAc,IAAI7B,IAAW,EAAOh9D,KAAKwc,OAAOy2C,aAazDjzD,KAAKE,UAAUqhC,UAAY,WACvB,IAAIr3B,EAASlK,KAAK+K,UAGM,OAApBb,EAAOxE,KAAK,KACZmtD,GAAYhmB,WAAW3iC,GAEtB40D,KAAAA,KAAO,GAML,IALHC,IAAAA,EAAW,GACXviD,EAASxc,KAAKwc,OACd02C,EAAc12C,EAAO02C,YACrB8L,EAAc,KAdF,KAgBRA,EAAc90D,EAAO/E,KAAK,KAAqB,CACnD,IAAI69B,EAAK94B,EAAO/E,KAAK,GAErB,OAAQ65D,GAEJ,KA5BQ,EA6BR,KA1BQ,EA2BJ,IAAItJ,EAAM,IAAIU,GAASp2D,KAAKwc,QAC5Bk5C,EAAI1yB,GAAKA,EACT+7B,EAAS5zD,KAAKuqD,GACdA,EAAI7yB,OAAO34B,EAAQsS,GAAQ,GAC3B,MAGJ,KApCQ,EAqCJ,IAAIm9C,EAAM,IAAIL,GAAWt5D,KAAKwc,QAC9Bm9C,EAAI32B,GAAKA,EACT+7B,EAAS5zD,KAAKwuD,GACdA,EAAI92B,OAAO34B,EAAQsS,GACnB,MAGJ,KA3CQ,EA4CJ,IAAIu+C,EAAM,IAAInB,GAAW55D,KAAKwc,QAC9Bxc,KAAK8+D,KAAK3zD,KAAK4vD,GACfA,EAAIl4B,OAAO34B,EAAQsS,GACnB,MAGJ,KAhDQ,EAiDJ,IAAIhS,EAAQN,EAAO/E,KAAK,GACpBsf,EAAQva,EAAO/E,KAAK,GAEV,MAAVsf,IACAA,GAASva,EAAO/E,KAAK,IAErBqF,GACAN,EAAOM,QAGXN,EAAOvG,QAAgB,EAAR8gB,GACf,MAGJ,KA9DQ,EA+DJ,MAAM,IAAIjjB,MAAM,qBAIpB,KAlEQ,EAmEO,KAAPwhC,IACAA,GAAM94B,EAAO/E,KAAK,GAAK,GAG3B+E,EAAOvG,QAAa,EAALq/B,GACf,MAEJ,QACI,MAAM,IAAIxhC,MAAM,oBAI5B0I,EAAOM,QACPxK,KAAKsb,QAAQyjD,GAQR,IALDh+D,IAAAA,EAAOf,KAAKe,KACZsiC,EAAWtiC,EAAKO,OAChBmL,EAAS,IAAIhE,aAAayqD,EAAc7vB,GACxC/9B,EAAI,EAECC,EAAI,EAAGA,EAAI2tD,EAAa3tD,IACxB,IAAA,IAAIF,EAAI,EAAGA,EAAIg+B,EAAUh+B,IAC1BoH,EAAOnH,KAAOvE,EAAKsE,GAAGE,GAAK,MAInC,OAAOkH,GAGXzM,KAAKE,UAAUob,QAAU,SAASyjD,GAWzB,IAVL,IAAI17B,EAAWrjC,KAAKwc,OAAOy2C,WAMvBtnD,EAFO,EAEM3L,KAAKwc,OAAO02C,YACzBnyD,EAAOf,KAAKe,KAAO,GAGdsE,EAAI,EAAGA,EAAIg+B,EAAUh+B,IAC1BtE,EAAKsE,GAAK,IAAIoD,aAAakD,GAG3BkjC,IAAAA,EAAU,EACd,IAASxpC,EAAI,EAAGA,EAAI05D,EAASz9D,QAAUutC,EAAUxL,EAAUh+B,IAAK,CAC5D,IAAI8H,EAAI4xD,EAAS15D,GAEb8H,GAAAA,aAAaipD,GACbvnB,GAAW7uC,KAAKi/D,cAAc9xD,EAAG0hC,QAC9B,GAAI1hC,aAAamsD,GACpBt5D,KAAKk/D,YAAY/xD,EAAG0hC,GACpBA,GAAW,MACR,CAAA,KAAI1hC,aAAaysD,IAGpB,MAAM,IAAIp4D,MAAM,0BAFhBqtC,OAOP3uC,KAAAA,UAAU++D,cAAgB,SAASE,EAAStwB,GAC7C,IAAIkkB,EAAU/yD,KAAKwc,OAAOu2C,QACtB8B,EAAOsK,EAAQtK,KACf9zD,EAAOo+D,EAAQp+D,KAEfgyD,GA7Na,IA6NbA,EACA,MAAM,IAAIvxD,MAAM,iCAEhBuxD,GA9NY,IA8NZA,EACA,MAAM,IAAIvxD,MAAM,gCAYhBuxD,GAVCqM,KAAAA,qBAAqBD,EAASvF,GAAWI,WAAYj5D,EAAM,MAE5Do+D,EAAQlH,YACRkH,EAAQxI,IAAIr7C,QAAQ6jD,EAASp+D,GAAM,GAEvCf,KAAKo/D,qBAAqBD,EAASvF,GAAWK,UAAWl5D,EAAM,MAG/Df,KAAK6+D,YAAYvjD,QAAQu5C,EAAM9zD,EAAMf,KAAKe,KAAK8tC,GAAUA,GAzOzC,IA2OZkkB,EACA,MAAM,IAAIvxD,MAAM,gCAIhB29D,GAFJn/D,KAAKo/D,qBAAqBD,EAASvF,GAAWM,YAAal6D,KAAKe,KAAK8tC,GAAU,MAE3EswB,EAAQjH,YACR,MAAM,IAAI12D,MAAM,gCAEhB,GAAAxB,KAAKq/D,WACL,MAAM,IAAI79D,MAAM,uBAEpB,OAAO,GAGNtB,KAAAA,UAAUg/D,YAAc,SAASC,EAAStwB,GAC3C,IAAIkkB,EAAU/yD,KAAKwc,OAAOu2C,QACtBtC,EAAO0O,EAAQ1O,KACf+I,EAAQ2F,EAAQ3F,MAChB8F,EAAS7O,EAAKoE,KACd0K,EAAS/F,EAAM3E,KACf2K,EAAS/O,EAAK1vD,KACd0+D,EAASjG,EAAMz4D,KAMfgyD,GAHAoM,EAAQxH,cAAgBwH,EAAQzF,aAChC15D,KAAK0/D,UAAUP,EAASK,EAAQC,GAtQnB,IAwQb1M,EACA,MAAM,IAAIvxD,MAAM,iCAKhBuxD,GAFJ/yD,KAAK2/D,UAAUR,EAASK,EAAQC,GA1QhB,IA4QZ1M,EACA,MAAM,IAAIvxD,MAAM,gCAgBhBuxD,GAdCqM,KAAAA,qBAAqBD,EAASvF,GAAWI,WAAYwF,EAAQC,GAE9DhP,EAAKwH,YACLxH,EAAKkG,IAAIr7C,QAAQm1C,EAAM+O,GAAQ,GAE/BhG,EAAMvB,YACNuB,EAAM7C,IAAIr7C,QAAQk+C,EAAOiG,GAAQ,GAErCz/D,KAAKo/D,qBAAqBD,EAASvF,GAAWK,UAAWuF,EAAQC,GAGjEz/D,KAAK6+D,YAAYvjD,QAAQgkD,EAAQE,EAAQx/D,KAAKe,KAAK8tC,GAAUA,GAC7D7uC,KAAK6+D,YAAYvjD,QAAQikD,EAAQE,EAAQz/D,KAAKe,KAAK8tC,EAAU,GAAIA,EAAU,GA3R3D,IA6RZkkB,EACA,MAAM,IAAIvxD,MAAM,gCAIhBivD,GAFC2O,KAAAA,qBAAqBD,EAASvF,GAAWM,YAAal6D,KAAKe,KAAK8tC,GAAU7uC,KAAKe,KAAK8tC,EAAU,IAE/F4hB,EAAKyH,YACL,MAAM,IAAI12D,MAAM,gCAEhBg4D,GAAAA,EAAMtB,YACN,MAAM,IAAI12D,MAAM,gCAEhB,GAAAxB,KAAKq/D,WACL,MAAM,IAAI79D,MAAM,wBAInBtB,KAAAA,UAAUy/D,UAAY,SAASR,EAAS1O,EAAM+I,GAW1C,IAVL,IAAI9D,EAAMyJ,EAAQ3F,MACd3E,EAAOa,EAAIb,KACX5sB,EAAU4sB,EAAKqB,WACf0C,EAAe/D,EAAKsD,WACpBvC,EAASf,EAAKe,OACdU,EAAYZ,EAAIY,UAChBE,EAAUd,EAAIc,QACdC,EAAef,EAAIe,aAEnBv1C,EAAM,EAAG23C,EAAW,EACfh0C,EAAI,EAAGA,EAAI+zC,EAAc/zC,IAAK,CAC9B,IAAA,IAAIxf,EAAI,EAAGA,EAAIuwD,GAAS,CACzB,IAAInsD,EAAM+sD,EAAQt1C,GAElB,GAAIo1C,EAAUp1C,KAASk1C,GAASc,cAAgBZ,EAAUp1C,KAASk1C,GAASa,cACjE5xD,KAAAA,EAAIoE,EAAKpE,IAAK6b,IAAO,CACxB,IAAI1X,EAAI8sD,EAAUp1C,KAASk1C,GAASc,aAAe,GAAK,EACpDiI,EAAQzF,cACRlwD,GAAK21D,EAAQ5F,QAAQr4C,IAAQ,EAAI,GAGrC,IADA,IAAI+kC,EAAQz8C,EAAIitD,EAAav1C,GACpBqD,EAAI,EAAGA,EAAIswC,EAAK2C,YAAY3yC,GAAIN,IAIhC,IAHDnZ,IAAAA,EAAMytD,EAAe,IAAJt0C,EAAU0jB,EAAQ5iC,GACnCsG,EAAMs8B,EAAQ5iC,EAAI,GAAK4iC,EAAQ5iC,GAE1BC,EAAI,EAAGA,EAAIqG,EAAKrG,IACrBk0D,EAAMpuD,EAAM9F,GAAKmrD,EAAKrlD,EAAM9F,GAAK2gD,OAK7C/kC,GAAOzX,EAAMpE,EACbA,EAAIoE,EAIZovD,GAAkC,IAAtBhE,EAAK2C,YAAY3yC,KAKhC3kB,KAAAA,UAAUw/D,UAAY,SAASP,EAAS1O,EAAM+I,GAU1C,IATL,IAAI9D,EAAMyJ,EAAQ1O,KACdoE,EAAOa,EAAIb,KACX5sB,EAAU4sB,EAAKqB,WACf0C,EAAe/D,EAAKsD,WACpBvC,EAASf,EAAKe,OACdgK,EAASlK,EAAIY,UACbuJ,EAASV,EAAQ3F,MAAMlD,UAEvBuC,EAAW,EAAG33C,EAAM,EACf2D,EAAI,EAAGA,EAAI+zC,EAAc/zC,IAAK,CACnC,IAAK,IAAIxf,EAAI,EAAGA,EAAIuwD,EAAQvwD,IAAK6b,IACzBi+C,GAAAA,EAAQ5F,QAAQr4C,IAAQ0+C,EAAO1+C,GAAOk1C,GAASY,UAAY6I,EAAO3+C,GAAOk1C,GAASY,SAClF,IAAK,IAAIzyC,EAAI,EAAGA,EAAIswC,EAAK2C,YAAY3yC,GAAIN,IAEhC,IADDnZ,IAAAA,EAAMytD,EAAe,IAAJt0C,EAAU0jB,EAAQ5iC,GAC9BC,EAAI,EAAGA,EAAI2iC,EAAQ5iC,EAAI,GAAK4iC,EAAQ5iC,GAAIC,IAAK,CAClD,IAAI6zB,EAAIs3B,EAAKrlD,EAAM9F,GAAKk0D,EAAMpuD,EAAM9F,GACpCmrD,EAAKrlD,EAAM9F,IAAMk0D,EAAMpuD,EAAM9F,GAC7Bk0D,EAAMpuD,EAAM9F,GAAK6zB,EAKjC0/B,GAAkC,IAAtBhE,EAAK2C,YAAY3yC,KAIrC7kB,KAAKE,UAAUk/D,qBAAuB,SAASD,EAAS/E,EAAe0F,EAAOC,GAK1E,IAJIjB,IAAAA,EAAO9+D,KAAK8+D,KACZkB,EAAgBb,aAAmB7F,GACnC2G,EAAgB7F,IAAkBR,GAAWM,YAAc,2BAA6B,yBAEnF70D,EAAI,EAAGA,EAAIy5D,EAAKx9D,OAAQ+D,IAAK,CAClC,IAAI01D,EAAM+D,EAAKz5D,GACXgG,EAAQ,EAEZ,GAAI0vD,EAAIX,gBAAkBA,EACtB,IAAK,IAAI5wD,EAAI,EAAGA,EAAIuxD,EAAIV,aAAc7wD,IAAK,CACvC,IAAIuwD,EAAWgB,EAAIhB,SAASvwD,GACxBuxD,EAAIlB,YAAYrwD,KAAOw2D,GAAiBjF,EAAIjB,SAAStwD,KAAO21D,EAAQn8B,IACnD,IAAb+2B,IACAgB,EAAIkF,GAAe50D,EAAOy0D,GACtB/F,GAAU1uD,KAGD,IAAb0uD,GACAgB,EAAIkF,GAAe50D,IAAS00D,IAGhC10D,GAAS,GAAkB,IAAb0uD,EAAiB,EAAI,SCvZ3D,IAAIhpB,GAAK1sC,EAES0sC,GAAG3O,QAAQkvB,QAAO,WAChCvgB,GAAG3O,QAAQyH,SAAS,OAAQ7pC,MAE5BA,KAAKE,UAAUyiC,UAAY,SAASD,GAChC1iC,KAAK0iC,OAASA,EAGTw9B,KAAAA,QAAU,GACf,IAAK,IAAI76D,EAAI,EAAGA,EAAIrF,KAAKue,OAAOuoB,iBAAkBzhC,IACzC66D,KAAAA,QAAQ76D,GAAK,IAAImD,WAAWk6B,EAAOy9B,cAI5CngE,KAAKogE,UAAY,IAAI53D,WAAW,IAG9B63D,IAAAA,EAAc,IAAI/3D,WAAW,CACxB,EAAQ,IAAK,IAAU,KAAU,KAAU,KAAiB,EAAU,EAC7E,IAAU,IAAU,KAAU,KAAU,KAAU,KAAU,MAAU,QASpEg4D,EAAe,IAAIl4D,UAAU,CAC/B,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,IAS7BpI,KAAKE,UAAUqhC,UAAY,WACnBr3B,IAAAA,EAASlK,KAAK+K,UACd,GAACb,EAAOtF,UAAU,IAAlB,CAIJ,GAAmC,QAAZ,MAAlBsF,EAAO/E,KAAK,KACb,MAAM,IAAI3D,MAAM,qBAEJ0I,EAAO/E,KAAK,GAAE,IAU1Bk+B,EATAk9B,EAASr2D,EAAO/E,KAAK,GACrBq7D,EAASt2D,EAAO/E,KAAK,GACrBs7D,EAASv2D,EAAO/E,KAAK,GACrBu7D,EAAUx2D,EAAO/E,KAAK,GAQtBs7D,GANJv2D,EAAOvG,QAAQ,GAGV88D,KAAAA,OAASA,EAGVA,EA3Ba,EA4Bbp9B,EAAWo9B,EAAS,EACfA,KAAAA,OA5Bc,MA6BhB,CAAA,KAAIA,GA1BS,IA6BhB,MAAM,IAAIj/D,MAAM,wBAFhB6hC,EAAW,EAKf,GAAIA,IAAarjC,KAAKue,OAAOuoB,iBACzB,MAAM,IAAItlC,MAAM,sDAGpB,GAAgB,IAAZk/D,GAA6B,IAAZA,EACjB,MAAM,IAAIl/D,MAAM,4BAGpB,GADAxB,KAAK8sC,IAAMwzB,EAAaI,GACpB1gE,KAAK8sC,MAAQ9sC,KAAKue,OAAO4mB,eACzB,MAAM,IAAI3jC,MAAM,uDAKpB,IADIm/D,IAAAA,EAAO,EACe,IAAnBz2D,EAAO/E,KAAK,IACfw7D,IAGJ,IADIC,IAAAA,EAAsB12D,EAAO/E,KAAK,EAAIw7D,GACnCA,EAAO,EAAGA,IACbz2D,EAAOvG,QAAQ,GACfi9D,EAAuBA,GAAuB,EAAK12D,EAAO/E,KAAK,GAI/Do7D,GAAW,IAAXA,EACA,MAAM,IAAI/+D,MAAM,2BAUpB,GARIxB,KAAK6gE,UADW,IAAXN,EACYr2D,EAAO/E,KAAK,GAAK,EAClB,IAAXo7D,EACYr2D,EAAO/E,KAAK,IAAM,EAElBk7D,EAAYE,GAI7BC,EAAS,SAER,GAAe,KAAXA,EACQt2D,EAAO/E,KAAK,QACxB,GAAe,KAAXq7D,EACQt2D,EAAO/E,KAAK,QACxB,CAAA,GAAe,KAAXq7D,EAGL,MAAM,IAAIh/D,MAAM,4BAFH0I,EAAO/E,KAAK,IAI7B+E,EAAOvG,QAAQ,GAGV,IAAA,IAAI0B,EAAI,EAAGA,EAAIg+B,EAAUh+B,IACrBy7D,KAAAA,eAAez7D,GAExB6E,EAAOM,QACPN,EAAOvG,QAAQ,IAEf,IAAIo9D,EAAO/gE,KAAK8sC,IAAM,GAClBrgC,EAAS,IAAIzL,YAAYhB,KAAK6gE,UAAYx9B,GAAY09B,EAAO,EAAI,IACjE54D,EAAM44D,EAAO,IAAIv4D,WAAWiE,GAAU,IAAInE,WAAWmE,GACrDo0D,EAAY7gE,KAAK6gE,UACjBX,EAAUlgE,KAAKkgE,QACf56D,EAAI,EAER,OAAQtF,KAAKygE,QACT,KAlGmB,EAmGV,IAAA,IAAIl7D,EAAI,EAAGA,EAAIs7D,EAAWt7D,IACtB,IAAIF,EAAI,EAAGA,EAAIg+B,EAAUh+B,IAC1B8C,EAAI7C,KAAO46D,EAAQ76D,GAAGE,GAG9B,MAEJ,KAzGiB,EA0GR,IAAIF,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAAK,CAC5BorD,IAAAA,EAAOyP,EAAQ,GAAG76D,GAClBm0D,EAAQ0G,EAAQ,GAAG76D,GAEvB8C,EAAI7C,KAAOmrD,EACXtoD,EAAI7C,KAAQmrD,EAAO+I,EAEvB,MAEJ,KAlHkB,EAmHT,IAAIn0D,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAAK,CAC5BorD,EAAOyP,EAAQ,GAAG76D,GAClBm0D,EAAQ0G,EAAQ,GAAG76D,GAEvB8C,EAAI7C,KAAQmrD,EAAO+I,EACnBrxD,EAAI7C,KAAOk0D,EAEf,MAEJ,KA3HgB,GA4HP,IAAIn0D,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAAK,CAC5BorD,EAAOyP,EAAQ,GAAG76D,GAGtBorD,IAFI+I,EAAQ0G,EAAQ,GAAG76D,KAEN,EACjB8C,EAAI7C,KAAQmrD,EAAO+I,EACnBrxD,EAAI7C,KAAOmrD,GAKvB,OAAOtoD,IAGXnI,KAAKE,UAAU4gE,eAAiB,SAASjyB,GACjCmyB,IAAAA,EAAS,EACT92D,EAASlK,KAAK+K,UACd81D,EAAY7gE,KAAK6gE,UACjBX,EAAUlgE,KAAKkgE,QAWnB,GATKe,KAAAA,SAAWjhE,KAAK8sC,IACL,IAAZ+B,EAlJkB,IAmJd7uC,KAAKygE,QACLzgE,KAAKihE,WArJQ,IAuJbjhE,KAAKygE,QArJO,KAqJwBzgE,KAAKygE,QACzCzgE,KAAKihE,WAGT/2D,EAAO/E,KAAK,GACZ,MAAM,IAAI3D,MAAM,4BAEpB,IAAIQ,EAAOkI,EAAO/E,KAAK,GAEvB,GAAI+E,EAAO/E,KAAK,GAAI,CAEhB,IADA67D,EAAS,GACD92D,EAAO/E,KAAK,IAChB67D,IAECC,KAAAA,UAAYD,EAGrB,GAAIhhE,KAAKihE,SAAW,GAChB,MAAM,IAAIz/D,MAAM,gCAAkCxB,KAAKihE,SAAW,KAElEj/D,GAAS,IAATA,EAEK,IADDzB,IAAAA,EAAM2J,EAAO/E,KAAKnF,KAAKihE,UAAU,GAC5B57D,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAC3B66D,EAAQrxB,GAASxpC,GAAK9E,OAEvB,GAAa,IAATyB,EACH8qC,CAAAA,IAAAA,EAAM9sC,KAAKihE,SACV,IAAI57D,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAC3B66D,EAAQrxB,GAASxpC,GAAK6E,EAAO/E,KAAK2nC,GAAK,QAExC,GAAK9qC,GAAQ,GAAOA,GAAQ,GAC/BhC,KAAKkhE,sBAAsBryB,GAAgB,EAAP7sC,OAEjC,CAAA,KAAIA,GAAQ,IAIf,MAAM,IAAIR,MAAM,uBAHX2/D,KAAAA,oBAAoBtyB,EAA0B,IAAT,GAAP7sC,IAMvC,GAAIg/D,EACK,IAAI37D,EAAI,EAAGA,EAAIw7D,EAAWx7D,IAC3B66D,EAAQrxB,GAASxpC,KAAO27D,GAI/B9gE,KAAAA,UAAUghE,sBAAwB,SAASryB,EAASuyB,GAMhD,IALL,IAAIlB,EAAUlgE,KAAKkgE,QAAQrxB,GACvB3kC,EAASlK,KAAK+K,UACd+hC,EAAM9sC,KAAKihE,SAGN57D,EAAI,EAAGA,EAAI+7D,EAAiB/7D,IACjC66D,EAAQ76D,GAAK6E,EAAO/E,KAAK2nC,GAAK,GAElC9sC,KAAKqhE,iBAAiBxyB,EAASuyB,GAE3Bn8D,IAAAA,EAAI,EAAG+K,EAAI,EAAGxG,EAAI,EAAGiE,EAAI,EAc7B,OAZI2zD,EAAkB,IAClBn8D,EAAIi7D,EAAQkB,EAAkB,IAE9BA,EAAkB,IAClBpxD,EAAI/K,EAAIi7D,EAAQkB,EAAkB,IAElCA,EAAkB,IAClB53D,EAAIwG,EAAIkwD,EAAQkB,EAAkB,GAAKlB,EAAQkB,EAAkB,IAEjEA,EAAkB,IAClB3zD,EAAIjE,EAAI02D,EAAQkB,EAAkB,GAAK,EAAIlB,EAAQkB,EAAkB,GAAKlB,EAAQkB,EAAkB,IAEhGA,GACJ,KAAK,EACD,MAEJ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACD,IAAIE,EAAO,IAAI94D,WAAW,CAACvD,EAAG+K,EAAGxG,EAAGiE,IAChCozD,EAAY7gE,KAAK6gE,UAEhB,IAAIx7D,EAAI+7D,EAAiB/7D,EAAIw7D,EAAWx7D,IAAK,CAC9Ci8D,EAAKF,EAAkB,IAAMlB,EAAQ76D,GAErC,IAAK,IAAIC,EAAI87D,EAAkB,EAAG97D,GAAK,EAAGA,IACtCg8D,EAAKh8D,IAAMg8D,EAAKh8D,EAAI,GAGxB46D,EAAQ76D,GAAKi8D,EAAK,GAGtB,MAEJ,QACI,MAAM,IAAI9/D,MAAM,2BAA6B4/D,KAIpDlhE,KAAAA,UAAUihE,oBAAsB,SAAStyB,EAASuyB,GAO9C,IANDl3D,IAAAA,EAASlK,KAAK+K,UACdm1D,EAAUlgE,KAAKkgE,QAAQrxB,GACvB/B,EAAM9sC,KAAKihE,SACXJ,EAAY7gE,KAAK6gE,UAGZx7D,EAAI,EAAGA,EAAI+7D,EAAiB/7D,IACjC66D,EAAQ76D,GAAK6E,EAAO/E,KAAK2nC,GAAK,GAG9By0B,IAAAA,EAAar3D,EAAO/E,KAAK,GAAK,EAC9Bo8D,GAAe,KAAfA,EACA,MAAM,IAAI//D,MAAM,iCAEhBggE,IAAAA,EAASt3D,EAAO/E,KAAK,GAAG,GACxBq8D,GAAAA,EAAS,EACT,MAAM,IAAIhgE,MAAM,uCAEpB,IAAIigE,EAAS,IAAIj5D,WAAW,IACvB,IAAInD,EAAI,EAAGA,EAAI+7D,EAAiB/7D,IACjCo8D,EAAOp8D,GAAK6E,EAAO/E,KAAKo8D,GAAY,GAKxC,GAFAvhE,KAAKqhE,iBAAiBxyB,EAASuyB,GAE3BphE,KAAK8sC,KAAO,GAAI,CAChB,IAASznC,EAAI+7D,EAAiB/7D,EAAIw7D,EAAY,EAAGx7D,GAAK,EAAG,CAIrD,IAHA,IAAIoI,EAAIyyD,EAAQ76D,EAAI+7D,GAChBM,EAAK,EAAGC,EAAK,EAAGn4D,EAAI,EAEflE,EAAI87D,EAAkB,EAAG97D,EAAI,EAAGA,IAErCo8D,IADAl4D,EAAIi4D,EAAOn8D,IACDmI,EAEVk0D,GAAMn4D,GADNiE,EAAIyyD,EAAQ76D,EAAIC,IAKpBo8D,IADAl4D,EAAIi4D,EAAO,IACDh0D,EAEVk0D,GAAMn4D,GADNiE,EAAIyyD,EAAQ76D,IAAOq8D,GAAMF,GAEzBtB,EAAQ76D,EAAI,IAAOs8D,GAAMH,EAGzBn8D,GAAAA,EAAIw7D,EAAW,CACXlD,IAAAA,EAAM,EACL,IAAIr4D,EAAI,EAAGA,EAAI87D,EAAiB97D,IACjCq4D,GAAO8D,EAAOn8D,GAAK46D,EAAQ76D,EAAIC,EAAI,GAEvC46D,EAAQ76D,IAAOs4D,GAAO6D,OAItBI,CAAAA,IAAAA,EAAQ5hE,KAAKogE,UACZ,IAAI/6D,EAAI+7D,EAAiB/7D,EAAIw7D,EAAWx7D,IAAK,CAKzCC,IAHLs8D,EAAM,GAAK,EACXA,EAAM,GAAK,EAENt8D,EAAI,EAAGA,EAAI87D,EAAiB97D,IAE7Bu8D,EAAaD,EAAOH,EAAOn8D,GAAI46D,EAAQ76D,EAAIC,EAAI,IAKnD46D,EAAQ76D,IAAOu8D,EAAM,KAAOJ,EAAWI,EAAM,IAAO,GAAKJ,KAK/DM,IAAAA,EAAiB74D,KAAKC,IAAI,EAAG,IAKnC,SAAS24D,EAAaD,EAAO38D,EAAG+K,GAE5B,IAAIimD,EAAIhxD,EAAI+K,EACRc,EAAImlD,EAAI,EACRnlD,IACAmlD,GAAKA,GAET,IAAI8L,EAAS9L,EAAI6L,EAAkB,EAC/BE,EAAU/L,EAAI6L,EAAkB,EAChChxD,IACAixD,EAAiB,GAARA,EACTC,GAAUA,GAId,IAAIC,EAAML,EAAM,KAAO,GACnBM,EAAiB,MAAXN,EAAM,GACZO,EAAMP,EAAM,KAAO,GAQnBQ,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAErCD,IADAC,IARqB,MAAXX,EAAM,KAKE,MAARG,MAIK,GACfQ,GAAO,MAEPF,IADAC,GAAOH,GAPGJ,IAAU,OAQL,GACfO,GAAO,MAEPF,IADAC,GAAOH,GAXY,MAATF,MAYK,GACfK,GAAO,MACPD,GAAOH,GAfGD,IAAW,IAgBrBI,GAAO,MAGPR,EAAM,GAAMU,GAAO,GAAMC,EACzBX,EAAM,GAAMQ,GAAO,GAAMC,EAKxBniE,KAAAA,UAAUmhE,iBAAmB,SAASxyB,EAASuyB,GAC5Cl3D,IAAAA,EAASlK,KAAK+K,UACdy3D,EAAct4D,EAAO/E,KAAK,GAE1Bq9D,GAAAA,EAAc,EACd,MAAM,IAAIhhE,MAAM,kCAAoCghE,GAExD,IAAIC,EAAav4D,EAAO/E,KAAK,GACzB+nC,EAAWltC,KAAK6gE,YAAc4B,EAElC,GAAIrB,EAAkBl0B,EAClB,MAAM,IAAI1rC,MAAM,2BAA6B4/D,EAAkB,MAAQl0B,GAM3E,IAJA,IAAIgzB,EAAUlgE,KAAKkgE,QAAQrxB,GACvBzJ,EAASg8B,EACT/7D,EAAI+7D,EAECsB,EAAY,EAAGA,EAAa,GAAKD,EAAaC,IAAa,CAChE,IAAIniE,EAAM2J,EAAO/E,KAAqB,IAAhBq9D,EAAoB,EAAI,GAE1CjiE,GAAAA,KAAyB,IAAhBiiE,EAAoB,GAAK,IAElC,IADAjiE,EAAM2J,EAAO/E,KAAK,GACXE,EAAI6nC,EAAS7nC,IAChB66D,EAAQ96B,KAAYl7B,EAAO/E,KAAK5E,GAAK,QAGzC,KAAO8E,EAAI6nC,EAAS7nC,IAChB66D,EAAQ96B,KAAYplC,KAAK2iE,OAAOpiE,EA7BhC,MA6B8C,GAGtD8E,EAAI,IAMPnF,KAAAA,UAAUyiE,OAAS,SAASp9D,EAAG8R,EAAOurD,GACnC7hE,IAAAA,EAAOf,KAAK+K,UACZpG,EAAS5D,EAAKoJ,YACdhC,EAAMpH,EAAK2E,KAAK,GAAKf,IAAWA,EAChC8iB,EAAI,EAEJxZ,EAAM,GAkCL40D,SAAIhiE,GACL4L,IAAAA,EAAS,EACTq2D,EAAU,EAEd,QACIA,EAAUjiE,IAAU,MAEpB4L,GAAU,EAGI,KADdq2D,EAAUjiE,IAAU,OAEpB4L,GAAU,EAGI,KADdq2D,EAAUjiE,IAAU,MAEpB4L,GAAU,EAGI,KADdq2D,EAAUjiE,MAIV,OAFA4L,GAAU,EAKE,IAAVq2D,EAGFA,KAAa,EAFbr2D,GAAU,EAId,OAAc,EAAVq2D,EACOr2D,EAEG,EAAVq2D,EACOr2D,EAAS,EAEN,EAAVq2D,EACOr2D,EAAS,EAEN,EAAVq2D,EACOr2D,EAAS,EAGbA,EAAS,EA5EDo2D,CAAU,EAAN16D,GAEf8F,GAAAA,EAAM1I,GAAK,GAAuB,GAAK0I,EAAMoJ,EAC7ClP,KAAS8F,EAAM1I,EACf4C,GAAQ,GAAK8F,GAAQ1I,EAErBxE,EAAK4C,QAAQ,GAAK4B,EAAI0I,GACtBwZ,EAAItf,MAED,CACH,IAAK,IAAI9C,EAAI,EAAoB,IAAjBtE,EAAKoE,KAAK,GAAUE,IAChC8C,EAAMpH,EAAK2E,KAAK,GAAKf,IAAWA,EAQhC8iB,EANApiB,EAAIgS,EAAQ,GAERlP,EADA5C,EACMxE,EAAKoE,KAAKI,GAEV,IAECF,GAAKE,GAETF,IAAMgS,EAAQ,GACrBlP,EAAMpH,EAAKoE,KAAKy9D,IACN,GAGL,EAILn7C,OAAAA,GAAK,IAAW,EAAJA,OC/e5B,WACMs7C,IAAAA,EAAY,GAAGlhD,eAGnBkvB,EAAGiyB,WAAc,SAASrjE,GAGfqjE,SAAAA,KAqBT,OA1BY,SAASC,EAAOC,GAAU,IAAK,IAAIrjE,KAAOqjE,EAAcH,EAAU5iE,KAAK+iE,EAAQrjE,KAAMojE,EAAMpjE,GAAOqjE,EAAOrjE,IAAQ,SAASke,IAAcnd,KAAAA,YAAcqiE,EAASllD,EAAK7d,UAAYgjE,EAAOhjE,UAAW+iE,EAAM/iE,UAAY,IAAI6d,EAAQklD,EAAM7iE,UAAY8iE,EAAOhjE,UAGrQijE,CAAUH,EAyBTjyB,EAAGjmC,cAnBJk4D,EAAW9iE,UAAUqM,MAAQ,WAC3B,OAAO,GAGTy2D,EAAW9iE,UAAUwwB,MAAQ,WAC3B,OAAO,GAGTsyC,EAAW9iE,UAAU2D,MAAQ,WAC3B,OAAO,GAGTm/D,EAAW9iE,UAAUkjE,SAAW,SAASriE,GACnCoH,IAAAA,EAAM,IAAI4oC,EAAGziC,OAAOvN,GACxB,OAAOf,KAAKyL,KAAK,OAAQtD,IAGpB66D,EAxBQ,GA4BjBjyB,EAAG7M,MAAMm/B,eAAiB,WACxB,IAAIlwC,EAEJ,OADAA,EAAS,IAAI4d,EAAGiyB,WACT,IAAIjyB,EAAG7M,MAAM/Q,IAGtB4d,EAAG5K,OAAOk9B,eAAiB,WACzB,IAAI79B,EAEJ,OADAA,EAAQuL,EAAG7M,MAAMm/B,iBACV,IAAItyB,EAAG5K,OAAOX,KAGtBrlC,UAAKH"}